/**
 * @fileoverview This file defines the Report Monitoring page for the Admin portal.
 * It provides a detailed view of all reports generated across the system,
 * with powerful filtering and search capabilities.
 */
'use client';
import * as React from 'react';
import {
  Card,
  CardContent,
  CardHeader,
  CardTitle,
  CardDescription,
} from "@/components/ui/card";
import {
  Table,
  TableBody,
  TableCell,
  TableHead,
  TableHeader,
  TableRow,
} from "@/components/ui/table";
import { Badge } from "@/components/ui/badge";
import { Button } from "@/components/ui/button";
import { Input } from "@/components/ui/input";
import {
  Select,
  SelectContent,
  SelectItem,
  SelectTrigger,
  SelectValue,
} from "@/components/ui/select";
import { Search } from "lucide-react";
import Link from "next/link";

/**
 * Renders the admin report monitoring page.
 * Allows filtering and viewing all generated reports.
 * @returns {JSX.Element} The report monitoring page component.
 */
export default function ReportMonitoringPage() {
  React.useEffect(() => {
                document.title = "Admin Report Monitoring";
                }, []);
  
  // In a real application, this data would be fetched from a database with pagination.
  const reportsData = [];
  
  return (
    <div className="space-y-6">
      <h1 className="text-3xl font-bold font-headline">Report Monitoring</h1>
      
      {/* Filtering Controls */}
      <Card>
        <CardHeader>
          <CardTitle>Filter Reports</CardTitle>
          <CardDescription>
            Search and filter reports by type, user, or status.
          </CardDescription>
        </CardHeader>
        <CardContent>
          <div className="grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-5 gap-4">
            <Input type="date" defaultValue={new Date().toISOString().substring(0, 10)} />
            <Select>
              <SelectTrigger>
                <SelectValue placeholder="Report Type" />
              </SelectTrigger>
              <SelectContent>
                <SelectItem value="payroll">Payroll</SelectItem>
                <SelectItem value="attendance">Attendance</SelectItem>
                <SelectItem value="scheduling">Scheduling</SelectItem>
                <SelectItem value="employee-data">Employee Data</SelectItem>
              </SelectContent>
            </Select>
            <Input placeholder="Search by HR Personnel..."/>
            <Select>
              <SelectTrigger>
                <SelectValue placeholder="Status" />
              </SelectTrigger>
              <SelectContent>
                <SelectItem value="success">Success</SelectItem>
                <SelectItem value="failed">Failed</SelectItem>
              </SelectContent>
            </Select>
            <Button className="w-full">
              <Search />
              Search
            </Button>
          </div>
        </CardContent>
      </Card>

      {/* Reports Data Table */}
      <Card>
        <CardHeader>
            <CardTitle>All Generated Reports</CardTitle>
            <CardDescription>Showing results for all time.</CardDescription>
        </CardHeader>
        <CardContent>
          {reportsData.length > 0 ? (
            <Table>
              <TableHeader>
                <TableRow>
                  <TableHead>Report ID</TableHead>
                  <TableHead>Type</TableHead>
                  <TableHead>Generated By</TableHead>
                  <TableHead>Timestamp</TableHead>
                  <TableHead className="text-right">Status</TableHead>
                </TableRow>
              </TableHeader>
              <TableBody>
                {reportsData.map((report) => (
                  <TableRow key={report.id}>
                     <TableCell className="font-mono text-xs">
                        <Link href={`/admin/reports/${report.id}`} className="hover:underline text-primary">
                          {report.id}
                        </Link>
                      </TableCell>
                    <TableCell className="font-medium">{report.type}</TableCell>
                    <TableCell>{report.generatedBy}</TableCell>
                    <TableCell>{report.timestamp}</TableCell>
                    <TableCell className="text-right">
                      <Badge variant={report.status === 'Success' ? 'default' : 'destructive'} className={report.status === 'Success' ? 'bg-green-500' : ''}>
                        {report.status}
                      </Badge>
                    </TableCell>
                  </TableRow>
                ))}
              </TableBody>
            </Table>
          ) : (
            <p className="text-muted-foreground text-center">No reports found.</p>
          )}
        </CardContent>
      </Card>
    </div>
  );
}
