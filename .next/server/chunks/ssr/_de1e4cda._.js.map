{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Marxus%20Reyes/Downloads/Capstone%20v2/src/lib/data.js"],"sourcesContent":["/**\n * @fileoverview This file contains all the functions for fetching data from the database.\n */\n'use server';\n\nimport { query } from './db';\nimport { format } from 'date-fns';\n\nexport async function getHRDashboardData() {\n    const totalEmployeesResult = await query(\"SELECT COUNT(*) FROM accounts WHERE role = 'Employee'\");\n    const totalEmployees = totalEmployeesResult.rows[0].count || '0';\n\n    const pendingLeaveRequestsResult = await query(\"SELECT COUNT(*) FROM leave_requests WHERE status = 'Pending'\");\n    const pendingLeaveRequests = pendingLeaveRequestsResult.rows[0].count || '0';\n\n    // Mocking some stats as there's no table for them yet\n    const stats = [\n        { title: 'Total Employees', value: String(totalEmployees), change: '' },\n        { title: 'On Time Percentage', value: `0%`, change: '' }, // No attendance data yet\n        { title: 'Active Job Postings', value: '4', change: 'External API' },\n        { title: 'Pending Leave Requests', value: String(pendingLeaveRequests), change: '' },\n    ];\n\n    // No activity log table yet\n    return {\n        stats,\n        recentActivities: []\n    };\n}\n\n\nexport async function getPastAnnouncements() {\n    const result = await query(`\n        SELECT a.id, a.title, a.content, a.status, a.created_at, acc.first_name, acc.last_name\n        FROM announcements a\n        JOIN accounts acc ON a.posted_by = acc.id\n        ORDER BY a.created_at DESC\n    `);\n    return result.rows.map(a => ({\n        ...a,\n        postedBy: `${a.first_name} ${a.last_name}`,\n        date: format(new Date(a.created_at), 'yyyy-MM-dd')\n    }));\n}\n\nexport async function createAnnouncement(title, content, status) {\n    const id = 'HR-001'; // In a real app, this should come from session\n    await query(\n        'INSERT INTO announcements (title, content, status, posted_by) VALUES ($1, $2, $3, $4)',\n        [title, content, status, id]\n    );\n}\n\nexport async function deleteAnnouncement(id) {\n    await query('DELETE FROM announcements WHERE id = $1', [id]);\n}\n\nexport async function getDailyAttendanceData(date) {\n    // This is a placeholder as there is no attendance table yet.\n    return [];\n}\n\n\nexport async function getEmployees() {\n    const result = await query(`\n        SELECT id, first_name, last_name, position, branch, status\n        FROM accounts\n        WHERE role = 'Employee' AND status != 'Pending Approval'\n    `);\n    return result.rows.map(a => ({\n        id: a.id,\n        name: `${a.first_name} ${a.last_name}`,\n        position: a.position,\n        branch: a.branch,\n        status: a.status\n    }));\n}\n\nexport async function getEmployeeById(id) {\n    const result = await query('SELECT * FROM accounts WHERE id = $1', [id]);\n    const employee = result.rows[0];\n    if (!employee) return null;\n\n    return {\n        ...employee,\n        name: `${employee.first_name} ${employee.last_name}`,\n        date_hired: format(new Date(employee.date_hired), 'yyyy-MM-dd'),\n        date_of_birth: format(new Date(employee.date_of_birth), 'yyyy-MM-dd'),\n    };\n}\n\n\nexport async function deleteEmployee(id) {\n    const result = await query('DELETE FROM accounts WHERE id = $1', [id]);\n    return result.rowCount > 0;\n}\n\nexport async function getLeaveRequests() {\n    const result = await query(`\n        SELECT lr.id, lr.leave_type, lr.start_date, lr.end_date, lr.reason, lr.status,\n               a.id as \"employeeId\", a.first_name, a.last_name\n        FROM leave_requests lr\n        JOIN accounts a ON lr.employee_id = a.id\n        ORDER BY lr.created_at DESC\n    `);\n    return result.rows.map(lr => ({\n        id: lr.id,\n        employeeId: lr.employeeId,\n        employeeName: `${lr.first_name} ${lr.last_name}`,\n        leave_type: lr.leave_type,\n        startDate: format(new Date(lr.start_date), 'yyyy-MM-dd'),\n        endDate: format(new Date(lr.end_date), 'yyyy-MM-dd'),\n        reason: lr.reason,\n        status: lr.status\n    }));\n}\n\nexport async function updateLeaveRequestStatus(requestId, status) {\n    await query('UPDATE leave_requests SET status = $1 WHERE id = $2', [status, requestId]);\n}\n\nexport async function getEmployeesWithPayslipStatus() {\n     const result = await query(`\n        SELECT id, first_name, last_name, \"position\", department, sss_number, philhealth_number, pagibig_number, tin\n        FROM accounts\n        WHERE role = 'Employee'\n    `);\n    \n    return result.rows.map(a => {\n        const hasBenefits = a.sss_number && a.philhealth_number && a.pagibig_number && a.tin;\n        return {\n            id: a.id,\n            name: `${a.first_name} ${a.last_name}`,\n            position: a.position,\n            department: a.department,\n            payslipStatus: 'Pending', // No payslip table yet\n            benefitsStatus: hasBenefits ? 'Complete' : 'Incomplete',\n        };\n    });\n}\n\nexport async function getEmployeesForScheduling() {\n    const result = await query(`\n        SELECT id, first_name, last_name FROM accounts WHERE role = 'Employee' AND status = 'Active'\n    `);\n    return result.rows.map(a => ({\n        id: a.id,\n        name: `${a.first_name} ${a.last_name}`,\n        shift: '9:00 - 17:00' // Default shift\n    }));\n}\n    // Fetch Employee Data from Database\nexport async function getEmployeeDashboardData(employeeid) {\n    const result = await query('SELECT id, first_name, last_name, \"position\", department, branch, email FROM accounts WHERE id = $1', [employeeid]);\n    const employee = result.rows[0];\n    \n    if (!employee) {\n        return { employee: { name: 'Employee Not Found' }, announcements: [] };\n    }\n\n    const announcementsResult = await query(\"SELECT title, content, created_at FROM announcements WHERE status = 'Published' ORDER BY created_at DESC LIMIT 5\");\n    \n    return {\n        employee: {\n            employeeId: employee.id,\n            name: `${employee.first_name} ${employee.last_name}`,\n            position: employee.position,\n            department: employee.department,\n            branch: employee.branch,\n            email: employee.email,\n        },\n        announcements: announcementsResult.rows.map(a => ({\n            id: a.id,\n            title: a.title,\n            content: a.content,\n            date: format(new Date(a.created_at), 'MMMM d, yyyy')\n        }))\n    };\n}\n\nexport async function getAttendanceData(employeeId) {\n    // This is a placeholder as there is no attendance table yet.\n    return {\n        summary: { daysAttended: 0, lates: 0, absences: 0, totalHours: 0, availableLeaves: 0 },\n        records: []\n    };\n}\n\nexport async function getPastLeaveRequests(employeeId) {\n    const result = await query(\n        'SELECT id, leave_type, start_date, end_date, status FROM leave_requests WHERE employee_id = $1 ORDER BY start_date DESC',\n        [employeeId]\n    );\n\n    return result.rows.map(lr => ({\n        id: lr.id,\n        leave_type: lr.leave_type,\n        startDate: format(new Date(lr.start_date), 'yyyy-MM-dd'),\n        endDate: format(new Date(lr.end_date), 'yyyy-MM-dd'),\n        status: lr.status,\n    }));\n}\n\nexport async function createLeaveRequest(data) {\n    const { employeeId, leaveType, startDate, endDate, reason } = data;\n    await query(\n        'INSERT INTO leave_requests (account_id, leave_type, start_date, end_date, reason) VALUES ($1, $2, $3, $4, $5)',\n        [employeeId, leaveType, startDate, endDate, reason]\n    );\n    return { success: true };\n}\n\nexport async function getPayPeriods(employeeId) {\n    // This is a placeholder as there is no payslip table yet.\n    return [];\n}\n\nexport async function getSchedule(employeeId) {\n    // This is a placeholder as there is no schedule table yet.\n    return [];\n}\n\n\nexport async function getPendingEmployeeApprovals() {\n     const result = await query(`\n        SELECT id, first_name, last_name, \"position\", date_hired\n        FROM accounts\n        WHERE status = 'Pending Approval'\n    `);\n    return result.rows.map(a => ({\n        id: a.id,\n        employeeName: `${a.first_name} ${a.last_name}`,\n        position: a.position,\n        submittedBy: 'Olivia Chen', // Placeholder\n        submissionDate: format(new Date(a.date_hired), 'yyyy-MM-dd')\n    }));\n}\n\nexport async function approveEmployee(employeeId) {\n    await query(\"UPDATE accounts SET status = 'Active' WHERE id = $1\", [employeeId]);\n}\n\nexport async function rejectEmployee(employeeId) {\n    await query(\"DELETE FROM accounts WHERE id = $1\", [employeeId]);\n}\n\nexport async function getEmployeeName(employeeId) {\n    const result = await query('SELECT first_name, last_name FROM accounts WHERE id = $1', [employeeId]);\n    const employee = result.rows[0];\n    return employee ? `${employee.first_name} ${employee.last_name}` : \"Unknown Employee\";\n}\n\nexport async function getReportDetails(reportId) {\n    // This is a placeholder as there is no reports table yet.\n    return null;\n}\n\nexport async function getHrPersonnel() {\n    const result = await query(`\n        SELECT id, first_name, last_name, \"position\", managed_branches\n        FROM accounts WHERE role = 'HR'\n    `);\n    return result.rows.map(a => ({\n        id: a.id,\n        name: `${a.first_name} ${a.last_name}`,\n        position: a.position,\n        managed_branches: a.managed_branches || []\n    }));\n}\n\nexport async function getBranches() {\n    const result = await query('SELECT id, name, coordinates FROM branches ORDER BY name');\n    return result.rows;\n}\n\nexport async function createBranch(branchName, coordinates) {\n    try {\n        const result = await query(\n            'INSERT INTO branches (name, coordinates) VALUES ($1, $2) RETURNING *',\n            [branchName, coordinates]\n        );\n        return result.rows[0];\n    } catch(e) {\n        if (e.code === '23505') { // unique_violation\n            throw new Error('A branch with this name already exists.');\n        }\n        throw e;\n    }\n}\n\nexport async function deleteBranch(branchId) {\n    // Check if any HR personnel is assigned to this branch\n    const branchResult = await query('SELECT name FROM branches WHERE id = $1', [branchId]);\n    if (branchResult.rowCount === 0) return;\n    const branchName = branchResult.rows[0].name;\n\n    const hrResult = await query(\"SELECT 1 FROM accounts WHERE role = 'HR' AND $1 = ANY(managed_branches)\", [branchName]);\n    if (hrResult.rowCount > 0) {\n        throw new Error('This branch is currently assigned to HR personnel and cannot be deleted.');\n    }\n    await query('DELETE FROM branches WHERE id = $1', [branchId]);\n}\n\n\nexport async function updateHrBranchAllocation(hrId, branches) {\n    const result = await query(\n        'UPDATE accounts SET managed_branches = $1 WHERE id = $2',\n        [branches, hrId]\n    );\n    return { success: result.rowCount > 0 };\n}\n\n\nexport async function updateEmployee(id, data) {\n    const { firstName, lastName, middleName, gender, dob, position, department, branch, hireDate, email } = data;\n    const result = await query(`\n        UPDATE accounts SET\n            first_name = $1, last_name = $2, middle_name = $3, gender = $4,\n            date_of_birth = $5, \"position\" = $6, department = $7, branch = $8,\n            date_hired = $9, email = $10\n        WHERE id = $11\n    `, [firstName, lastName, middleName, gender, dob, position, department, branch, hireDate, email, id]);\n    \n    return { success: result.rowCount > 0, message: result.rowCount > 0 ? 'Employee updated successfully.' : 'Employee not found.' };\n}\n\n\nexport async function getPositions() {\n    const result = await query('SELECT id, title, rate FROM positions ORDER BY title');\n    return result.rows;\n}\n\nexport async function createPosition(title, rate) {\n    try {\n        const result = await query(\n            'INSERT INTO positions (title, rate) VALUES ($1, $2) RETURNING *',\n            [title, rate]\n        );\n        return result.rows[0];\n    } catch(e) {\n        if (e.code === '23505') { // unique_violation\n            throw new Error('A position with this title already exists.');\n        }\n        throw e;\n    }\n}\n\nexport async function deletePosition(positionId) {\n    const positionResult = await query('SELECT title FROM positions WHERE id = $1', [positionId]);\n    if (positionResult.rowCount === 0) return;\n    const positionTitle = positionResult.rows[0].title;\n\n    const accountResult = await query(\"SELECT 1 FROM accounts WHERE position = $1\", [positionTitle]);\n    if (accountResult.rowCount > 0) {\n        throw new Error('This position is currently assigned to employees and cannot be deleted.');\n    }\n    await query('DELETE FROM positions WHERE id = $1', [positionId]);\n}\n\nexport async function getDepartmentsForBranch(branchName) {\n    // This assumes a separate 'departments' table or similar structure.\n    // For now, let's query distinct departments from accounts in that branch.\n    const result = await query(\n        'SELECT DISTINCT department FROM accounts WHERE branch = $1 AND department IS NOT NULL ORDER BY department',\n        [branchName]\n    );\n    return result.rows.map(r => r.department);\n}\n\nexport async function getPositionsForDepartment(departmentName) {\n    // This is a simplification. A real app might have a departments_positions link table.\n    // Here we get all positions associated with employees in that department.\n    const result = await query(\n        'SELECT DISTINCT \"position\" FROM accounts WHERE department = $1 AND \"position\" IS NOT NULL ORDER BY \"position\"',\n        [departmentName]\n    );\n    return result.rows.map(r => r.position);\n}\n"],"names":[],"mappings":"AAAA;;CAEC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAGD;AACA;;;;;;;;;;AAEO,eAAe;IAClB,MAAM,uBAAuB,MAAM,CAAA,GAAA,gHAAA,CAAA,QAAK,AAAD,EAAE;IACzC,MAAM,iBAAiB,qBAAqB,IAAI,CAAC,EAAE,CAAC,KAAK,IAAI;IAE7D,MAAM,6BAA6B,MAAM,CAAA,GAAA,gHAAA,CAAA,QAAK,AAAD,EAAE;IAC/C,MAAM,uBAAuB,2BAA2B,IAAI,CAAC,EAAE,CAAC,KAAK,IAAI;IAEzE,sDAAsD;IACtD,MAAM,QAAQ;QACV;YAAE,OAAO;YAAmB,OAAO,OAAO;YAAiB,QAAQ;QAAG;QACtE;YAAE,OAAO;YAAsB,OAAO,CAAC,EAAE,CAAC;YAAE,QAAQ;QAAG;QACvD;YAAE,OAAO;YAAuB,OAAO;YAAK,QAAQ;QAAe;QACnE;YAAE,OAAO;YAA0B,OAAO,OAAO;YAAuB,QAAQ;QAAG;KACtF;IAED,4BAA4B;IAC5B,OAAO;QACH;QACA,kBAAkB,EAAE;IACxB;AACJ;AAGO,eAAe;IAClB,MAAM,SAAS,MAAM,CAAA,GAAA,gHAAA,CAAA,QAAK,AAAD,EAAE,CAAC;;;;;IAK5B,CAAC;IACD,OAAO,OAAO,IAAI,CAAC,GAAG,CAAC,CAAA,IAAK,CAAC;YACzB,GAAG,CAAC;YACJ,UAAU,GAAG,EAAE,UAAU,CAAC,CAAC,EAAE,EAAE,SAAS,EAAE;YAC1C,MAAM,CAAA,GAAA,sJAAA,CAAA,SAAM,AAAD,EAAE,IAAI,KAAK,EAAE,UAAU,GAAG;QACzC,CAAC;AACL;AAEO,eAAe,mBAAmB,KAAK,EAAE,OAAO,EAAE,MAAM;IAC3D,MAAM,KAAK,UAAU,+CAA+C;IACpE,MAAM,CAAA,GAAA,gHAAA,CAAA,QAAK,AAAD,EACN,yFACA;QAAC;QAAO;QAAS;QAAQ;KAAG;AAEpC;AAEO,eAAe,mBAAmB,EAAE;IACvC,MAAM,CAAA,GAAA,gHAAA,CAAA,QAAK,AAAD,EAAE,2CAA2C;QAAC;KAAG;AAC/D;AAEO,eAAe,uBAAuB,IAAI;IAC7C,6DAA6D;IAC7D,OAAO,EAAE;AACb;AAGO,eAAe;IAClB,MAAM,SAAS,MAAM,CAAA,GAAA,gHAAA,CAAA,QAAK,AAAD,EAAE,CAAC;;;;IAI5B,CAAC;IACD,OAAO,OAAO,IAAI,CAAC,GAAG,CAAC,CAAA,IAAK,CAAC;YACzB,IAAI,EAAE,EAAE;YACR,MAAM,GAAG,EAAE,UAAU,CAAC,CAAC,EAAE,EAAE,SAAS,EAAE;YACtC,UAAU,EAAE,QAAQ;YACpB,QAAQ,EAAE,MAAM;YAChB,QAAQ,EAAE,MAAM;QACpB,CAAC;AACL;AAEO,eAAe,gBAAgB,EAAE;IACpC,MAAM,SAAS,MAAM,CAAA,GAAA,gHAAA,CAAA,QAAK,AAAD,EAAE,wCAAwC;QAAC;KAAG;IACvE,MAAM,WAAW,OAAO,IAAI,CAAC,EAAE;IAC/B,IAAI,CAAC,UAAU,OAAO;IAEtB,OAAO;QACH,GAAG,QAAQ;QACX,MAAM,GAAG,SAAS,UAAU,CAAC,CAAC,EAAE,SAAS,SAAS,EAAE;QACpD,YAAY,CAAA,GAAA,sJAAA,CAAA,SAAM,AAAD,EAAE,IAAI,KAAK,SAAS,UAAU,GAAG;QAClD,eAAe,CAAA,GAAA,sJAAA,CAAA,SAAM,AAAD,EAAE,IAAI,KAAK,SAAS,aAAa,GAAG;IAC5D;AACJ;AAGO,eAAe,eAAe,EAAE;IACnC,MAAM,SAAS,MAAM,CAAA,GAAA,gHAAA,CAAA,QAAK,AAAD,EAAE,sCAAsC;QAAC;KAAG;IACrE,OAAO,OAAO,QAAQ,GAAG;AAC7B;AAEO,eAAe;IAClB,MAAM,SAAS,MAAM,CAAA,GAAA,gHAAA,CAAA,QAAK,AAAD,EAAE,CAAC;;;;;;IAM5B,CAAC;IACD,OAAO,OAAO,IAAI,CAAC,GAAG,CAAC,CAAA,KAAM,CAAC;YAC1B,IAAI,GAAG,EAAE;YACT,YAAY,GAAG,UAAU;YACzB,cAAc,GAAG,GAAG,UAAU,CAAC,CAAC,EAAE,GAAG,SAAS,EAAE;YAChD,YAAY,GAAG,UAAU;YACzB,WAAW,CAAA,GAAA,sJAAA,CAAA,SAAM,AAAD,EAAE,IAAI,KAAK,GAAG,UAAU,GAAG;YAC3C,SAAS,CAAA,GAAA,sJAAA,CAAA,SAAM,AAAD,EAAE,IAAI,KAAK,GAAG,QAAQ,GAAG;YACvC,QAAQ,GAAG,MAAM;YACjB,QAAQ,GAAG,MAAM;QACrB,CAAC;AACL;AAEO,eAAe,yBAAyB,SAAS,EAAE,MAAM;IAC5D,MAAM,CAAA,GAAA,gHAAA,CAAA,QAAK,AAAD,EAAE,uDAAuD;QAAC;QAAQ;KAAU;AAC1F;AAEO,eAAe;IACjB,MAAM,SAAS,MAAM,CAAA,GAAA,gHAAA,CAAA,QAAK,AAAD,EAAE,CAAC;;;;IAI7B,CAAC;IAED,OAAO,OAAO,IAAI,CAAC,GAAG,CAAC,CAAA;QACnB,MAAM,cAAc,EAAE,UAAU,IAAI,EAAE,iBAAiB,IAAI,EAAE,cAAc,IAAI,EAAE,GAAG;QACpF,OAAO;YACH,IAAI,EAAE,EAAE;YACR,MAAM,GAAG,EAAE,UAAU,CAAC,CAAC,EAAE,EAAE,SAAS,EAAE;YACtC,UAAU,EAAE,QAAQ;YACpB,YAAY,EAAE,UAAU;YACxB,eAAe;YACf,gBAAgB,cAAc,aAAa;QAC/C;IACJ;AACJ;AAEO,eAAe;IAClB,MAAM,SAAS,MAAM,CAAA,GAAA,gHAAA,CAAA,QAAK,AAAD,EAAE,CAAC;;IAE5B,CAAC;IACD,OAAO,OAAO,IAAI,CAAC,GAAG,CAAC,CAAA,IAAK,CAAC;YACzB,IAAI,EAAE,EAAE;YACR,MAAM,GAAG,EAAE,UAAU,CAAC,CAAC,EAAE,EAAE,SAAS,EAAE;YACtC,OAAO,eAAe,gBAAgB;QAC1C,CAAC;AACL;AAEO,eAAe,yBAAyB,UAAU;IACrD,MAAM,SAAS,MAAM,CAAA,GAAA,gHAAA,CAAA,QAAK,AAAD,EAAE,uGAAuG;QAAC;KAAW;IAC9I,MAAM,WAAW,OAAO,IAAI,CAAC,EAAE;IAE/B,IAAI,CAAC,UAAU;QACX,OAAO;YAAE,UAAU;gBAAE,MAAM;YAAqB;YAAG,eAAe,EAAE;QAAC;IACzE;IAEA,MAAM,sBAAsB,MAAM,CAAA,GAAA,gHAAA,CAAA,QAAK,AAAD,EAAE;IAExC,OAAO;QACH,UAAU;YACN,YAAY,SAAS,EAAE;YACvB,MAAM,GAAG,SAAS,UAAU,CAAC,CAAC,EAAE,SAAS,SAAS,EAAE;YACpD,UAAU,SAAS,QAAQ;YAC3B,YAAY,SAAS,UAAU;YAC/B,QAAQ,SAAS,MAAM;YACvB,OAAO,SAAS,KAAK;QACzB;QACA,eAAe,oBAAoB,IAAI,CAAC,GAAG,CAAC,CAAA,IAAK,CAAC;gBAC9C,IAAI,EAAE,EAAE;gBACR,OAAO,EAAE,KAAK;gBACd,SAAS,EAAE,OAAO;gBAClB,MAAM,CAAA,GAAA,sJAAA,CAAA,SAAM,AAAD,EAAE,IAAI,KAAK,EAAE,UAAU,GAAG;YACzC,CAAC;IACL;AACJ;AAEO,eAAe,kBAAkB,UAAU;IAC9C,6DAA6D;IAC7D,OAAO;QACH,SAAS;YAAE,cAAc;YAAG,OAAO;YAAG,UAAU;YAAG,YAAY;YAAG,iBAAiB;QAAE;QACrF,SAAS,EAAE;IACf;AACJ;AAEO,eAAe,qBAAqB,UAAU;IACjD,MAAM,SAAS,MAAM,CAAA,GAAA,gHAAA,CAAA,QAAK,AAAD,EACrB,2HACA;QAAC;KAAW;IAGhB,OAAO,OAAO,IAAI,CAAC,GAAG,CAAC,CAAA,KAAM,CAAC;YAC1B,IAAI,GAAG,EAAE;YACT,YAAY,GAAG,UAAU;YACzB,WAAW,CAAA,GAAA,sJAAA,CAAA,SAAM,AAAD,EAAE,IAAI,KAAK,GAAG,UAAU,GAAG;YAC3C,SAAS,CAAA,GAAA,sJAAA,CAAA,SAAM,AAAD,EAAE,IAAI,KAAK,GAAG,QAAQ,GAAG;YACvC,QAAQ,GAAG,MAAM;QACrB,CAAC;AACL;AAEO,eAAe,mBAAmB,IAAI;IACzC,MAAM,EAAE,UAAU,EAAE,SAAS,EAAE,SAAS,EAAE,OAAO,EAAE,MAAM,EAAE,GAAG;IAC9D,MAAM,CAAA,GAAA,gHAAA,CAAA,QAAK,AAAD,EACN,iHACA;QAAC;QAAY;QAAW;QAAW;QAAS;KAAO;IAEvD,OAAO;QAAE,SAAS;IAAK;AAC3B;AAEO,eAAe,cAAc,UAAU;IAC1C,0DAA0D;IAC1D,OAAO,EAAE;AACb;AAEO,eAAe,YAAY,UAAU;IACxC,2DAA2D;IAC3D,OAAO,EAAE;AACb;AAGO,eAAe;IACjB,MAAM,SAAS,MAAM,CAAA,GAAA,gHAAA,CAAA,QAAK,AAAD,EAAE,CAAC;;;;IAI7B,CAAC;IACD,OAAO,OAAO,IAAI,CAAC,GAAG,CAAC,CAAA,IAAK,CAAC;YACzB,IAAI,EAAE,EAAE;YACR,cAAc,GAAG,EAAE,UAAU,CAAC,CAAC,EAAE,EAAE,SAAS,EAAE;YAC9C,UAAU,EAAE,QAAQ;YACpB,aAAa;YACb,gBAAgB,CAAA,GAAA,sJAAA,CAAA,SAAM,AAAD,EAAE,IAAI,KAAK,EAAE,UAAU,GAAG;QACnD,CAAC;AACL;AAEO,eAAe,gBAAgB,UAAU;IAC5C,MAAM,CAAA,GAAA,gHAAA,CAAA,QAAK,AAAD,EAAE,uDAAuD;QAAC;KAAW;AACnF;AAEO,eAAe,eAAe,UAAU;IAC3C,MAAM,CAAA,GAAA,gHAAA,CAAA,QAAK,AAAD,EAAE,sCAAsC;QAAC;KAAW;AAClE;AAEO,eAAe,gBAAgB,UAAU;IAC5C,MAAM,SAAS,MAAM,CAAA,GAAA,gHAAA,CAAA,QAAK,AAAD,EAAE,4DAA4D;QAAC;KAAW;IACnG,MAAM,WAAW,OAAO,IAAI,CAAC,EAAE;IAC/B,OAAO,WAAW,GAAG,SAAS,UAAU,CAAC,CAAC,EAAE,SAAS,SAAS,EAAE,GAAG;AACvE;AAEO,eAAe,iBAAiB,QAAQ;IAC3C,0DAA0D;IAC1D,OAAO;AACX;AAEO,eAAe;IAClB,MAAM,SAAS,MAAM,CAAA,GAAA,gHAAA,CAAA,QAAK,AAAD,EAAE,CAAC;;;IAG5B,CAAC;IACD,OAAO,OAAO,IAAI,CAAC,GAAG,CAAC,CAAA,IAAK,CAAC;YACzB,IAAI,EAAE,EAAE;YACR,MAAM,GAAG,EAAE,UAAU,CAAC,CAAC,EAAE,EAAE,SAAS,EAAE;YACtC,UAAU,EAAE,QAAQ;YACpB,kBAAkB,EAAE,gBAAgB,IAAI,EAAE;QAC9C,CAAC;AACL;AAEO,eAAe;IAClB,MAAM,SAAS,MAAM,CAAA,GAAA,gHAAA,CAAA,QAAK,AAAD,EAAE;IAC3B,OAAO,OAAO,IAAI;AACtB;AAEO,eAAe,aAAa,UAAU,EAAE,WAAW;IACtD,IAAI;QACA,MAAM,SAAS,MAAM,CAAA,GAAA,gHAAA,CAAA,QAAK,AAAD,EACrB,wEACA;YAAC;YAAY;SAAY;QAE7B,OAAO,OAAO,IAAI,CAAC,EAAE;IACzB,EAAE,OAAM,GAAG;QACP,IAAI,EAAE,IAAI,KAAK,SAAS;YACpB,MAAM,IAAI,MAAM;QACpB;QACA,MAAM;IACV;AACJ;AAEO,eAAe,aAAa,QAAQ;IACvC,uDAAuD;IACvD,MAAM,eAAe,MAAM,CAAA,GAAA,gHAAA,CAAA,QAAK,AAAD,EAAE,2CAA2C;QAAC;KAAS;IACtF,IAAI,aAAa,QAAQ,KAAK,GAAG;IACjC,MAAM,aAAa,aAAa,IAAI,CAAC,EAAE,CAAC,IAAI;IAE5C,MAAM,WAAW,MAAM,CAAA,GAAA,gHAAA,CAAA,QAAK,AAAD,EAAE,2EAA2E;QAAC;KAAW;IACpH,IAAI,SAAS,QAAQ,GAAG,GAAG;QACvB,MAAM,IAAI,MAAM;IACpB;IACA,MAAM,CAAA,GAAA,gHAAA,CAAA,QAAK,AAAD,EAAE,sCAAsC;QAAC;KAAS;AAChE;AAGO,eAAe,yBAAyB,IAAI,EAAE,QAAQ;IACzD,MAAM,SAAS,MAAM,CAAA,GAAA,gHAAA,CAAA,QAAK,AAAD,EACrB,2DACA;QAAC;QAAU;KAAK;IAEpB,OAAO;QAAE,SAAS,OAAO,QAAQ,GAAG;IAAE;AAC1C;AAGO,eAAe,eAAe,EAAE,EAAE,IAAI;IACzC,MAAM,EAAE,SAAS,EAAE,QAAQ,EAAE,UAAU,EAAE,MAAM,EAAE,GAAG,EAAE,QAAQ,EAAE,UAAU,EAAE,MAAM,EAAE,QAAQ,EAAE,KAAK,EAAE,GAAG;IACxG,MAAM,SAAS,MAAM,CAAA,GAAA,gHAAA,CAAA,QAAK,AAAD,EAAE,CAAC;;;;;;IAM5B,CAAC,EAAE;QAAC;QAAW;QAAU;QAAY;QAAQ;QAAK;QAAU;QAAY;QAAQ;QAAU;QAAO;KAAG;IAEpG,OAAO;QAAE,SAAS,OAAO,QAAQ,GAAG;QAAG,SAAS,OAAO,QAAQ,GAAG,IAAI,mCAAmC;IAAsB;AACnI;AAGO,eAAe;IAClB,MAAM,SAAS,MAAM,CAAA,GAAA,gHAAA,CAAA,QAAK,AAAD,EAAE;IAC3B,OAAO,OAAO,IAAI;AACtB;AAEO,eAAe,eAAe,KAAK,EAAE,IAAI;IAC5C,IAAI;QACA,MAAM,SAAS,MAAM,CAAA,GAAA,gHAAA,CAAA,QAAK,AAAD,EACrB,mEACA;YAAC;YAAO;SAAK;QAEjB,OAAO,OAAO,IAAI,CAAC,EAAE;IACzB,EAAE,OAAM,GAAG;QACP,IAAI,EAAE,IAAI,KAAK,SAAS;YACpB,MAAM,IAAI,MAAM;QACpB;QACA,MAAM;IACV;AACJ;AAEO,eAAe,eAAe,UAAU;IAC3C,MAAM,iBAAiB,MAAM,CAAA,GAAA,gHAAA,CAAA,QAAK,AAAD,EAAE,6CAA6C;QAAC;KAAW;IAC5F,IAAI,eAAe,QAAQ,KAAK,GAAG;IACnC,MAAM,gBAAgB,eAAe,IAAI,CAAC,EAAE,CAAC,KAAK;IAElD,MAAM,gBAAgB,MAAM,CAAA,GAAA,gHAAA,CAAA,QAAK,AAAD,EAAE,8CAA8C;QAAC;KAAc;IAC/F,IAAI,cAAc,QAAQ,GAAG,GAAG;QAC5B,MAAM,IAAI,MAAM;IACpB;IACA,MAAM,CAAA,GAAA,gHAAA,CAAA,QAAK,AAAD,EAAE,uCAAuC;QAAC;KAAW;AACnE;AAEO,eAAe,wBAAwB,UAAU;IACpD,oEAAoE;IACpE,0EAA0E;IAC1E,MAAM,SAAS,MAAM,CAAA,GAAA,gHAAA,CAAA,QAAK,AAAD,EACrB,6GACA;QAAC;KAAW;IAEhB,OAAO,OAAO,IAAI,CAAC,GAAG,CAAC,CAAA,IAAK,EAAE,UAAU;AAC5C;AAEO,eAAe,0BAA0B,cAAc;IAC1D,sFAAsF;IACtF,0EAA0E;IAC1E,MAAM,SAAS,MAAM,CAAA,GAAA,gHAAA,CAAA,QAAK,AAAD,EACrB,iHACA;QAAC;KAAe;IAEpB,OAAO,OAAO,IAAI,CAAC,GAAG,CAAC,CAAA,IAAK,EAAE,QAAQ;AAC1C;;;IAjXsB;IAuBA;IAcA;IAQA;IAIA;IAMA;IAeA;IAcA;IAKA;IAoBA;IAIA;IAoBA;IAWA;IA4BA;IAQA;IAeA;IASA;IAKA;IAMA;IAeA;IAIA;IAIA;IAMA;IAKA;IAaA;IAKA;IAeA;IAcA;IASA;IAcA;IAKA;IAeA;IAYA;IAUA;;AAzWA,+OAAA;AAuBA,+OAAA;AAcA,+OAAA;AAQA,+OAAA;AAIA,+OAAA;AAMA,+OAAA;AAeA,+OAAA;AAcA,+OAAA;AAKA,+OAAA;AAoBA,+OAAA;AAIA,+OAAA;AAoBA,+OAAA;AAWA,+OAAA;AA4BA,+OAAA;AAQA,+OAAA;AAeA,+OAAA;AASA,+OAAA;AAKA,+OAAA;AAMA,+OAAA;AAeA,+OAAA;AAIA,+OAAA;AAIA,+OAAA;AAMA,+OAAA;AAKA,+OAAA;AAaA,+OAAA;AAKA,+OAAA;AAeA,+OAAA;AAcA,+OAAA;AASA,+OAAA;AAcA,+OAAA;AAKA,+OAAA;AAeA,+OAAA;AAYA,+OAAA;AAUA,+OAAA","debugId":null}},
    {"offset": {"line": 531, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Marxus%20Reyes/Downloads/Capstone%20v2/.next-internal/server/app/hr/employee-data/%5Bid%5D/page/actions.js%20%28server%20actions%20loader%29"],"sourcesContent":["export {getEmployeesWithPayslipStatus as '002dd23120083517493f1856b5ce3e27ca1098d244'} from 'ACTIONS_MODULE0'\nexport {getHRDashboardData as '0041d2031c64a9612535dcab2138817eeef5f5974c'} from 'ACTIONS_MODULE0'\nexport {getBranches as '00651499873cf7b226d6bebda46391ddb16c9e3017'} from 'ACTIONS_MODULE0'\nexport {getPendingEmployeeApprovals as '0067b71c9617499970f47f615b607f992a7b35b7ca'} from 'ACTIONS_MODULE0'\nexport {getHrPersonnel as '006f92dd1eaec6e537e91dc9dec624243ee6afc955'} from 'ACTIONS_MODULE0'\nexport {getPastAnnouncements as '0081b652a1ba97ae17200b5330a84c1eaee2045820'} from 'ACTIONS_MODULE0'\nexport {getPositions as '009e1e55ed3679817775f3fa1467d6a8d3d8736c4a'} from 'ACTIONS_MODULE0'\nexport {getLeaveRequests as '00acc9d5c2e411c4f8f6e3b8e0c4a2c3da73708524'} from 'ACTIONS_MODULE0'\nexport {getEmployees as '00c619ec02afa7d57568b4e0406ecec6a6bf21e12a'} from 'ACTIONS_MODULE0'\nexport {getEmployeesForScheduling as '00d5a8089689a75a56fcc38e7013d6855f6b64deb6'} from 'ACTIONS_MODULE0'\nexport {approveEmployee as '400c24efbdff8ad0edbd723316ed5350a26ca81947'} from 'ACTIONS_MODULE0'\nexport {deleteBranch as '402bf722be4a91aa4ab56f119fd6bbe1240abba9d6'} from 'ACTIONS_MODULE0'\nexport {getAttendanceData as '40360376d7fc3085764bf086e59364b9a7bd931021'} from 'ACTIONS_MODULE0'\nexport {rejectEmployee as '403bd6deaf58cedd1f69830ca2372388b1774aab05'} from 'ACTIONS_MODULE0'\nexport {getEmployeeName as '405c3db62c447e59c0ae7044461282afdf964ae1bd'} from 'ACTIONS_MODULE0'\nexport {getDepartmentsForBranch as '405d0bc438bbb2c7f72de945affb8287da8e3ec894'} from 'ACTIONS_MODULE0'\nexport {deleteAnnouncement as '406a1f92adca3011402ab7c759c72a0873cf50a660'} from 'ACTIONS_MODULE0'\nexport {getPastLeaveRequests as '40885e633df6cf5d24407734484d3a4bcc7bc878e0'} from 'ACTIONS_MODULE0'\nexport {getPositionsForDepartment as '4098d8639b4d7e181c4a232b77c397aee879de1de4'} from 'ACTIONS_MODULE0'\nexport {getDailyAttendanceData as '40a5b75da077963d47ebe0f5fc53e2a123ce19ae24'} from 'ACTIONS_MODULE0'\nexport {deletePosition as '40a69a957b01cb08f497843c9138b9020dea342972'} from 'ACTIONS_MODULE0'\nexport {getSchedule as '40b0eb7305a3d24b1488b76f6edba4bab27c969bfe'} from 'ACTIONS_MODULE0'\nexport {getEmployeeDashboardData as '40b7b79cef1785e3c75ae17348edfad469c103bb85'} from 'ACTIONS_MODULE0'\nexport {deleteEmployee as '40d9a51fb28edbd77052634e1d4229df7421a16ff4'} from 'ACTIONS_MODULE0'\nexport {getPayPeriods as '40e36f9c74786f4cdb1a562f7c79abdf9440a06d44'} from 'ACTIONS_MODULE0'\nexport {createLeaveRequest as '40e89487447e1f133bfc1c734cc2338626fb053105'} from 'ACTIONS_MODULE0'\nexport {getEmployeeById as '40ed5a75d32568df3e02e1d7138130c11b0fa518ff'} from 'ACTIONS_MODULE0'\nexport {getReportDetails as '40fdc91fc4350406f04eb4a57938354df3e9a76bac'} from 'ACTIONS_MODULE0'\nexport {updateHrBranchAllocation as '6034bd75e3ee5334cb7cb149ba648ab4d639d921dd'} from 'ACTIONS_MODULE0'\nexport {updateEmployee as '604206acd9d9cff37b360a36edb47864916be42ac7'} from 'ACTIONS_MODULE0'\nexport {createPosition as '6093911139f7f04c7d4349f18c45e70c1cd12710b1'} from 'ACTIONS_MODULE0'\nexport {createBranch as '609822123b4518f2a5ebec8d5029d0aa257facd731'} from 'ACTIONS_MODULE0'\nexport {updateLeaveRequestStatus as '60a9cb6eb3ceaacad191d5184a4122349a0d55217a'} from 'ACTIONS_MODULE0'\nexport {createAnnouncement as '70b877cecdc386a8a18ed56ee7a4f1ed9d86f3d177'} from 'ACTIONS_MODULE0'\n"],"names":[],"mappings":";AAAA","debugId":null}},
    {"offset": {"line": 711, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Marxus%20Reyes/Downloads/Capstone%20v2/src/components/ui/card.jsx"],"sourcesContent":["/**\n * @fileoverview Defines the Card component and its parts.\n * A card is a flexible and extensible content container. It includes options for\n * headers, footers, titles, descriptions, and content.\n */\nimport * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\n/**\n * The main container for the card component.\n */\nconst Card = React.forwardRef(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"rounded-lg border bg-card text-card-foreground shadow-sm\",\n      className\n    )}\n    {...props}\n  />\n))\nCard.displayName = \"Card\"\n\n/**\n * The header section of the card. Typically contains the title and description.\n */\nconst CardHeader = React.forwardRef(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex flex-col space-y-1.5 p-6\", className)}\n    {...props}\n  />\n))\nCardHeader.displayName = \"CardHeader\"\n\n/**\n * The title of the card. Should be placed inside a CardHeader.\n */\nconst CardTitle = React.forwardRef(({ className, ...props }, ref) => (\n  <h3\n    ref={ref}\n    className={cn(\n      \"text-2xl font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nCardTitle.displayName = \"CardTitle\"\n\n/**\n * A description for the card. Should be placed inside a CardHeader.\n */\nconst CardDescription = React.forwardRef(({ className, ...props }, ref) => (\n  <p\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nCardDescription.displayName = \"CardDescription\"\n\n/**\n * The main content area of the card.\n */\nconst CardContent = React.forwardRef(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn(\"p-6 pt-0\", className)} {...props} />\n))\nCardContent.displayName = \"CardContent\"\n\n/**\n_The footer section of the card.\n*/\nconst CardFooter = React.forwardRef(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex items-center p-6 pt-0\", className)}\n    {...props}\n  />\n))\nCardFooter.displayName = \"CardFooter\"\n\nexport { Card, CardHeader, CardFooter, CardTitle, CardDescription, CardContent }\n"],"names":[],"mappings":"AAAA;;;;CAIC;;;;;;;;;AACD;AAEA;;;;AAEA;;CAEC,GACD,MAAM,qBAAO,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAAE,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBACtD,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,4DACA;QAED,GAAG,KAAK;;;;;;AAGb,KAAK,WAAW,GAAG;AAEnB;;CAEC,GACD,MAAM,2BAAa,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAAE,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC5D,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGb,WAAW,WAAW,GAAG;AAEzB;;CAEC,GACD,MAAM,0BAAY,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAAE,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC3D,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,sDACA;QAED,GAAG,KAAK;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB;;CAEC,GACD,MAAM,gCAAkB,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAAE,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBACjE,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGb,gBAAgB,WAAW,GAAG;AAE9B;;CAEC,GACD,MAAM,4BAAc,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAAE,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC7D,8OAAC;QAAI,KAAK;QAAK,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,YAAY;QAAa,GAAG,KAAK;;;;;;AAEhE,YAAY,WAAW,GAAG;AAE1B;;AAEA,GACA,MAAM,2BAAa,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAAE,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC5D,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,8BAA8B;QAC3C,GAAG,KAAK;;;;;;AAGb,WAAW,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 808, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Marxus%20Reyes/Downloads/Capstone%20v2/src/components/ui/avatar.jsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const Avatar = registerClientReference(\n    function() { throw new Error(\"Attempted to call Avatar() from the server but Avatar is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/avatar.jsx <module evaluation>\",\n    \"Avatar\",\n);\nexport const AvatarFallback = registerClientReference(\n    function() { throw new Error(\"Attempted to call AvatarFallback() from the server but AvatarFallback is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/avatar.jsx <module evaluation>\",\n    \"AvatarFallback\",\n);\nexport const AvatarImage = registerClientReference(\n    function() { throw new Error(\"Attempted to call AvatarImage() from the server but AvatarImage is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/avatar.jsx <module evaluation>\",\n    \"AvatarImage\",\n);\n"],"names":[],"mappings":";;;;;AAAA;;AACO,MAAM,SAAS,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACxC;IAAa,MAAM,IAAI,MAAM;AAA4N,GACzP,8DACA;AAEG,MAAM,iBAAiB,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAChD;IAAa,MAAM,IAAI,MAAM;AAA4O,GACzQ,8DACA;AAEG,MAAM,cAAc,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAC7C;IAAa,MAAM,IAAI,MAAM;AAAsO,GACnQ,8DACA","debugId":null}},
    {"offset": {"line": 830, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Marxus%20Reyes/Downloads/Capstone%20v2/src/components/ui/avatar.jsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const Avatar = registerClientReference(\n    function() { throw new Error(\"Attempted to call Avatar() from the server but Avatar is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/avatar.jsx\",\n    \"Avatar\",\n);\nexport const AvatarFallback = registerClientReference(\n    function() { throw new Error(\"Attempted to call AvatarFallback() from the server but AvatarFallback is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/avatar.jsx\",\n    \"AvatarFallback\",\n);\nexport const AvatarImage = registerClientReference(\n    function() { throw new Error(\"Attempted to call AvatarImage() from the server but AvatarImage is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/avatar.jsx\",\n    \"AvatarImage\",\n);\n"],"names":[],"mappings":";;;;;AAAA;;AACO,MAAM,SAAS,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACxC;IAAa,MAAM,IAAI,MAAM;AAA4N,GACzP,0CACA;AAEG,MAAM,iBAAiB,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAChD;IAAa,MAAM,IAAI,MAAM;AAA4O,GACzQ,0CACA;AAEG,MAAM,cAAc,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAC7C;IAAa,MAAM,IAAI,MAAM;AAAsO,GACnQ,0CACA","debugId":null}},
    {"offset": {"line": 852, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 862, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Marxus%20Reyes/Downloads/Capstone%20v2/src/components/ui/button.jsx"],"sourcesContent":["/**\n * @fileoverview Defines the Button component.\n * It is a versatile button component with various styles (variants) and sizes.\n * It is built using class-variance-authority (cva) for easy customization.\n */\nimport * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { cva } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\n/**\n * Defines the different visual styles and sizes for the button.\n * Variants include 'default', 'destructive', 'outline', 'secondary', 'ghost', 'link'.\n * Sizes include 'default', 'sm', 'lg', 'icon'.\n */\nconst buttonVariants = cva(\n  \"inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\",\n  {\n    variants: {\n      variant: {\n        default: \"bg-primary text-primary-foreground hover:bg-primary/90\",\n        destructive:\n          \"bg-destructive text-destructive-foreground hover:bg-destructive/90\",\n        outline:\n          \"border border-input bg-background hover:bg-accent hover:text-accent-foreground\",\n        secondary:\n          \"bg-secondary text-secondary-foreground hover:bg-secondary/80\",\n        ghost: \"hover:bg-accent hover:text-accent-foreground\",\n        link: \"text-primary underline-offset-4 hover:underline\",\n      },\n      size: {\n        default: \"h-10 px-4 py-2\",\n        sm: \"h-9 rounded-md px-3\",\n        lg: \"h-11 rounded-md px-8\",\n        icon: \"h-10 w-10\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\n/**\n * The Button component.\n * @param {ButtonProps} props - The properties for the button.\n * @returns {JSX.Element} The rendered button.\n */\nconst Button = React.forwardRef(\n  ({ className, variant, size, asChild = false, ...props }, ref) => {\n    // If `asChild` is true, it renders the child as the button, passing the props.\n    // Otherwise, it renders a standard <button> element.\n    const Comp = asChild ? Slot : \"button\"\n    return (\n      <Comp\n        className={cn(buttonVariants({ variant, size, className }))}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nButton.displayName = \"Button\"\n\nexport { Button, buttonVariants }\n"],"names":[],"mappings":"AAAA;;;;CAIC;;;;;AACD;AACA;AACA;AAEA;;;;;;AAEA;;;;CAIC,GACD,MAAM,iBAAiB,CAAA,GAAA,gKAAA,CAAA,MAAG,AAAD,EACvB,4VACA;IACE,UAAU;QACR,SAAS;YACP,SAAS;YACT,aACE;YACF,SACE;YACF,WACE;YACF,OAAO;YACP,MAAM;QACR;QACA,MAAM;YACJ,SAAS;YACT,IAAI;YACJ,IAAI;YACJ,MAAM;QACR;IACF;IACA,iBAAiB;QACf,SAAS;QACT,MAAM;IACR;AACF;AAGF;;;;CAIC,GACD,MAAM,uBAAS,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAC5B,CAAC,EAAE,SAAS,EAAE,OAAO,EAAE,IAAI,EAAE,UAAU,KAAK,EAAE,GAAG,OAAO,EAAE;IACxD,+EAA+E;IAC/E,qDAAqD;IACrD,MAAM,OAAO,UAAU,gKAAA,CAAA,OAAI,GAAG;IAC9B,qBACE,8OAAC;QACC,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,eAAe;YAAE;YAAS;YAAM;QAAU;QACxD,KAAK;QACJ,GAAG,KAAK;;;;;;AAGf;AAEF,OAAO,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 936, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Marxus%20Reyes/Downloads/Capstone%20v2/src/components/ui/badge.jsx"],"sourcesContent":["/**\n * @fileoverview This file defines the Badge component.\n * Badges are used to highlight small pieces of information, such as a status or a category.\n * They come in different visual styles (variants).\n */\nimport * as React from \"react\"\nimport { cva } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\n/**\n * Defines the visual styles for the badge component.\n * Includes variants for different states like 'default', 'secondary', 'destructive', and 'outline'.\n */\nconst badgeVariants = cva(\n  \"inline-flex items-center rounded-full border px-2.5 py-0.5 text-xs font-semibold transition-colors focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2\",\n  {\n    variants: {\n      variant: {\n        default:\n          \"border-transparent bg-primary text-primary-foreground hover:bg-primary/80\",\n        secondary:\n          \"border-transparent bg-secondary text-secondary-foreground hover:bg-secondary/80\",\n        destructive:\n          \"border-transparent bg-destructive text-destructive-foreground hover:bg-destructive/80\",\n        outline: \"text-foreground\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\n/**\n * The Badge component itself.\n * @param {BadgeProps} props - The properties for the badge.\n * @returns {JSX.Element} The rendered badge component.\n */\nfunction Badge({ className, variant, ...props }) {\n  return (\n    <div className={cn(badgeVariants({ variant }), className)} {...props} />\n  )\n}\n\nexport { Badge, badgeVariants }\n"],"names":[],"mappings":"AAAA;;;;CAIC;;;;;AACD;AACA;AAEA;;;;;AAEA;;;CAGC,GACD,MAAM,gBAAgB,CAAA,GAAA,gKAAA,CAAA,MAAG,AAAD,EACtB,0KACA;IACE,UAAU;QACR,SAAS;YACP,SACE;YACF,WACE;YACF,aACE;YACF,SAAS;QACX;IACF;IACA,iBAAiB;QACf,SAAS;IACX;AACF;AAGF;;;;CAIC,GACD,SAAS,MAAM,EAAE,SAAS,EAAE,OAAO,EAAE,GAAG,OAAO;IAC7C,qBACE,8OAAC;QAAI,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,cAAc;YAAE;QAAQ,IAAI;QAAa,GAAG,KAAK;;;;;;AAExE","debugId":null}},
    {"offset": {"line": 991, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Marxus%20Reyes/Downloads/Capstone%20v2/src/app/hr/employee-data/%5Bid%5D/page.jsx"],"sourcesContent":["/**\n * @fileoverview This file defines the employee profile view page for the HR portal.\n * It displays detailed information about a single employee.\n */\nimport {\n  Card,\n  CardContent,\n  CardHeader,\n  CardTitle,\n  CardDescription,\n} from \"@/components/ui/card\";\nimport { Avatar, AvatarFallback, AvatarImage } from \"@/components/ui/avatar\";\nimport { Button } from \"@/components/ui/button\";\nimport { ArrowLeft, Edit } from \"lucide-react\";\nimport Link from \"next/link\";\nimport { getEmployeeById } from \"@/lib/data\";\nimport { Badge } from \"@/components/ui/badge\";\n\n/**\n * Renders the detailed view of a single employee's profile.\n * @param {{ params: { id: string } }} props - The props containing the employee ID from the URL.\n * @returns {JSX.Element} The employee profile page component.\n */\nexport default async function EmployeeProfilePage({ params }) {\n  const employee = await getEmployeeById(params.id);\n\n  if (!employee) {\n    return (\n      <div className=\"text-center\">\n        <h1 className=\"text-2xl font-bold\">Employee not found</h1>\n        <p className=\"text-muted-foreground\">The employee with ID {params.id} could not be found.</p>\n        <Button asChild variant=\"link\" className=\"mt-4\">\n          <Link href=\"/hr/employee-data\">\n            <ArrowLeft className=\"mr-2\" />\n            Back to Employee List\n          </Link>\n        </Button>\n      </div>\n    )\n  }\n  \n  const initials = employee.name.split(\" \").map((n) => n[0]).join(\"\");\n\n  return (\n    <div className=\"space-y-6\">\n       <div className=\"flex justify-between items-center\">\n            <Button asChild variant=\"outline\" size=\"sm\">\n                <Link href=\"/hr/employee-data\">\n                    <ArrowLeft className=\"mr-2\" />\n                    Back to Employee List\n                </Link>\n            </Button>\n            <Button asChild>\n                <Link href={`/hr/employee-data/${employee.id}/edit`}>\n                    <Edit className=\"mr-2\" />\n                    Edit Profile\n                </Link>\n            </Button>\n        </div>\n\n      <Card className=\"max-w-4xl mx-auto\">\n        <CardHeader>\n            <div className=\"flex items-start gap-6\">\n                <Avatar className=\"h-24 w-24\">\n                    <AvatarImage src={`https://i.pravatar.cc/150?u=${employee.email}`} alt={employee.name} />\n                    <AvatarFallback>{initials}</AvatarFallback>\n                </Avatar>\n                <div className=\"flex-1\">\n                    <div className=\"flex justify-between items-center\">\n                        <CardTitle className=\"font-headline text-3xl\">{employee.name}</CardTitle>\n                        <Badge \n                            variant={employee.status === 'Active' ? 'default' : employee.status === 'On Leave' ? 'secondary' : 'destructive'} \n                            className={`${employee.status === 'Active' ? 'bg-green-500' : ''} text-lg`}\n                        >\n                            {employee.status}\n                        </Badge>\n                    </div>\n                    <CardDescription className=\"text-lg\">{employee.position}</CardDescription>\n                </div>\n            </div>\n        </CardHeader>\n        <CardContent className=\"space-y-6 pt-6\">\n            <div>\n                <h3 className=\"text-lg font-semibold border-b pb-2 mb-4\">Personal Information</h3>\n                <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4 text-sm\">\n                    <InfoItem label=\"Employee ID\" value={employee.id} />\n                    <InfoItem label=\"Email\" value={employee.email} />\n                    <InfoItem label=\"Date of Birth\" value={employee.date_of_birth} />\n                    <InfoItem label=\"Gender\" value={employee.gender} />\n                </div>\n            </div>\n             <div>\n                <h3 className=\"text-lg font-semibold border-b pb-2 mb-4\">Employment Details</h3>\n                <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4 text-sm\">\n                    <InfoItem label=\"Department\" value={employee.department} />\n                    <InfoItem label=\"Branch\" value={employee.branch} />\n                    <InfoItem label=\"Date Hired\" value={employee.date_hired} />\n                    <InfoItem label=\"Available Leaves\" value={`${employee.available_leaves} days`} />\n                </div>\n            </div>\n        </CardContent>\n      </Card>\n    </div>\n  );\n}\n\nfunction InfoItem({ label, value }) {\n    return (\n        <div>\n            <p className=\"font-medium text-muted-foreground\">{label}</p>\n            <p>{value}</p>\n        </div>\n    )\n}\n"],"names":[],"mappings":"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","debugId":null}}]
}