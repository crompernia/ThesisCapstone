{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 24, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/logo.jsx"],"sourcesContent":["/**\n * @fileoverview Defines the Logo component.\n * This component displays the company's logo as an SVG.\n */\nimport { cn } from \"@/lib/utils\";\n\n/**\n * Renders the Chumplace company logo.\n * @param {object} props - The component props.\n * @param {string} [props.className] - Optional CSS classes for styling.\n * @returns {JSX.Element} The rendered logo component.\n */\nexport function Logo({ className }) {\n  return (\n    <div\n      className={cn(\n        \"bg-transparent flex items-center justify-center\",\n        className\n      )}\n    >\n      <svg\n        className=\"w-auto h-full\"\n        viewBox=\"0 0 200 120\"\n        fill=\"none\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n      >\n        {/* Outer green oval */}\n        <path d=\"M100 120C171.228 120 200 93.1371 200 60C200 26.8629 171.228 0 100 0C28.7715 0 0 26.8629 0 60C0 93.1371 28.7715 120 100 120Z\" fill=\"#84C441\"/>\n        {/* Inner dark green oval */}\n        <path d=\"M100 110C160.751 110 185 85.3757 185 55C185 24.6243 160.751 0 100 0C39.2487 0 15 24.6243 15 55C15 85.3757 39.2487 110 100 110Z\" fill=\"#006A35\"/>\n        \n        {/* \"CHUM\" text */}\n        <text x=\"28\" y=\"70\" fontFamily=\"Arial, sans-serif\" fontWeight=\"bold\" fontSize=\"30\" fill=\"white\">CHUM</text>\n        {/* \"PLACE\" text */}\n        <text x=\"105\" y=\"70\" fontFamily=\"Arial, sans-serif\" fontWeight=\"bold\" fontSize=\"30\" fill=\"#F4C13D\">PLACE</text>\n        \n        {/* Boba tea icon */}\n        <g transform=\"translate(140, 20) scale(0.7)\">\n            {/* Cup shape */}\n            <path d=\"M15 5 H 45 L 40 55 C 40 60 35 65 30 65 C 25 65 20 60 20 55 L 15 5 Z\" fill=\"#F4C13D\" fillOpacity=\"0.3\"/>\n            <path d=\"M15 5 H 45 L 40 55 C 40 60 35 65 30 65 C 25 65 20 60 20 55 L 15 5 Z\" stroke=\"white\" strokeWidth=\"2\" fill=\"none\"/>\n            \n            {/* Boba pearls */}\n            <circle cx=\"30\" cy=\"30\" r=\"3\" fill=\"#006A35\"/>\n            <circle cx=\"25\" cy=\"40\" r=\"3\" fill=\"#006A35\"/>\n            <circle cx=\"35\" cy=\"40\" r=\"3\" fill=\"#006A35\"/>\n            <circle cx=\"30\" cy=\"50\" r=\"3\" fill=\"#006A35\"/>\n            \n            {/* Straw */}\n            <path d=\"M42 15 C 52 15 52 0 47 0\" stroke=\"white\" strokeWidth=\"2\" fill=\"none\"/>\n        </g>\n      </svg>\n    </div>\n  );\n}\n"],"names":[],"mappings":"AAAA;;;CAGC;;;;AACD;;;AAQO,SAAS,KAAK,EAAE,SAAS,EAAE;IAChC,qBACE,8OAAC;QACC,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,mDACA;kBAGF,cAAA,8OAAC;YACC,WAAU;YACV,SAAQ;YACR,MAAK;YACL,OAAM;;8BAGN,8OAAC;oBAAK,GAAE;oBAA8H,MAAK;;;;;;8BAE3I,8OAAC;oBAAK,GAAE;oBAAiI,MAAK;;;;;;8BAG9I,8OAAC;oBAAK,GAAE;oBAAK,GAAE;oBAAK,YAAW;oBAAoB,YAAW;oBAAO,UAAS;oBAAK,MAAK;8BAAQ;;;;;;8BAEhG,8OAAC;oBAAK,GAAE;oBAAM,GAAE;oBAAK,YAAW;oBAAoB,YAAW;oBAAO,UAAS;oBAAK,MAAK;8BAAU;;;;;;8BAGnG,8OAAC;oBAAE,WAAU;;sCAET,8OAAC;4BAAK,GAAE;4BAAsE,MAAK;4BAAU,aAAY;;;;;;sCACzG,8OAAC;4BAAK,GAAE;4BAAsE,QAAO;4BAAQ,aAAY;4BAAI,MAAK;;;;;;sCAGlH,8OAAC;4BAAO,IAAG;4BAAK,IAAG;4BAAK,GAAE;4BAAI,MAAK;;;;;;sCACnC,8OAAC;4BAAO,IAAG;4BAAK,IAAG;4BAAK,GAAE;4BAAI,MAAK;;;;;;sCACnC,8OAAC;4BAAO,IAAG;4BAAK,IAAG;4BAAK,GAAE;4BAAI,MAAK;;;;;;sCACnC,8OAAC;4BAAO,IAAG;4BAAK,IAAG;4BAAK,GAAE;4BAAI,MAAK;;;;;;sCAGnC,8OAAC;4BAAK,GAAE;4BAA2B,QAAO;4BAAQ,aAAY;4BAAI,MAAK;;;;;;;;;;;;;;;;;;;;;;;AAKnF","debugId":null}},
    {"offset": {"line": 181, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/button.jsx"],"sourcesContent":["/**\n * @fileoverview Defines the Button component.\n * It is a versatile button component with various styles (variants) and sizes.\n * It is built using class-variance-authority (cva) for easy customization.\n */\nimport * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { cva } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\n/**\n * Defines the different visual styles and sizes for the button.\n * Variants include 'default', 'destructive', 'outline', 'secondary', 'ghost', 'link'.\n * Sizes include 'default', 'sm', 'lg', 'icon'.\n */\nconst buttonVariants = cva(\n  \"inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\",\n  {\n    variants: {\n      variant: {\n        default: \"bg-primary text-primary-foreground hover:bg-primary/90\",\n        destructive:\n          \"bg-destructive text-destructive-foreground hover:bg-destructive/90\",\n        outline:\n          \"border border-input bg-background hover:bg-accent hover:text-accent-foreground\",\n        secondary:\n          \"bg-secondary text-secondary-foreground hover:bg-secondary/80\",\n        ghost: \"hover:bg-accent hover:text-accent-foreground\",\n        link: \"text-primary underline-offset-4 hover:underline\",\n      },\n      size: {\n        default: \"h-10 px-4 py-2\",\n        sm: \"h-9 rounded-md px-3\",\n        lg: \"h-11 rounded-md px-8\",\n        icon: \"h-10 w-10\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\n/**\n * The Button component.\n * @param {ButtonProps} props - The properties for the button.\n * @returns {JSX.Element} The rendered button.\n */\nconst Button = React.forwardRef(\n  ({ className, variant, size, asChild = false, ...props }, ref) => {\n    // If `asChild` is true, it renders the child as the button, passing the props.\n    // Otherwise, it renders a standard <button> element.\n    const Comp = asChild ? Slot : \"button\"\n    return (\n      <Comp\n        className={cn(buttonVariants({ variant, size, className }))}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nButton.displayName = \"Button\"\n\nexport { Button, buttonVariants }\n"],"names":[],"mappings":"AAAA;;;;CAIC;;;;;AACD;AACA;AACA;AAEA;;;;;;AAEA;;;;CAIC,GACD,MAAM,iBAAiB,CAAA,GAAA,gKAAA,CAAA,MAAG,AAAD,EACvB,4VACA;IACE,UAAU;QACR,SAAS;YACP,SAAS;YACT,aACE;YACF,SACE;YACF,WACE;YACF,OAAO;YACP,MAAM;QACR;QACA,MAAM;YACJ,SAAS;YACT,IAAI;YACJ,IAAI;YACJ,MAAM;QACR;IACF;IACA,iBAAiB;QACf,SAAS;QACT,MAAM;IACR;AACF;AAGF;;;;CAIC,GACD,MAAM,uBAAS,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAC5B,CAAC,EAAE,SAAS,EAAE,OAAO,EAAE,IAAI,EAAE,UAAU,KAAK,EAAE,GAAG,OAAO,EAAE;IACxD,+EAA+E;IAC/E,qDAAqD;IACrD,MAAM,OAAO,UAAU,gKAAA,CAAA,OAAI,GAAG;IAC9B,qBACE,8OAAC;QACC,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,eAAe;YAAE;YAAS;YAAM;QAAU;QACxD,KAAK;QACJ,GAAG,KAAK;;;;;;AAGf;AAEF,OAAO,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 255, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/card.jsx"],"sourcesContent":["/**\n * @fileoverview Defines the Card component and its parts.\n * A card is a flexible and extensible content container. It includes options for\n * headers, footers, titles, descriptions, and content.\n */\nimport * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\n/**\n * The main container for the card component.\n */\nconst Card = React.forwardRef(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"rounded-lg border bg-card text-card-foreground shadow-sm\",\n      className\n    )}\n    {...props}\n  />\n))\nCard.displayName = \"Card\"\n\n/**\n * The header section of the card. Typically contains the title and description.\n */\nconst CardHeader = React.forwardRef(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex flex-col space-y-1.5 p-6\", className)}\n    {...props}\n  />\n))\nCardHeader.displayName = \"CardHeader\"\n\n/**\n * The title of the card. Should be placed inside a CardHeader.\n */\nconst CardTitle = React.forwardRef(({ className, ...props }, ref) => (\n  <h3\n    ref={ref}\n    className={cn(\n      \"text-2xl font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nCardTitle.displayName = \"CardTitle\"\n\n/**\n * A description for the card. Should be placed inside a CardHeader.\n */\nconst CardDescription = React.forwardRef(({ className, ...props }, ref) => (\n  <p\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nCardDescription.displayName = \"CardDescription\"\n\n/**\n * The main content area of the card.\n */\nconst CardContent = React.forwardRef(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn(\"p-6 pt-0\", className)} {...props} />\n))\nCardContent.displayName = \"CardContent\"\n\n/**\n_The footer section of the card.\n*/\nconst CardFooter = React.forwardRef(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex items-center p-6 pt-0\", className)}\n    {...props}\n  />\n))\nCardFooter.displayName = \"CardFooter\"\n\nexport { Card, CardHeader, CardFooter, CardTitle, CardDescription, CardContent }\n"],"names":[],"mappings":"AAAA;;;;CAIC;;;;;;;;;AACD;AAEA;;;;AAEA;;CAEC,GACD,MAAM,qBAAO,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAAE,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBACtD,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,4DACA;QAED,GAAG,KAAK;;;;;;AAGb,KAAK,WAAW,GAAG;AAEnB;;CAEC,GACD,MAAM,2BAAa,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAAE,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC5D,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGb,WAAW,WAAW,GAAG;AAEzB;;CAEC,GACD,MAAM,0BAAY,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAAE,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC3D,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,sDACA;QAED,GAAG,KAAK;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB;;CAEC,GACD,MAAM,gCAAkB,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAAE,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBACjE,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGb,gBAAgB,WAAW,GAAG;AAE9B;;CAEC,GACD,MAAM,4BAAc,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAAE,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC7D,8OAAC;QAAI,KAAK;QAAK,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,YAAY;QAAa,GAAG,KAAK;;;;;;AAEhE,YAAY,WAAW,GAAG;AAE1B;;AAEA,GACA,MAAM,2BAAa,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAAE,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC5D,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,8BAA8B;QAC3C,GAAG,KAAK;;;;;;AAGb,WAAW,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 362, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/lib/db.js"],"sourcesContent":["/**\n * @fileoverview This file contains the database connection configuration and utilities.\n * It uses the 'pg' library to connect to a PostgreSQL database.\n * The connection details are sourced from environment variables for security.\n */\n\nimport { Pool } from 'pg';\n\n// Create a new connection pool.\n// A pool is better than a single client for web applications\n// because it can manage multiple connections at once.\nconst pool = new Pool({\n  user: process.env.DB_USER || 'postgres',\n  host: process.env.DB_HOST || 'localhost',\n  database: process.env.DB_NAME || 'employeedb',\n  password: process.env.DB_PASSWORD || 'password',\n  port: parseInt(process.env.DB_PORT || '5432', 10),\n});\n\n/**\n * Executes a query against the database.\n * @param {string} text - The SQL query string.\n * @param {any[]} [params] - Optional parameters for the SQL query.\n * @returns {Promise<any>} A promise that resolves with the query result.\n */\nexport const query = (text, params) => {\n    return pool.query(text, params);\n};\n\n\nexport async function initializeDb() {\n    const client = await pool.connect();\n    try {\n        await client.query('BEGIN');\n\n        // Check if employees table exists\n        const employeesTableExists = await client.query(`\n            SELECT EXISTS (\n                SELECT FROM information_schema.tables \n                WHERE  table_name   = 'employees'\n            );\n        `);\n\n        if (!employeesTableExists.rows[0].exists) {\n            console.log(\"Creating database schema...\");\n            await client.query(`\n                -- Table for storing basic employee data\n                CREATE TABLE employees (\n                    id VARCHAR(255) PRIMARY KEY,\n                    first_name VARCHAR(255) NOT NULL,\n                    last_name VARCHAR(255) NOT NULL,\n                    middle_name VARCHAR(255),\n                    position VARCHAR(255),\n                    department VARCHAR(255),\n                    branch VARCHAR(255),\n                    gender VARCHAR(50),\n                    date_of_birth DATE,\n                    date_hired DATE,\n                    status VARCHAR(50) DEFAULT 'Active', -- e.g., Active, On Leave, Resigned\n                    photo_url TEXT,\n                    password TEXT NOT NULL\n                );\n\n                -- Table for HR personnel accounts\n                CREATE TABLE hr_personnel (\n                    id SERIAL PRIMARY KEY,\n                    first_name VARCHAR(255) NOT NULL,\n                    last_name VARCHAR(255) NOT NULL,\n                    email VARCHAR(255) UNIQUE NOT NULL,\n                    password TEXT NOT NULL\n                );\n                \n                -- Table for Administrator accounts\n                CREATE TABLE admins (\n                    id SERIAL PRIMARY KEY,\n                    first_name VARCHAR(255) NOT NULL,\n                    last_name VARCHAR(255) NOT NULL,\n                    email VARCHAR(255) UNIQUE NOT NULL,\n                    password TEXT NOT NULL\n                );\n\n                -- Table for attendance records\n                CREATE TABLE attendance (\n                    id SERIAL PRIMARY KEY,\n                    employee_id VARCHAR(255) REFERENCES employees(id),\n                    attendance_date DATE NOT NULL,\n                    time_in TIMESTAMP,\n                    time_out TIMESTAMP,\n                    status VARCHAR(50), -- e.g., Present, Late, Absent\n                    notes TEXT,\n                    UNIQUE(employee_id, attendance_date)\n                );\n                \n                -- Table for schedules\n                CREATE TABLE schedules (\n                    id SERIAL PRIMARY KEY,\n                    employee_id VARCHAR(255) REFERENCES employees(id),\n                    week_start_date DATE NOT NULL,\n                    schedule_data JSONB -- Stores the entire week's schedule as a JSON object\n                );\n\n                -- Table for payslips\n                CREATE TABLE payslips (\n                    id SERIAL PRIMARY KEY,\n                    employee_id VARCHAR(255) REFERENCES employees(id),\n                    period_start DATE NOT NULL,\n                    period_end DATE NOT NULL,\n                    pay_date DATE,\n                    earnings JSONB,\n                    deductions JSONB,\n                    net_pay NUMERIC(10, 2)\n                );\n                \n                -- Table for leave requests\n                CREATE TABLE leave_requests (\n                    id SERIAL PRIMARY KEY,\n                    employee_id VARCHAR(255) REFERENCES employees(id),\n                    leave_type VARCHAR(100),\n                    start_date DATE,\n                    end_date DATE,\n                    reason TEXT,\n                    status VARCHAR(50) DEFAULT 'Pending' -- e.g., Pending, Approved, Rejected\n                );\n\n                -- Table for company-wide announcements\n                CREATE TABLE announcements (\n                    id SERIAL PRIMARY KEY,\n                    title VARCHAR(255) NOT NULL,\n                    content TEXT,\n                    posted_by INTEGER REFERENCES hr_personnel(id),\n                    posted_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n                    status VARCHAR(50) DEFAULT 'Draft' -- e.g., Draft, Published\n                );\n            `);\n\n            console.log(\"Inserting sample data...\");\n            /**\n             * Default User Accounts for Testing:\n             * \n             * 1. Employee Account\n             *    - Identifier: EMP-00123\n             *    - Password:   password\n             * \n             * 2. HR Account\n             *    - Identifier: olivia.chen.hr@example.com\n             *    - Password:   password\n             * \n             * 3. Admin Account\n             *    - Identifier: super@example.com\n             *    - Password:   password\n             */\n            await client.query(`\n                INSERT INTO employees (id, first_name, last_name, position, department, branch, status, password) VALUES \n                ('EMP-00123', 'Maria', 'Rodriguez', 'Senior Software Engineer', 'Technology', 'Headquarters', 'Active', 'password');\n\n                INSERT INTO hr_personnel (first_name, last_name, email, password) VALUES \n                ('Olivia', 'Chen', 'olivia.chen.hr@example.com', 'password');\n\n                INSERT INTO admins (first_name, last_name, email, password) VALUES \n                ('Super', 'Admin', 'super@example.com', 'password');\n\n                INSERT INTO leave_requests (employee_id, leave_type, start_date, end_date, reason, status) VALUES\n                ('EMP-00123', 'Vacation', '2024-09-01', '2024-09-05', 'Family trip to Japan.', 'Pending');\n            `);\n            console.log(\"Database initialized successfully.\");\n        }\n\n        await client.query('COMMIT');\n    } catch (e) {\n        await client.query('ROLLBACK');\n        throw e;\n    } finally {\n        client.release();\n    }\n}\n"],"names":[],"mappings":"AAAA;;;;CAIC;;;;AAED;;;;;;AAEA,gCAAgC;AAChC,6DAA6D;AAC7D,sDAAsD;AACtD,MAAM,OAAO,IAAI,oGAAA,CAAA,OAAI,CAAC;IACpB,MAAM,QAAQ,GAAG,CAAC,OAAO,IAAI;IAC7B,MAAM,QAAQ,GAAG,CAAC,OAAO,IAAI;IAC7B,UAAU,QAAQ,GAAG,CAAC,OAAO,IAAI;IACjC,UAAU,QAAQ,GAAG,CAAC,WAAW,IAAI;IACrC,MAAM,SAAS,QAAQ,GAAG,CAAC,OAAO,IAAI,QAAQ;AAChD;AAQO,MAAM,QAAQ,CAAC,MAAM;IACxB,OAAO,KAAK,KAAK,CAAC,MAAM;AAC5B;AAGO,eAAe;IAClB,MAAM,SAAS,MAAM,KAAK,OAAO;IACjC,IAAI;QACA,MAAM,OAAO,KAAK,CAAC;QAEnB,kCAAkC;QAClC,MAAM,uBAAuB,MAAM,OAAO,KAAK,CAAC,CAAC;;;;;QAKjD,CAAC;QAED,IAAI,CAAC,qBAAqB,IAAI,CAAC,EAAE,CAAC,MAAM,EAAE;YACtC,QAAQ,GAAG,CAAC;YACZ,MAAM,OAAO,KAAK,CAAC,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;YAwFpB,CAAC;YAED,QAAQ,GAAG,CAAC;YACZ;;;;;;;;;;;;;;aAcC,GACD,MAAM,OAAO,KAAK,CAAC,CAAC;;;;;;;;;;;;YAYpB,CAAC;YACD,QAAQ,GAAG,CAAC;QAChB;QAEA,MAAM,OAAO,KAAK,CAAC;IACvB,EAAE,OAAO,GAAG;QACR,MAAM,OAAO,KAAK,CAAC;QACnB,MAAM;IACV,SAAU;QACN,OAAO,OAAO;IAClB;AACJ","debugId":null}},
    {"offset": {"line": 536, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/%28auth%29/login/page.jsx"],"sourcesContent":["/**\n * @fileoverview This file defines the login page for the application.\n * It also serves as the entry point for initializing the database connection.\n */\nimport { initializeDb } from \"@/lib/db\";\nimport { Logo } from \"@/components/logo\";\nimport { Button } from \"@/components/ui/button\";\nimport { Card, CardContent, CardHeader, CardTitle, CardDescription } from \"@/components/ui/card\";\nimport Link from \"next/link\";\nimport { ArrowRight } from \"lucide-react\";\n\n\n/**\n * Renders the main landing page for the application.\n * It features links to the different portals.\n * @returns {JSX.Element} The landing page component.\n */\nexport default async function LoginPage() {\n    // Initialize the database connection when the login page is loaded.\n    await initializeDb();\n\n    return (\n    <main className=\"flex min-h-screen flex-col items-center justify-center bg-muted/40 p-4\">\n      <div className=\"w-full max-w-md\">\n        <div className=\"flex justify-center mb-6\">\n          <Logo className=\"h-20 w-auto\" />\n        </div>\n        <Card>\n            <CardHeader className=\"text-center\">\n                <CardTitle className=\"text-2xl font-headline\">Welcome to ChumTing</CardTitle>\n                <CardDescription>Please select a portal to continue.</CardDescription>\n            </CardHeader>\n            <CardContent className=\"space-y-4\">\n                <Button asChild className=\"w-full justify-between\" size=\"lg\">\n                    <Link href=\"/dashboard\">\n                        <span>Employee Portal</span>\n                        <ArrowRight />\n                    </Link>\n                </Button>\n                <Button asChild className=\"w-full justify-between\" size=\"lg\">\n                    <Link href=\"/hr/dashboard\">\n                        <span>HR Portal</span>\n                        <ArrowRight />\n                    </Link>\n                </Button>\n                <Button asChild className=\"w-full justify-between\" size=\"lg\">\n                    <Link href=\"/admin/dashboard\">\n                        <span>Admin Portal</span>\n                        <ArrowRight />\n                    </Link>\n                </Button>\n            </CardContent>\n        </Card>\n        <p className=\"text-xs text-muted-foreground text-center mt-8\">\n          © {new Date().getFullYear()} ChumTing. All rights reserved.\n        </p>\n      </div>\n    </main>\n  );\n}"],"names":[],"mappings":"AAAA;;;CAGC;;;;AACD;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;AAQe,eAAe;IAC1B,oEAAoE;IACpE,MAAM,CAAA,GAAA,gHAAA,CAAA,eAAY,AAAD;IAEjB,qBACA,8OAAC;QAAK,WAAU;kBACd,cAAA,8OAAC;YAAI,WAAU;;8BACb,8OAAC;oBAAI,WAAU;8BACb,cAAA,8OAAC,0HAAA,CAAA,OAAI;wBAAC,WAAU;;;;;;;;;;;8BAElB,8OAAC,gIAAA,CAAA,OAAI;;sCACD,8OAAC,gIAAA,CAAA,aAAU;4BAAC,WAAU;;8CAClB,8OAAC,gIAAA,CAAA,YAAS;oCAAC,WAAU;8CAAyB;;;;;;8CAC9C,8OAAC,gIAAA,CAAA,kBAAe;8CAAC;;;;;;;;;;;;sCAErB,8OAAC,gIAAA,CAAA,cAAW;4BAAC,WAAU;;8CACnB,8OAAC,kIAAA,CAAA,SAAM;oCAAC,OAAO;oCAAC,WAAU;oCAAyB,MAAK;8CACpD,cAAA,8OAAC,4JAAA,CAAA,UAAI;wCAAC,MAAK;;0DACP,8OAAC;0DAAK;;;;;;0DACN,8OAAC,kNAAA,CAAA,aAAU;;;;;;;;;;;;;;;;8CAGnB,8OAAC,kIAAA,CAAA,SAAM;oCAAC,OAAO;oCAAC,WAAU;oCAAyB,MAAK;8CACpD,cAAA,8OAAC,4JAAA,CAAA,UAAI;wCAAC,MAAK;;0DACP,8OAAC;0DAAK;;;;;;0DACN,8OAAC,kNAAA,CAAA,aAAU;;;;;;;;;;;;;;;;8CAGnB,8OAAC,kIAAA,CAAA,SAAM;oCAAC,OAAO;oCAAC,WAAU;oCAAyB,MAAK;8CACpD,cAAA,8OAAC,4JAAA,CAAA,UAAI;wCAAC,MAAK;;0DACP,8OAAC;0DAAK;;;;;;0DACN,8OAAC,kNAAA,CAAA,aAAU;;;;;;;;;;;;;;;;;;;;;;;;;;;;8BAK3B,8OAAC;oBAAE,WAAU;;wBAAiD;wBACzD,IAAI,OAAO,WAAW;wBAAG;;;;;;;;;;;;;;;;;;AAKtC","debugId":null}},
    {"offset": {"line": 744, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/page.jsx"],"sourcesContent":["/**\n * @fileoverview This file defines the main entry point of the application.\n * It provides a simple welcome page with links to the different user dashboards.\n */\nimport { Logo } from \"@/components/logo\";\nimport { Button } from \"@/components/ui/button\";\nimport { Card, CardContent, CardHeader, CardTitle, CardDescription } from \"@/components/ui/card\";\nimport Link from \"next/link\";\nimport { ArrowRight } from \"lucide-react\";\nimport LoginPage from \"./(auth)/login/page\";\n\n/**\n * Renders the main landing page for the application.\n * It features links to the different portals.\n * @returns {JSX.Element} The landing page component.\n */\nexport default function WelcomePage() {\n  return <LoginPage />;\n}\n"],"names":[],"mappings":"AAAA;;;CAGC;;;;AACD;AACA;AACA;AACA;AAEA;;;;;;;;;;;;AAOe,SAAS;IACtB,qBAAO,8OAAC,wIAAA,CAAA,UAAS;;;;;AACnB","debugId":null}}]
}