{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 30, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/card.jsx"],"sourcesContent":["/**\n * @fileoverview Defines the Card component and its parts.\n * A card is a flexible and extensible content container. It includes options for\n * headers, footers, titles, descriptions, and content.\n */\nimport * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\n/**\n * The main container for the card component.\n */\nconst Card = React.forwardRef(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"rounded-lg border bg-card text-card-foreground shadow-sm\",\n      className\n    )}\n    {...props}\n  />\n))\nCard.displayName = \"Card\"\n\n/**\n * The header section of the card. Typically contains the title and description.\n */\nconst CardHeader = React.forwardRef(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex flex-col space-y-1.5 p-6\", className)}\n    {...props}\n  />\n))\nCardHeader.displayName = \"CardHeader\"\n\n/**\n * The title of the card. Should be placed inside a CardHeader.\n */\nconst CardTitle = React.forwardRef(({ className, ...props }, ref) => (\n  <h3\n    ref={ref}\n    className={cn(\n      \"text-2xl font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nCardTitle.displayName = \"CardTitle\"\n\n/**\n * A description for the card. Should be placed inside a CardHeader.\n */\nconst CardDescription = React.forwardRef(({ className, ...props }, ref) => (\n  <p\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nCardDescription.displayName = \"CardDescription\"\n\n/**\n * The main content area of the card.\n */\nconst CardContent = React.forwardRef(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn(\"p-6 pt-0\", className)} {...props} />\n))\nCardContent.displayName = \"CardContent\"\n\n/**\n_The footer section of the card.\n*/\nconst CardFooter = React.forwardRef(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex items-center p-6 pt-0\", className)}\n    {...props}\n  />\n))\nCardFooter.displayName = \"CardFooter\"\n\nexport { Card, CardHeader, CardFooter, CardTitle, CardDescription, CardContent }\n"],"names":[],"mappings":"AAAA;;;;CAIC;;;;;;;;;AACD;AAEA;;;;AAEA;;CAEC,GACD,MAAM,qBAAO,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAAE,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBACtD,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,4DACA;QAED,GAAG,KAAK;;;;;;AAGb,KAAK,WAAW,GAAG;AAEnB;;CAEC,GACD,MAAM,2BAAa,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAAE,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC5D,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGb,WAAW,WAAW,GAAG;AAEzB;;CAEC,GACD,MAAM,0BAAY,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAAE,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC3D,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,sDACA;QAED,GAAG,KAAK;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB;;CAEC,GACD,MAAM,gCAAkB,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAAE,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBACjE,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGb,gBAAgB,WAAW,GAAG;AAE9B;;CAEC,GACD,MAAM,4BAAc,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAAE,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC7D,8OAAC;QAAI,KAAK;QAAK,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,YAAY;QAAa,GAAG,KAAK;;;;;;AAEhE,YAAY,WAAW,GAAG;AAE1B;;AAEA,GACA,MAAM,2BAAa,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAAE,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC5D,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,8BAA8B;QAC3C,GAAG,KAAK;;;;;;AAGb,WAAW,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 127, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/table.jsx"],"sourcesContent":["/**\n * @fileoverview Defines the Table component and its parts.\n * This provides a set of styled components for creating tables.\n */\nimport * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\n/** The root `<table>` element. */\nconst Table = React.forwardRef(({ className, ...props }, ref) => (\n  <div className=\"relative w-full overflow-auto\">\n    <table\n      ref={ref}\n      className={cn(\"w-full caption-bottom text-sm\", className)}\n      {...props}\n    />\n  </div>\n))\nTable.displayName = \"Table\"\n\n/** The `<thead>` element. */\nconst TableHeader = React.forwardRef(({ className, ...props }, ref) => (\n  <thead ref={ref} className={cn(\"[&_tr]:border-b\", className)} {...props} />\n))\nTableHeader.displayName = \"TableHeader\"\n\n/** The `<tbody>` element. */\nconst TableBody = React.forwardRef(({ className, ...props }, ref) => (\n  <tbody\n    ref={ref}\n    className={cn(\"[&_tr:last-child]:border-0\", className)}\n    {...props}\n  />\n))\nTableBody.displayName = \"TableBody\"\n\n/** The `<tfoot>` element. */\nconst TableFooter = React.forwardRef(({ className, ...props }, ref) => (\n  <tfoot\n    ref={ref}\n    className={cn(\n      \"border-t bg-muted/50 font-medium [&>tr]:last:border-b-0\",\n      className\n    )}\n    {...props}\n  />\n))\nTableFooter.displayName = \"TableFooter\"\n\n/** The `<tr>` element. */\nconst TableRow = React.forwardRef(({ className, ...props }, ref) => (\n  <tr\n    ref={ref}\n    className={cn(\n      \"border-b transition-colors hover:bg-muted/50 data-[state=selected]:bg-muted\",\n      className\n    )}\n    {...props}\n  />\n))\nTableRow.displayName = \"TableRow\"\n\n/** The `<th>` element. */\nconst TableHead = React.forwardRef(({ className, ...props }, ref) => (\n  <th\n    ref={ref}\n    className={cn(\n      \"h-12 px-4 text-left align-middle font-medium text-muted-foreground [&:has([role=checkbox])]:pr-0\",\n      className\n    )}\n    {...props}\n  />\n))\nTableHead.displayName = \"TableHead\"\n\n/** The `<td>` element. */\nconst TableCell = React.forwardRef(({ className, ...props }, ref) => (\n  <td\n    ref={ref}\n    className={cn(\"p-4 align-middle [&:has([role=checkbox])]:pr-0\", className)}\n    {...props}\n  />\n))\nTableCell.displayName = \"TableCell\"\n\n/** The `<caption>` element. */\nconst TableCaption = React.forwardRef(({ className, ...props }, ref) => (\n  <caption\n    ref={ref}\n    className={cn(\"mt-4 text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nTableCaption.displayName = \"TableCaption\"\n\nexport {\n  Table,\n  TableHeader,\n  TableBody,\n  TableFooter,\n  TableHead,\n  TableRow,\n  TableCell,\n  TableCaption,\n}\n"],"names":[],"mappings":"AAAA;;;CAGC;;;;;;;;;;;AACD;AAEA;;;;AAEA,gCAAgC,GAChC,MAAM,sBAAQ,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAAE,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBACvD,8OAAC;QAAI,WAAU;kBACb,cAAA,8OAAC;YACC,KAAK;YACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;YAC9C,GAAG,KAAK;;;;;;;;;;;AAIf,MAAM,WAAW,GAAG;AAEpB,2BAA2B,GAC3B,MAAM,4BAAc,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAAE,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC7D,8OAAC;QAAM,KAAK;QAAK,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,mBAAmB;QAAa,GAAG,KAAK;;;;;;AAEzE,YAAY,WAAW,GAAG;AAE1B,2BAA2B,GAC3B,MAAM,0BAAY,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAAE,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC3D,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,8BAA8B;QAC3C,GAAG,KAAK;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,2BAA2B,GAC3B,MAAM,4BAAc,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAAE,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC7D,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,2DACA;QAED,GAAG,KAAK;;;;;;AAGb,YAAY,WAAW,GAAG;AAE1B,wBAAwB,GACxB,MAAM,yBAAW,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAAE,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1D,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,+EACA;QAED,GAAG,KAAK;;;;;;AAGb,SAAS,WAAW,GAAG;AAEvB,wBAAwB,GACxB,MAAM,0BAAY,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAAE,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC3D,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,oGACA;QAED,GAAG,KAAK;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,wBAAwB,GACxB,MAAM,0BAAY,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAAE,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC3D,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,kDAAkD;QAC/D,GAAG,KAAK;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,6BAA6B,GAC7B,MAAM,6BAAe,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAAE,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC9D,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,sCAAsC;QACnD,GAAG,KAAK;;;;;;AAGb,aAAa,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 240, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/badge.jsx"],"sourcesContent":["/**\n * @fileoverview This file defines the Badge component.\n * Badges are used to highlight small pieces of information, such as a status or a category.\n * They come in different visual styles (variants).\n */\nimport * as React from \"react\"\nimport { cva } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\n/**\n * Defines the visual styles for the badge component.\n * Includes variants for different states like 'default', 'secondary', 'destructive', and 'outline'.\n */\nconst badgeVariants = cva(\n  \"inline-flex items-center rounded-full border px-2.5 py-0.5 text-xs font-semibold transition-colors focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2\",\n  {\n    variants: {\n      variant: {\n        default:\n          \"border-transparent bg-primary text-primary-foreground hover:bg-primary/80\",\n        secondary:\n          \"border-transparent bg-secondary text-secondary-foreground hover:bg-secondary/80\",\n        destructive:\n          \"border-transparent bg-destructive text-destructive-foreground hover:bg-destructive/80\",\n        outline: \"text-foreground\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\n/**\n * The Badge component itself.\n * @param {BadgeProps} props - The properties for the badge.\n * @returns {JSX.Element} The rendered badge component.\n */\nfunction Badge({ className, variant, ...props }) {\n  return (\n    <div className={cn(badgeVariants({ variant }), className)} {...props} />\n  )\n}\n\nexport { Badge, badgeVariants }\n"],"names":[],"mappings":"AAAA;;;;CAIC;;;;;AACD;AACA;AAEA;;;;;AAEA;;;CAGC,GACD,MAAM,gBAAgB,CAAA,GAAA,gKAAA,CAAA,MAAG,AAAD,EACtB,0KACA;IACE,UAAU;QACR,SAAS;YACP,SACE;YACF,WACE;YACF,aACE;YACF,SAAS;QACX;IACF;IACA,iBAAiB;QACf,SAAS;IACX;AACF;AAGF;;;;CAIC,GACD,SAAS,MAAM,EAAE,SAAS,EAAE,OAAO,EAAE,GAAG,OAAO;IAC7C,qBACE,8OAAC;QAAI,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,cAAc;YAAE;QAAQ,IAAI;QAAa,GAAG,KAAK;;;;;;AAExE","debugId":null}},
    {"offset": {"line": 295, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/button.jsx"],"sourcesContent":["/**\n * @fileoverview Defines the Button component.\n * It is a versatile button component with various styles (variants) and sizes.\n * It is built using class-variance-authority (cva) for easy customization.\n */\nimport * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { cva } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\n/**\n * Defines the different visual styles and sizes for the button.\n * Variants include 'default', 'destructive', 'outline', 'secondary', 'ghost', 'link'.\n * Sizes include 'default', 'sm', 'lg', 'icon'.\n */\nconst buttonVariants = cva(\n  \"inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\",\n  {\n    variants: {\n      variant: {\n        default: \"bg-primary text-primary-foreground hover:bg-primary/90\",\n        destructive:\n          \"bg-destructive text-destructive-foreground hover:bg-destructive/90\",\n        outline:\n          \"border border-input bg-background hover:bg-accent hover:text-accent-foreground\",\n        secondary:\n          \"bg-secondary text-secondary-foreground hover:bg-secondary/80\",\n        ghost: \"hover:bg-accent hover:text-accent-foreground\",\n        link: \"text-primary underline-offset-4 hover:underline\",\n      },\n      size: {\n        default: \"h-10 px-4 py-2\",\n        sm: \"h-9 rounded-md px-3\",\n        lg: \"h-11 rounded-md px-8\",\n        icon: \"h-10 w-10\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\n/**\n * The Button component.\n * @param {ButtonProps} props - The properties for the button.\n * @returns {JSX.Element} The rendered button.\n */\nconst Button = React.forwardRef(\n  ({ className, variant, size, asChild = false, ...props }, ref) => {\n    // If `asChild` is true, it renders the child as the button, passing the props.\n    // Otherwise, it renders a standard <button> element.\n    const Comp = asChild ? Slot : \"button\"\n    return (\n      <Comp\n        className={cn(buttonVariants({ variant, size, className }))}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nButton.displayName = \"Button\"\n\nexport { Button, buttonVariants }\n"],"names":[],"mappings":"AAAA;;;;CAIC;;;;;AACD;AACA;AACA;AAEA;;;;;;AAEA;;;;CAIC,GACD,MAAM,iBAAiB,CAAA,GAAA,gKAAA,CAAA,MAAG,AAAD,EACvB,4VACA;IACE,UAAU;QACR,SAAS;YACP,SAAS;YACT,aACE;YACF,SACE;YACF,WACE;YACF,OAAO;YACP,MAAM;QACR;QACA,MAAM;YACJ,SAAS;YACT,IAAI;YACJ,IAAI;YACJ,MAAM;QACR;IACF;IACA,iBAAiB;QACf,SAAS;QACT,MAAM;IACR;AACF;AAGF;;;;CAIC,GACD,MAAM,uBAAS,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAC5B,CAAC,EAAE,SAAS,EAAE,OAAO,EAAE,IAAI,EAAE,UAAU,KAAK,EAAE,GAAG,OAAO,EAAE;IACxD,+EAA+E;IAC/E,qDAAqD;IACrD,MAAM,OAAO,UAAU,gKAAA,CAAA,OAAI,GAAG;IAC9B,qBACE,8OAAC;QACC,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,eAAe;YAAE;YAAS;YAAM;QAAU;QACxD,KAAK;QACJ,GAAG,KAAK;;;;;;AAGf;AAEF,OAAO,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 379, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/lib/db.js"],"sourcesContent":["/**\n * @fileoverview This file contains the database connection configuration and utilities.\n * It uses the 'pg' library to connect to a PostgreSQL database.\n * The connection details are sourced from environment variables for security.\n */\n\nimport { Pool } from 'pg';\n\n// Create a new connection pool.\n// A pool is better than a single client for web applications\n// because it can manage multiple connections at once.\nconst pool = new Pool({\n  user: process.env.DB_USER || 'postgres',\n  host: process.env.DB_HOST || 'localhost',\n  database: process.env.DB_NAME || 'employeedb',\n  password: process.env.DB_PASSWORD || 'password',\n  port: parseInt(process.env.DB_PORT || '5432', 10),\n});\n\n/**\n * Executes a query against the database.\n * @param {string} text - The SQL query string.\n * @param {any[]} [params] - Optional parameters for the SQL query.\n * @returns {Promise<any>} A promise that resolves with the query result.\n */\nexport const query = (text, params) => {\n    return pool.query(text, params);\n};\n\n\nexport async function initializeDb() {\n    let client;\n    try {\n        client = await pool.connect();\n        await client.query('BEGIN');\n\n        // Check if employees table exists\n        const employeesTableExists = await client.query(`\n            SELECT EXISTS (\n                SELECT FROM information_schema.tables \n                WHERE  table_name   = 'employees'\n            );\n        `);\n\n        if (!employeesTableExists.rows[0].exists) {\n            console.log(\"Creating database schema...\");\n            await client.query(`\n                -- Table for storing basic employee data\n                CREATE TABLE employees (\n                    id VARCHAR(255) PRIMARY KEY,\n                    first_name VARCHAR(255) NOT NULL,\n                    last_name VARCHAR(255) NOT NULL,\n                    middle_name VARCHAR(255),\n                    position VARCHAR(255),\n                    department VARCHAR(255),\n                    branch VARCHAR(255),\n                    gender VARCHAR(50),\n                    date_of_birth DATE,\n                    date_hired DATE,\n                    status VARCHAR(50) DEFAULT 'Active', -- e.g., Active, On Leave, Resigned\n                    photo_url TEXT,\n                    password TEXT\n                );\n\n                -- Table for HR personnel accounts\n                CREATE TABLE hr_personnel (\n                    id SERIAL PRIMARY KEY,\n                    first_name VARCHAR(255) NOT NULL,\n                    last_name VARCHAR(255) NOT NULL,\n                    email VARCHAR(255) UNIQUE NOT NULL,\n                    password TEXT NOT NULL\n                );\n                \n                -- Table for Administrator accounts\n                CREATE TABLE admins (\n                    id SERIAL PRIMARY KEY,\n                    first_name VARCHAR(255) NOT NULL,\n                    last_name VARCHAR(255) NOT NULL,\n                    email VARCHAR(255) UNIQUE NOT NULL,\n                    password TEXT NOT NULL\n                );\n\n                -- Table for attendance records\n                CREATE TABLE attendance (\n                    id SERIAL PRIMARY KEY,\n                    employee_id VARCHAR(255) REFERENCES employees(id),\n                    attendance_date DATE NOT NULL,\n                    time_in TIMESTAMP,\n                    time_out TIMESTAMP,\n                    status VARCHAR(50), -- e.g., Present, Late, Absent\n                    notes TEXT,\n                    UNIQUE(employee_id, attendance_date)\n                );\n                \n                -- Table for schedules\n                CREATE TABLE schedules (\n                    id SERIAL PRIMARY KEY,\n                    employee_id VARCHAR(255) REFERENCES employees(id),\n                    week_start_date DATE NOT NULL,\n                    schedule_data JSONB -- Stores the entire week's schedule as a JSON object\n                );\n\n                -- Table for payslips\n                CREATE TABLE payslips (\n                    id SERIAL PRIMARY KEY,\n                    employee_id VARCHAR(255) REFERENCES employees(id),\n                    period_start DATE NOT NULL,\n                    period_end DATE NOT NULL,\n                    pay_date DATE,\n                    earnings JSONB,\n                    deductions JSONB,\n                    net_pay NUMERIC(10, 2)\n                );\n                \n                -- Table for leave requests\n                CREATE TABLE leave_requests (\n                    id SERIAL PRIMARY KEY,\n                    employee_id VARCHAR(255) REFERENCES employees(id),\n                    leave_type VARCHAR(100),\n                    start_date DATE,\n                    end_date DATE,\n                    reason TEXT,\n                    status VARCHAR(50) DEFAULT 'Pending' -- e.g., Pending, Approved, Rejected\n                );\n\n                -- Table for company-wide announcements\n                CREATE TABLE announcements (\n                    id SERIAL PRIMARY KEY,\n                    title VARCHAR(255) NOT NULL,\n                    content TEXT,\n                    posted_by INTEGER REFERENCES hr_personnel(id),\n                    posted_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n                    status VARCHAR(50) DEFAULT 'Draft' -- e.g., Draft, Published\n                );\n            `);\n\n            console.log(\"Inserting sample data...\");\n            /**\n             * Default User Accounts for Testing:\n             * \n             * 1. Employee Account\n             *    - Identifier: EMP-00123\n             *    - Password:   password\n             * \n             * 2. HR Account\n             *    - Identifier: olivia.chen.hr@example.com\n             *    - Password:   password\n             * \n             * 3. Admin Account\n             *    - Identifier: super@example.com\n             *    - Password:   password\n             */\n            await client.query(`\n                INSERT INTO employees (id, first_name, last_name, position, department, branch, status, password, date_hired) VALUES \n                ('EMP-00123', 'Maria', 'Rodriguez', 'Senior Software Engineer', 'Technology', 'Headquarters', 'Active', 'password', '2022-01-15'),\n                ('EMP-00124', 'David', 'Lee', 'Project Manager', 'Management', 'Headquarters', 'Active', 'password', '2021-03-20'),\n                ('EMP-00125', 'Sarah', 'Chen', 'UX Designer', 'Design', 'Downtown Office', 'Active', 'password', '2023-05-10'),\n                ('EMP-00126', 'John', 'Doe', 'QA Tester', 'Technology', 'Remote', 'On Leave', 'password', '2022-08-01');\n\n                INSERT INTO hr_personnel (first_name, last_name, email, password) VALUES \n                ('Olivia', 'Chen', 'olivia.chen.hr@example.com', 'password');\n\n                INSERT INTO admins (first_name, last_name, email, password) VALUES \n                ('Super', 'Admin', 'super@example.com', 'password');\n\n                INSERT INTO announcements (title, content, posted_by, status) VALUES\n                ('Annual Company Retreat 2024', 'We are excited to announce that this years company retreat will be held at Lakeview Resort from October 10th to 12th. More details to follow!', 1, 'Published'),\n                ('New Health Insurance Policy', 'Please review the updated health insurance policy documents available on the employee portal. The new policy will be effective starting next month.', 1, 'Published'),\n                ('Q3 Performance Reviews', 'The Q3 performance review cycle will begin next week. Please schedule a meeting with your manager to discuss your progress.', 1, 'Draft');\n\n                INSERT INTO attendance (employee_id, attendance_date, time_in, time_out, status) VALUES\n                ('EMP-00123', CURRENT_DATE - 3, (CURRENT_DATE - 3) + interval '9 hour', (CURRENT_DATE - 3) + interval '17 hour', 'Present'),\n                ('EMP-00123', CURRENT_DATE - 2, (CURRENT_DATE - 2) + interval '9 hour 15 minute', (CURRENT_DATE - 2) + interval '17 hour 5 minute', 'Late'),\n                ('EMP-00123', CURRENT_DATE - 1, (CURRENT_DATE - 1) + interval '8 hour 58 minute', (CURRENT_DATE - 1) + interval '17 hour 2 minute', 'Present');\n\n                INSERT INTO leave_requests (employee_id, leave_type, start_date, end_date, reason, status) VALUES\n                ('EMP-00123', 'Vacation', '2024-09-01', '2024-09-05', 'Family trip to Japan.', 'Approved'),\n                ('EMP-00124', 'Sick Leave', CURRENT_DATE - 1, CURRENT_DATE -1, 'Feeling unwell, have a fever.', 'Approved'),\n                ('EMP-00125', 'Personal Day', CURRENT_DATE + 5, CURRENT_DATE + 5, 'Important personal appointment.', 'Pending'),\n                ('EMP-00123', 'Bereavement', '2024-07-20', '2024-07-22', 'Family emergency.', 'Rejected');\n                \n                INSERT INTO schedules (employee_id, week_start_date, schedule_data) VALUES\n                ('EMP-00123', date_trunc('week', current_date), \n                    '[\n                        {\"day\": \"Monday\", \"date\": \"Aug 19\", \"timeIn\": \"09:00\", \"timeOut\": \"17:00\", \"break\": \"1 hour\", \"hours\": 7},\n                        {\"day\": \"Tuesday\", \"date\": \"Aug 20\", \"timeIn\": \"09:00\", \"timeOut\": \"17:00\", \"break\": \"1 hour\", \"hours\": 7},\n                        {\"day\": \"Wednesday\", \"date\": \"Aug 21\", \"timeIn\": \"09:00\", \"timeOut\": \"17:00\", \"break\": \"1 hour\", \"hours\": 7},\n                        {\"day\": \"Thursday\", \"date\": \"Aug 22\", \"timeIn\": \"09:00\", \"timeOut\": \"17:00\", \"break\": \"1 hour\", \"hours\": 7},\n                        {\"day\": \"Friday\", \"date\": \"Aug 23\", \"timeIn\": \"09:00\", \"timeOut\": \"17:00\", \"break\": \"1 hour\", \"hours\": 7},\n                        {\"day\": \"Saturday\", \"date\": \"Aug 24\", \"timeIn\": \"OFF\", \"timeOut\": \"OFF\", \"break\": \"-\", \"hours\": 0},\n                        {\"day\": \"Sunday\", \"date\": \"Aug 25\", \"timeIn\": \"OFF\", \"timeOut\": \"OFF\", \"break\": \"-\", \"hours\": 0}\n                    ]'::jsonb\n                );\n\n                INSERT INTO payslips (employee_id, period_start, period_end, pay_date, earnings, deductions, net_pay) VALUES\n                ('EMP-00123', (date_trunc('month', current_date) - interval '1 month'), (date_trunc('month', current_date) - interval '1 day'), current_date,\n                    ' [\n                        {\"name\": \"Basic Salary\", \"amount\": 75000.00},\n                        {\"name\": \"Overtime Pay\", \"amount\": 5000.00},\n                        {\"name\": \"Transportation Allowance\", \"amount\": 2000.00}\n                    ]'::jsonb,\n                    ' [\n                        {\"name\": \"Tax\", \"amount\": 8500.00},\n                        {\"name\": \"Social Security\", \"amount\": 1500.00},\n                        {\"name\": \"Health Insurance\", \"amount\": 1000.00}\n                    ]'::jsonb,\n                    61000.00\n                );\n            `);\n            console.log(\"Database initialized successfully.\");\n        } else {\n            console.log(\"Database schema already exists.\");\n        }\n\n        await client.query('COMMIT');\n    } catch (e) {\n        console.error(\"Database initialization failed:\", e.message);\n        if (client) {\n            await client.query('ROLLBACK');\n        }\n    } finally {\n        if (client) {\n            client.release();\n        }\n    }\n}\n"],"names":[],"mappings":"AAAA;;;;CAIC;;;;AAED;;;;;;AAEA,gCAAgC;AAChC,6DAA6D;AAC7D,sDAAsD;AACtD,MAAM,OAAO,IAAI,oGAAA,CAAA,OAAI,CAAC;IACpB,MAAM,QAAQ,GAAG,CAAC,OAAO,IAAI;IAC7B,MAAM,QAAQ,GAAG,CAAC,OAAO,IAAI;IAC7B,UAAU,QAAQ,GAAG,CAAC,OAAO,IAAI;IACjC,UAAU,QAAQ,GAAG,CAAC,WAAW,IAAI;IACrC,MAAM,SAAS,QAAQ,GAAG,CAAC,OAAO,IAAI,QAAQ;AAChD;AAQO,MAAM,QAAQ,CAAC,MAAM;IACxB,OAAO,KAAK,KAAK,CAAC,MAAM;AAC5B;AAGO,eAAe;IAClB,IAAI;IACJ,IAAI;QACA,SAAS,MAAM,KAAK,OAAO;QAC3B,MAAM,OAAO,KAAK,CAAC;QAEnB,kCAAkC;QAClC,MAAM,uBAAuB,MAAM,OAAO,KAAK,CAAC,CAAC;;;;;QAKjD,CAAC;QAED,IAAI,CAAC,qBAAqB,IAAI,CAAC,EAAE,CAAC,MAAM,EAAE;YACtC,QAAQ,GAAG,CAAC;YACZ,MAAM,OAAO,KAAK,CAAC,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;YAwFpB,CAAC;YAED,QAAQ,GAAG,CAAC;YACZ;;;;;;;;;;;;;;aAcC,GACD,MAAM,OAAO,KAAK,CAAC,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;YAwDpB,CAAC;YACD,QAAQ,GAAG,CAAC;QAChB,OAAO;YACH,QAAQ,GAAG,CAAC;QAChB;QAEA,MAAM,OAAO,KAAK,CAAC;IACvB,EAAE,OAAO,GAAG;QACR,QAAQ,KAAK,CAAC,mCAAmC,EAAE,OAAO;QAC1D,IAAI,QAAQ;YACR,MAAM,OAAO,KAAK,CAAC;QACvB;IACJ,SAAU;QACN,IAAI,QAAQ;YACR,OAAO,OAAO;QAClB;IACJ;AACJ","debugId":null}},
    {"offset": {"line": 604, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/hr/dashboard/page.jsx"],"sourcesContent":["/**\n * @fileoverview This file defines the main HR Dashboard page.\n * It serves as the landing page for HR personnel, providing a high-level\n * overview of key metrics, recent activities, and quick access to common tasks.\n */\nimport {\n  Card,\n  CardContent,\n  CardHeader,\n  CardTitle,\n  CardDescription\n} from \"@/components/ui/card\";\nimport { Users, CheckCircle, Briefcase, Bell, CalendarPlus, Wallet, Megaphone, UserMinus, UserPlus } from \"lucide-react\";\nimport {\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TableHeader,\n  TableRow,\n} from \"@/components/ui/table\"\nimport { Badge } from \"@/components/ui/badge\";\nimport Link from \"next/link\";\nimport { Button } from \"@/components/ui/button\";\nimport { query } from \"@/lib/db\";\nimport { formatDistanceToNow } from 'date-fns';\n\n/**\n * Fetches all the necessary data for the HR dashboard from the database.\n * This includes employee counts, leave requests, and recent activities.\n * @returns {Promise<object>} A promise that resolves with the dashboard data.\n */\nasync function getDashboardData() {\n    try {\n        const employeeCountQuery = \"SELECT COUNT(*) FROM employees WHERE status = 'Active'\";\n        const pendingLeaveQuery = \"SELECT COUNT(*) FROM leave_requests WHERE status = 'Pending'\";\n        // For demonstration, we're fetching a few recent leave requests as \"recent activities\"\n        const recentActivityQuery = `\n            SELECT \n                lr.id, \n                e.first_name || ' ' || e.last_name as employee_name, \n                lr.leave_type, \n                lr.start_date \n            FROM leave_requests lr\n            JOIN employees e ON lr.employee_id = e.id\n            ORDER BY lr.id DESC\n            LIMIT 5;\n        `;\n\n        const [employeeResult, pendingLeaveResult, activityResult] = await Promise.all([\n            query(employeeCountQuery),\n            query(pendingLeaveQuery),\n            query(recentActivityQuery)\n        ]);\n\n        const employeeCount = employeeResult.rows[0].count;\n        const pendingLeaves = pendingLeaveResult.rows[0].count;\n        const recentActivities = activityResult.rows.map(row => ({\n            id: row.id,\n            activity: `${row.employee_name} requested ${row.leave_type.toLowerCase()} leave`,\n            timestamp: formatDistanceToNow(new Date(row.start_date), { addSuffix: true }),\n            type: 'Leave'\n        }));\n\n        return {\n            stats: [\n                { title: 'Total Employees', value: employeeCount, icon: <Users />, change: '+2 this month' },\n                { title: 'On Time Percentage', value: '96%', icon: <CheckCircle />, change: '-1% from last month' },\n                { title: 'Active Job Postings', value: '4', icon: <Briefcase />, change: '+1 new posting' },\n                { title: 'Pending Leave Requests', value: pendingLeaves, icon: <Bell />, change: `${pendingLeaves} new today` },\n            ],\n            recentActivities\n        };\n    } catch (error) {\n        console.error(\"Database Error fetching HR dashboard data:\", error);\n        // Return static data as a fallback if the database fails\n        return {\n            stats: [\n                { title: 'Total Employees', value: 'N/A', icon: <Users /> },\n                { title: 'On Time Percentage', value: 'N/A', icon: <CheckCircle /> },\n                { title: 'Active Job Postings', value: 'N/A', icon: <Briefcase /> },\n                { title: 'Pending Leave Requests', value: 'N/A', icon: <Bell /> },\n            ],\n            recentActivities: []\n        };\n    }\n}\n\n\n/**\n * Renders the main dashboard for HR personnel.\n * It provides an overview of key stats, recent activities, and quick actions.\n * @returns {JSX.Element} The HR dashboard page component.\n */\nexport default async function HRDashboardPage() {\n    const { stats, recentActivities } = await getDashboardData();\n\n  return (\n    <div className=\"space-y-6\">\n       <div className=\"flex justify-between items-start\">\n            <div>\n                <h1 className=\"text-3xl font-bold font-headline\">HR Dashboard</h1>\n                <p className=\"text-muted-foreground\">Welcome back, Olivia! Here's what's happening today.</p>\n            </div>\n        </div>\n\n        {/* Statistics Cards: A high-level overview of important metrics. */}\n        <div className=\"grid gap-4 md:grid-cols-2 lg:grid-cols-4\">\n            {stats.length > 0 ? (\n                stats.map(stat => (\n                    <Card key={stat.title}>\n                        <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\n                            <CardTitle className=\"text-sm font-medium\">{stat.title}</CardTitle>\n                            {stat.icon}\n                        </CardHeader>\n                        <CardContent>\n                            <div className=\"text-2xl font-bold\">{stat.value}</div>\n                            {stat.change && <p className=\"text-xs text-muted-foreground\">{stat.change}</p>}\n                        </CardContent>\n                    </Card>\n                ))\n            ) : (\n                <p className=\"text-muted-foreground col-span-4\">No statistics available.</p>\n            )}\n        </div>\n\n        <div className=\"grid gap-6 md:grid-cols-2\">\n            {/* Recent Activity Log: Shows a feed of recent actions within the system. */}\n            <Card>\n                <CardHeader>\n                    <CardTitle>Recent Activity</CardTitle>\n                    <CardDescription>A log of recent system and employee actions.</CardDescription>\n                </CardHeader>\n                <CardContent>\n                    {recentActivities.length > 0 ? (\n                        <Table>\n                            <TableHeader>\n                                <TableRow>\n                                    <TableHead>Activity</TableHead>\n                                    <TableHead>Type</TableHead>\n                                    <TableHead>Time</TableHead>\n                                </TableRow>\n                            </TableHeader>\n                            <TableBody>\n                                {recentActivities.map(activity => (\n                                    <TableRow key={activity.id}>\n                                        <TableCell className=\"font-medium\">{activity.activity}</TableCell>\n                                        <TableCell><Badge variant=\"outline\">{activity.type}</Badge></TableCell>\n                                        <TableCell className=\"text-muted-foreground\">{activity.timestamp}</TableCell>\n                                    </TableRow>\n                                ))}\n                            </TableBody>\n                        </Table>\n                    ) : (\n                        <p className=\"text-muted-foreground text-center\">No recent activity.</p>\n                    )}\n                </CardContent>\n            </Card>\n            {/* Quick Actions Card: Provides shortcuts to common HR tasks. */}\n            <Card>\n                <CardHeader>\n                    <CardTitle>Quick Actions</CardTitle>\n                    <CardDescription>Access common HR tasks quickly.</CardDescription>\n                </CardHeader>\n                <CardContent className=\"grid grid-cols-2 gap-4\">\n                    <Button asChild variant=\"outline\" className=\"h-20 flex-col gap-1\">\n                        <Link href=\"/hr/employee-data\">\n                            <Users />\n                            <span>Manage Employees</span>\n                        </Link>\n                    </Button>\n                    <Button asChild variant=\"outline\" className=\"h-20 flex-col gap-1\">\n                        <Link href=\"/hr/scheduling\">\n                            <CalendarPlus />\n                             <span>Update Schedule</span>\n                        </Link>\n                    </Button>\n                    <Button asChild variant=\"outline\" className=\"h-20 flex-col gap-1\">\n                        <Link href=\"/hr/payslip-generation\">\n                            <Wallet />\n                            <span>Run Payroll</span>\n                        </Link>\n                    </Button>\n                     <Button asChild variant=\"outline\" className=\"h-20 flex-col gap-1\">\n                        <Link href=\"/hr/announcements\">\n                            <Megaphone />\n                            <span>Post Announcement</span>\n                        </Link>\n                    </Button>\n                </CardContent>\n            </Card>\n        </div>\n    </div>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}}]
}