{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/lib/data.js"],"sourcesContent":["/**\n * @fileoverview This file contains all the functions for fetching data from the database.\n */\n'use server';\n\nimport { query } from './db';\nimport { format, formatDistanceToNow, addDays, subDays } from 'date-fns';\nimport { Users, CheckCircle, Briefcase, Bell } from 'lucide-react';\n\n// Mock data\nconst mockAccounts = [\n    { id: 'EMP-00123', first_name: 'Maria', last_name: 'Rodriguez', email: 'maria.rodriguez@example.com', role: 'Employee', position: 'Senior Software Engineer', department: 'Technology', branch: 'Headquarters', status: 'Active', date_hired: '2022-01-15', available_leaves: 12, gender: 'Female', date_of_birth: '1990-05-20' },\n    { id: 'EMP-00124', first_name: 'David', last_name: 'Lee', email: 'david.lee@example.com', role: 'Employee', position: 'Project Manager', department: 'Management', branch: 'Headquarters', status: 'Active', date_hired: '2021-03-20', available_leaves: 15, gender: 'Male', date_of_birth: '1988-11-12' },\n    { id: 'EMP-00125', first_name: 'Sarah', last_name: 'Chen', email: 'sarah.chen@example.com', role: 'Employee', position: 'UX Designer', department: 'Design', branch: 'Downtown Office', status: 'Active', date_hired: '2023-05-10', available_leaves: 10, gender: 'Female', date_of_birth: '1995-02-25' },\n    { id: 'EMP-00126', first_name: 'John', last_name: 'Doe', email: 'john.doe@example.com', role: 'Employee', position: 'QA Tester', department: 'Technology', branch: 'Remote', status: 'On Leave', date_hired: '2022-08-01', available_leaves: 5, gender: 'Male', date_of_birth: '1992-07-30' },\n    { id: 'HR-001', first_name: 'Olivia', last_name: 'Chen', email: 'olivia.chen.hr@example.com', role: 'HR', position: 'HR Manager', department: 'Human Resources', branch: 'Headquarters', status: 'Active', date_hired: '2020-01-01', available_leaves: 15, gender: 'Female', date_of_birth: '1985-09-05' },\n    { id: 'ADM-001', first_name: 'Super', last_name: 'Admin', email: 'super@example.com', role: 'Admin', position: 'System Administrator', department: 'IT', branch: 'Headquarters', status: 'Active', date_hired: '2019-01-01', available_leaves: 20, gender: 'Male', date_of_birth: '1980-01-01' },\n    { id: 'EMP-PENDING-01', first_name: 'Michael', last_name: 'Brown', email: 'michael.brown@example.com', role: 'Employee', position: 'Junior Developer', department: 'Technology', branch: 'Headquarters', status: 'Pending Approval', date_hired: new Date().toISOString(), available_leaves: 15, gender: 'Male', date_of_birth: '1998-06-15' },\n];\n\nconst mockAnnouncements = [];\nconst mockAttendance = [];\nconst mockLeaveRequests = [];\nconst mockPayslips = [];\nconst mockSchedules = [];\n\n\nexport async function getHRDashboardData() {\n  const employeeCount = mockAccounts.filter(a => a.role === 'Employee' && a.status === 'Active').length;\n  const pendingLeaves = mockLeaveRequests.filter(lr => lr.status === 'Pending').length;\n  const recentActivities = mockLeaveRequests.slice(0, 5).map(lr => {\n    const account = mockAccounts.find(a => a.id === lr.account_id);\n    return {\n      id: lr.id,\n      activity: `${account.first_name} ${account.last_name} requested ${lr.leave_type.toLowerCase()} leave`,\n      timestamp: formatDistanceToNow(new Date(lr.start_date), { addSuffix: true }),\n      type: 'Leave'\n    };\n  });\n\n  return {\n    stats: [\n      { title: 'Total Employees', value: employeeCount, icon: <Users />, change: '+2 this month' },\n      { title: 'On Time Percentage', value: '96%', icon: <CheckCircle />, change: '-1% from last month' },\n      { title: 'Active Job Postings', value: '4', icon: <Briefcase />, change: '+1 new posting' },\n      { title: 'Pending Leave Requests', value: pendingLeaves, icon: <Bell />, change: `${pendingLeaves} new today` },\n    ],\n    recentActivities\n  };\n}\n\nexport async function getPastAnnouncements() {\n    return mockAnnouncements.map(a => {\n        const postedBy = mockAccounts.find(acc => acc.id === a.posted_by_id);\n        return {\n            ...a,\n            date: format(new Date(a.posted_at), 'yyyy-MM-dd'),\n            postedBy: `${postedBy.first_name} ${postedBy.last_name}`\n        };\n    }).sort((a, b) => new Date(b.posted_at) - new Date(a.posted_at));\n}\n\n\nexport async function getDailyAttendanceData(date) {\n    const requestedDate = format(new Date(date), 'yyyy-MM-dd');\n    const activeEmployees = mockAccounts.filter(acc => acc.role === 'Employee' && acc.status === 'Active');\n    \n    return activeEmployees.map(emp => {\n        const attendanceRecord = mockAttendance.find(att => att.account_id === emp.id && format(new Date(att.attendance_date), 'yyyy-MM-dd') === requestedDate);\n        return {\n            id: emp.id,\n            name: `${emp.first_name} ${emp.last_name}`,\n            position: emp.position,\n            branch: emp.branch,\n            timeIn: attendanceRecord?.time_in ? format(new Date(`1970-01-01T${attendanceRecord.time_in}`), 'HH:mm') : '--',\n            timeOut: attendanceRecord?.time_out ? format(new Date(`1970-01-01T${attendanceRecord.time_out}`), 'HH:mm') : '--',\n            status: attendanceRecord?.status || 'Absent'\n        };\n    });\n}\n\n\nexport async function getEmployees() {\n    return mockAccounts.filter(acc => acc.role === 'Employee').map(acc => ({\n        id: acc.id,\n        name: `${acc.first_name} ${acc.last_name}`,\n        position: acc.position,\n        branch: acc.branch,\n        status: acc.status\n    }));\n}\n\nexport async function getLeaveRequests() {\n    return mockLeaveRequests.map(lr => {\n        const employee = mockAccounts.find(acc => acc.id === lr.account_id);\n        return {\n            id: lr.id,\n            employeeName: `${employee.first_name} ${employee.last_name}`,\n            employeeId: employee.id,\n            leave_type: lr.leave_type,\n            startDate: format(new Date(lr.start_date), 'yyyy-MM-dd'),\n            endDate: format(new Date(lr.end_date), 'yyyy-MM-dd'),\n            reason: lr.reason,\n            status: lr.status\n        };\n    }).sort((a,b) => new Date(b.startDate) - new Date(a.startDate));\n}\n\nexport async function getEmployeesWithPayslipStatus() {\n    const activeEmployees = mockAccounts.filter(a => a.role === 'Employee' && a.status === 'Active');\n    return activeEmployees.map(emp => {\n        const hasPayslip = mockPayslips.some(p => p.account_id === emp.id);\n        return {\n            id: emp.id,\n            name: `${emp.first_name} ${emp.last_name}`,\n            position: emp.position,\n            department: emp.department,\n            payslipStatus: hasPayslip ? 'Generated' : 'Pending'\n        };\n    });\n}\n\nexport async function getEmployeesForScheduling() {\n    return mockAccounts\n        .filter(emp => emp.status === 'Active' && emp.role === 'Employee')\n        .map(emp => ({\n            id: emp.id,\n            name: `${emp.first_name} ${emp.last_name}`,\n            shift: '9:00 - 17:00' // Default shift\n        }));\n}\n\nexport async function getEmployeeDashboardData(employeeId) {\n    const employeeData = mockAccounts.find(acc => acc.id === employeeId);\n    if (!employeeData) {\n        throw new Error(`Employee with ID ${employeeId} not found`);\n    }\n\n    const announcements = mockAnnouncements\n        .filter(a => a.status === 'Published')\n        .sort((a, b) => new Date(b.posted_at) - new Date(a.posted_at))\n        .slice(0, 5)\n        .map(a => ({\n            id: a.id,\n            title: a.title,\n            content: a.content,\n            date: format(new Date(a.posted_at), 'MMMM d, yyyy')\n        }));\n    \n    return {\n        employee: {\n            employeeId: employeeData.id,\n            name: `${employeeData.first_name} ${employeeData.last_name}`,\n            position: employeeData.position,\n            department: employeeData.department,\n            email: employeeData.email,\n        },\n        announcements\n    };\n}\n\nexport async function getAttendanceData(employeeId) {\n    const records = mockAttendance.filter(r => r.account_id === employeeId);\n    const account = mockAccounts.find(a => a.id === employeeId);\n\n    const summary = {\n        daysAttended: records.filter(r => r.status === 'Present' || r.status === 'Late').length,\n        lates: records.filter(r => r.status === 'Late').length,\n        absences: records.filter(r => r.status === 'Absent').length,\n        totalHours: records.filter(r => r.status === 'Present' || r.status === 'Late').length * 8, // Simplified\n        availableLeaves: account?.available_leaves || 0,\n    };\n\n    return {\n        summary,\n        records: records.map(r => ({\n            date: format(new Date(r.attendance_date), 'MMMM d, yyyy'),\n            timeIn: r.time_in ? format(new Date(`1970-01-01T${r.time_in}`), 'HH:mm') : '--',\n            timeOut: r.time_out ? format(new Date(`1970-01-01T${r.time_out}`), 'HH:mm') : '--',\n            status: r.status\n        })).sort((a, b) => new Date(b.date) - new Date(a.date))\n    };\n}\n\nexport async function getPastLeaveRequests(employeeId) {\n    return mockLeaveRequests\n        .filter(lr => lr.account_id === employeeId)\n        .map(lr => ({\n            id: lr.id,\n            leave_type: lr.leave_type,\n            startDate: format(new Date(lr.start_date), 'yyyy-MM-dd'),\n            endDate: format(new Date(lr.end_date), 'yyyy-MM-dd'),\n            status: lr.status\n        }))\n        .sort((a,b) => new Date(b.startDate) - new Date(a.startDate));\n}\n\nexport async function createLeaveRequest(leaveRequest) {\n    const { employeeId, leaveType, startDate, endDate, reason } = leaveRequest;\n    const newRequest = {\n        id: mockLeaveRequests.length + 1,\n        account_id: employeeId,\n        leave_type: leaveType,\n        start_date: startDate,\n        end_date: endDate,\n        reason: reason,\n        status: 'Pending'\n    };\n    mockLeaveRequests.push(newRequest);\n    return { success: true };\n}\n\nexport async function getPayPeriods(employeeId) {\n    return mockPayslips\n        .filter(p => p.account_id === employeeId)\n        .map(p => ({\n            id: p.id,\n            period: `${format(new Date(p.period_start), 'yyyy-MM-dd')} - ${format(new Date(p.period_end), 'yyyy-MM-dd')}`,\n            payDate: format(new Date(p.pay_date), 'MMMM d, yyyy'),\n            earnings: p.earnings,\n            deductions: p.deductions,\n            net_pay: p.net_pay\n        }))\n        .sort((a,b) => new Date(b.payDate) - new Date(a.payDate));\n}\n\nexport async function getSchedule(employeeId) {\n    const today = new Date();\n    const weekStartDate = subDays(today, (today.getDay() + 6) % 7);\n\n    return ['Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday', 'Sunday'].map((day, i) => {\n        const date = addDays(weekStartDate, i);\n        const scheduledDay = mockSchedules.find(s => s.account_id === employeeId && s.day_of_week === day);\n\n        if (scheduledDay && !scheduledDay.is_off_day) {\n            const timeIn = new Date(`1970-01-01T${scheduledDay.time_in}`);\n            const timeOut = new Date(`1970-01-01T${scheduledDay.time_out}`);\n            const hours = (timeOut - timeIn) / (1000 * 60 * 60) - (scheduledDay.break_duration_minutes / 60);\n            return {\n                day,\n                date: format(date, 'MMM dd'),\n                timeIn: format(timeIn, 'HH:mm'),\n                timeOut: format(timeOut, 'HH:mm'),\n                break: `${scheduledDay.break_duration_minutes} mins`,\n                hours: Math.round(hours)\n            };\n        }\n        return { day, date: format(date, 'MMM dd'), timeIn: 'OFF', timeOut: 'OFF', break: '-', hours: 0 };\n    });\n}\n\n\nexport async function getPendingEmployeeApprovals() {\n    return mockAccounts\n        .filter(acc => acc.status === 'Pending Approval')\n        .map(acc => ({\n            id: acc.id,\n            submittedBy: 'HR Department',\n            employeeName: `${acc.first_name} ${acc.last_name}`,\n            position: acc.position,\n            submissionDate: format(new Date(acc.date_hired), 'yyyy-MM-dd')\n        }));\n}\n\nexport async function approveEmployee(employeeId) {\n    const account = mockAccounts.find(acc => acc.id === employeeId);\n    if (account) {\n        account.status = 'Active';\n    }\n}\n\nexport async function rejectEmployee(employeeId) {\n    const index = mockAccounts.findIndex(acc => acc.id === employeeId);\n    if (index > -1) {\n        mockAccounts.splice(index, 1);\n    }\n}\n\nexport async function getEmployeeName(employeeId) {\n    const employee = mockAccounts.find(acc => acc.id === employeeId);\n    return employee ? `${employee.first_name} ${employee.last_name}` : \"Unknown Employee\";\n}\n\nexport async function getReportDetails(reportId) {\n    // This is a mock function as there is no 'reports' table.\n    return null;\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 484, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/.next-internal/server/app/page/actions.js%20%28server%20actions%20loader%29"],"sourcesContent":["export {getEmployeesWithPayslipStatus as '002dd23120083517493f1856b5ce3e27ca1098d244'} from 'ACTIONS_MODULE0'\nexport {getHRDashboardData as '0041d2031c64a9612535dcab2138817eeef5f5974c'} from 'ACTIONS_MODULE0'\nexport {getPendingEmployeeApprovals as '0067b71c9617499970f47f615b607f992a7b35b7ca'} from 'ACTIONS_MODULE0'\nexport {getPastAnnouncements as '0081b652a1ba97ae17200b5330a84c1eaee2045820'} from 'ACTIONS_MODULE0'\nexport {getLeaveRequests as '00acc9d5c2e411c4f8f6e3b8e0c4a2c3da73708524'} from 'ACTIONS_MODULE0'\nexport {getEmployees as '00c619ec02afa7d57568b4e0406ecec6a6bf21e12a'} from 'ACTIONS_MODULE0'\nexport {getEmployeesForScheduling as '00d5a8089689a75a56fcc38e7013d6855f6b64deb6'} from 'ACTIONS_MODULE0'\nexport {approveEmployee as '400c24efbdff8ad0edbd723316ed5350a26ca81947'} from 'ACTIONS_MODULE0'\nexport {getAttendanceData as '40360376d7fc3085764bf086e59364b9a7bd931021'} from 'ACTIONS_MODULE0'\nexport {rejectEmployee as '403bd6deaf58cedd1f69830ca2372388b1774aab05'} from 'ACTIONS_MODULE0'\nexport {getEmployeeName as '405c3db62c447e59c0ae7044461282afdf964ae1bd'} from 'ACTIONS_MODULE0'\nexport {getPastLeaveRequests as '40885e633df6cf5d24407734484d3a4bcc7bc878e0'} from 'ACTIONS_MODULE0'\nexport {getDailyAttendanceData as '40a5b75da077963d47ebe0f5fc53e2a123ce19ae24'} from 'ACTIONS_MODULE0'\nexport {getSchedule as '40b0eb7305a3d24b1488b76f6edba4bab27c969bfe'} from 'ACTIONS_MODULE0'\nexport {getEmployeeDashboardData as '40b7b79cef1785e3c75ae17348edfad469c103bb85'} from 'ACTIONS_MODULE0'\nexport {getPayPeriods as '40e36f9c74786f4cdb1a562f7c79abdf9440a06d44'} from 'ACTIONS_MODULE0'\nexport {createLeaveRequest as '40e89487447e1f133bfc1c734cc2338626fb053105'} from 'ACTIONS_MODULE0'\nexport {getReportDetails as '40fdc91fc4350406f04eb4a57938354df3e9a76bac'} from 'ACTIONS_MODULE0'\n"],"names":[],"mappings":";AAAA","debugId":null}},
    {"offset": {"line": 610, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/card.jsx"],"sourcesContent":["/**\n * @fileoverview Defines the Card component and its parts.\n * A card is a flexible and extensible content container. It includes options for\n * headers, footers, titles, descriptions, and content.\n */\nimport * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\n/**\n * The main container for the card component.\n */\nconst Card = React.forwardRef(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"rounded-lg border bg-card text-card-foreground shadow-sm\",\n      className\n    )}\n    {...props}\n  />\n))\nCard.displayName = \"Card\"\n\n/**\n * The header section of the card. Typically contains the title and description.\n */\nconst CardHeader = React.forwardRef(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex flex-col space-y-1.5 p-6\", className)}\n    {...props}\n  />\n))\nCardHeader.displayName = \"CardHeader\"\n\n/**\n * The title of the card. Should be placed inside a CardHeader.\n */\nconst CardTitle = React.forwardRef(({ className, ...props }, ref) => (\n  <h3\n    ref={ref}\n    className={cn(\n      \"text-2xl font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nCardTitle.displayName = \"CardTitle\"\n\n/**\n * A description for the card. Should be placed inside a CardHeader.\n */\nconst CardDescription = React.forwardRef(({ className, ...props }, ref) => (\n  <p\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nCardDescription.displayName = \"CardDescription\"\n\n/**\n * The main content area of the card.\n */\nconst CardContent = React.forwardRef(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn(\"p-6 pt-0\", className)} {...props} />\n))\nCardContent.displayName = \"CardContent\"\n\n/**\n_The footer section of the card.\n*/\nconst CardFooter = React.forwardRef(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex items-center p-6 pt-0\", className)}\n    {...props}\n  />\n))\nCardFooter.displayName = \"CardFooter\"\n\nexport { Card, CardHeader, CardFooter, CardTitle, CardDescription, CardContent }\n"],"names":[],"mappings":"AAAA;;;;CAIC;;;;;;;;;AACD;AAEA;;;;AAEA;;CAEC,GACD,MAAM,qBAAO,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAAE,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBACtD,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,4DACA;QAED,GAAG,KAAK;;;;;;AAGb,KAAK,WAAW,GAAG;AAEnB;;CAEC,GACD,MAAM,2BAAa,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAAE,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC5D,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGb,WAAW,WAAW,GAAG;AAEzB;;CAEC,GACD,MAAM,0BAAY,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAAE,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC3D,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,sDACA;QAED,GAAG,KAAK;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB;;CAEC,GACD,MAAM,gCAAkB,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAAE,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBACjE,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGb,gBAAgB,WAAW,GAAG;AAE9B;;CAEC,GACD,MAAM,4BAAc,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAAE,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC7D,8OAAC;QAAI,KAAK;QAAK,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,YAAY;QAAa,GAAG,KAAK;;;;;;AAEhE,YAAY,WAAW,GAAG;AAE1B;;AAEA,GACA,MAAM,2BAAa,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAAE,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC5D,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,8BAA8B;QAC3C,GAAG,KAAK;;;;;;AAGb,WAAW,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 707, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/avatar.jsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const Avatar = registerClientReference(\n    function() { throw new Error(\"Attempted to call Avatar() from the server but Avatar is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/avatar.jsx <module evaluation>\",\n    \"Avatar\",\n);\nexport const AvatarFallback = registerClientReference(\n    function() { throw new Error(\"Attempted to call AvatarFallback() from the server but AvatarFallback is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/avatar.jsx <module evaluation>\",\n    \"AvatarFallback\",\n);\nexport const AvatarImage = registerClientReference(\n    function() { throw new Error(\"Attempted to call AvatarImage() from the server but AvatarImage is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/avatar.jsx <module evaluation>\",\n    \"AvatarImage\",\n);\n"],"names":[],"mappings":";;;;;AAAA;;AACO,MAAM,SAAS,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACxC;IAAa,MAAM,IAAI,MAAM;AAA4N,GACzP,8DACA;AAEG,MAAM,iBAAiB,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAChD;IAAa,MAAM,IAAI,MAAM;AAA4O,GACzQ,8DACA;AAEG,MAAM,cAAc,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAC7C;IAAa,MAAM,IAAI,MAAM;AAAsO,GACnQ,8DACA","debugId":null}},
    {"offset": {"line": 729, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/avatar.jsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const Avatar = registerClientReference(\n    function() { throw new Error(\"Attempted to call Avatar() from the server but Avatar is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/avatar.jsx\",\n    \"Avatar\",\n);\nexport const AvatarFallback = registerClientReference(\n    function() { throw new Error(\"Attempted to call AvatarFallback() from the server but AvatarFallback is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/avatar.jsx\",\n    \"AvatarFallback\",\n);\nexport const AvatarImage = registerClientReference(\n    function() { throw new Error(\"Attempted to call AvatarImage() from the server but AvatarImage is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/avatar.jsx\",\n    \"AvatarImage\",\n);\n"],"names":[],"mappings":";;;;;AAAA;;AACO,MAAM,SAAS,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACxC;IAAa,MAAM,IAAI,MAAM;AAA4N,GACzP,0CACA;AAEG,MAAM,iBAAiB,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAChD;IAAa,MAAM,IAAI,MAAM;AAA4O,GACzQ,0CACA;AAEG,MAAM,cAAc,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAC7C;IAAa,MAAM,IAAI,MAAM;AAAsO,GACnQ,0CACA","debugId":null}},
    {"offset": {"line": 751, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 761, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/separator.jsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const Separator = registerClientReference(\n    function() { throw new Error(\"Attempted to call Separator() from the server but Separator is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/separator.jsx <module evaluation>\",\n    \"Separator\",\n);\n"],"names":[],"mappings":";;;AAAA;;AACO,MAAM,YAAY,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAC3C;IAAa,MAAM,IAAI,MAAM;AAAkO,GAC/P,iEACA","debugId":null}},
    {"offset": {"line": 775, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/separator.jsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const Separator = registerClientReference(\n    function() { throw new Error(\"Attempted to call Separator() from the server but Separator is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/separator.jsx\",\n    \"Separator\",\n);\n"],"names":[],"mappings":";;;AAAA;;AACO,MAAM,YAAY,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAC3C;IAAa,MAAM,IAAI,MAAM;AAAkO,GAC/P,6CACA","debugId":null}},
    {"offset": {"line": 789, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 799, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/calendar.jsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const Calendar = registerClientReference(\n    function() { throw new Error(\"Attempted to call Calendar() from the server but Calendar is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/calendar.jsx <module evaluation>\",\n    \"Calendar\",\n);\n"],"names":[],"mappings":";;;AAAA;;AACO,MAAM,WAAW,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAC1C;IAAa,MAAM,IAAI,MAAM;AAAgO,GAC7P,gEACA","debugId":null}},
    {"offset": {"line": 813, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/calendar.jsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const Calendar = registerClientReference(\n    function() { throw new Error(\"Attempted to call Calendar() from the server but Calendar is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/calendar.jsx\",\n    \"Calendar\",\n);\n"],"names":[],"mappings":";;;AAAA;;AACO,MAAM,WAAW,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAC1C;IAAa,MAAM,IAAI,MAAM;AAAgO,GAC7P,4CACA","debugId":null}},
    {"offset": {"line": 827, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 837, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/page.jsx"],"sourcesContent":["/**\n * @fileoverview This file defines the main Employee Dashboard page.\n * It serves as the landing page for employees after they log in,\n * showing a profile summary, company announcements, and a calendar.\n */\nimport {\n  Card,\n  CardContent,\n  CardHeader,\n  CardTitle,\n  CardDescription,\n} from \"@/components/ui/card\";\nimport { Avatar, AvatarFallback, AvatarImage } from \"@/components/ui/avatar\";\nimport { Separator } from \"@/components/ui/separator\";\nimport { Calendar } from \"@/components/ui/calendar\";\nimport { Megaphone } from \"lucide-react\";\nimport { getEmployeeDashboardData } from \"@/lib/data\";\n\n// Hardcoded employee ID for demonstration purposes. \n// In a real app, this would come from the user's session.\nconst EMPLOYEE_ID = 'EMP-00123';\n\n/**\n * Renders the main dashboard page for an employee.\n * It displays employee information, announcements, and a calendar.\n * @returns {JSX.Element} The employee dashboard page component.\n */\nexport default async function EmployeeDashboardPage() {\n  const { employee, announcements } = await getEmployeeDashboardData(EMPLOYEE_ID);\n  \n  return (\n    <div className=\"grid gap-6 md:grid-cols-3\">\n      <div className=\"md:col-span-2 space-y-6\">\n        {/* Employee Profile Card: Displays key information about the logged-in employee. */}\n        <Card>\n            {employee ? (\n                <>\n                    <CardHeader>\n                        <div className=\"flex items-center gap-4\">\n                        <Avatar className=\"h-16 w-16\">\n                            <AvatarImage\n                            src={`https://i.pravatar.cc/150?u=${employee.email}`}\n                            alt={employee.name}\n                            />\n                            <AvatarFallback>\n                            {employee.name\n                                .split(\" \")\n                                .map((n) => n[0])\n                                .join(\"\")}\n                            </AvatarFallback>\n                        </Avatar>\n                        <div>\n                            <CardTitle className=\"font-headline text-2xl\">{employee.name}</CardTitle>\n                            <CardDescription>{employee.position}</CardDescription>\n                        </div>\n                        </div>\n                    </CardHeader>\n                    <CardContent>\n                        <div className=\"grid grid-cols-2 gap-4 text-sm\">\n                        <div>\n                            <p className=\"font-medium text-muted-foreground\">\n                            Employee ID\n                            </p>\n                            <p>{employee.employeeId}</p>\n                        </div>\n                        <div>\n                            <p className=\"font-medium text-muted-foreground\">Department</p>\n                            <p>{employee.department}</p>\n                        </div>\n                        <div>\n                            <p className=\"font-medium text-muted-foreground\">Email</p>\n                            <p>{employee.email}</p>\n                        </div>\n                        </div>\n                    </CardContent>\n                </>\n            ) : (\n                <CardContent className=\"p-6\">\n                    <p className=\"text-muted-foreground\">Employee data not available.</p>\n                </CardContent>\n            )}\n        </Card>\n\n        {/* Announcements Card: Shows the latest company-wide announcements. */}\n        <Card>\n          <CardHeader>\n            <CardTitle className=\"flex items-center gap-2\">\n              <Megaphone />\n              Announcement Board\n            </CardTitle>\n          </CardHeader>\n          <CardContent>\n            {announcements.length > 0 ? (\n                <ul className=\"space-y-4\">\n                {announcements.map((ann, index) => (\n                    <li key={ann.id}>\n                    <p className=\"font-semibold\">{ann.title}</p>\n                    <p className=\"text-sm text-muted-foreground\">{ann.date}</p>\n                    <p className=\"text-sm mt-1\">{ann.content}</p>\n                    {index < announcements.length - 1 && (\n                        <Separator className=\"mt-4\" />\n                    )}\n                    </li>\n                ))}\n                </ul>\n            ) : (\n                <p className=\"text-muted-foreground text-center\">No announcements at this time.</p>\n            )}\n          </CardContent>\n        </Card>\n      </div>\n      {/* Calendar Card: Displays a simple calendar, could be used for upcoming events or schedules. */}\n      <div className=\"md:col-span-1\">\n        <Card>\n          <CardHeader>\n            <CardTitle>Calendar</CardTitle>\n          </CardHeader>\n          <CardContent className=\"flex justify-center\">\n            <Calendar\n              mode=\"single\"\n              selected={new Date()}\n              className=\"rounded-md\"\n            />\n          </CardContent>\n        </Card>\n      </div>\n    </div>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}}]
}