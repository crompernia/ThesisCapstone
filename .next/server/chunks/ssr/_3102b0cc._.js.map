{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/lib/data.js"],"sourcesContent":["/**\n * @fileoverview This file contains all the functions for fetching data from the database.\n */\n'use server';\n\nimport { format, formatDistanceToNow, addDays, subDays } from 'date-fns';\n\n// --- MOCK DATA ---\n\nlet MOCK_ACCOUNTS = [\n    { id: 'EMP-00123', first_name: 'Maria', last_name: 'Rodriguez', email: 'maria.rodriguez@example.com', password: 'password', role: 'Employee', position: 'Senior Software Engineer', department: 'Technology', branch: 'Headquarters', status: 'Active', date_hired: '2022-01-15', available_leaves: 12, gender: 'Female', date_of_birth: '1990-05-20' },\n    { id: 'EMP-00124', first_name: 'David', last_name: 'Lee', email: 'david.lee@example.com', password: 'password', role: 'Employee', position: 'Project Manager', department: 'Management', branch: 'Headquarters', status: 'Active', date_hired: '2021-03-20', available_leaves: 15, gender: 'Male', date_of_birth: '1988-11-12' },\n    { id: 'EMP-00125', first_name: 'Sarah', last_name: 'Chen', email: 'sarah.chen@example.com', password: 'password', role: 'Employee', position: 'UX Designer', department: 'Design', branch: 'Downtown Office', status: 'Active', date_hired: '2023-05-10', available_leaves: 10, gender: 'Female', date_of_birth: '1995-02-25' },\n    { id: 'EMP-00126', first_name: 'John', last_name: 'Doe', email: 'john.doe@example.com', password: 'password', role: 'Employee', position: 'QA Tester', department: 'Technology', branch: 'Remote', status: 'On Leave', date_hired: '2022-08-01', available_leaves: 5, gender: 'Male', date_of_birth: '1992-07-30' },\n    { id: 'HR-001', first_name: 'Olivia', last_name: 'Chen', email: 'olivia.chen.hr@example.com', password: 'password', role: 'HR', position: 'HR Manager', department: 'Human Resources', branch: 'Headquarters', status: 'Active', date_hired: '2020-01-01', available_leaves: 15, gender: 'Female', date_of_birth: '1985-09-05', managed_branches: ['Headquarters', 'Downtown Office'] },\n    { id: 'ADM-001', first_name: 'Super', last_name: 'Admin', email: 'super@example.com', password: 'password', role: 'Admin', position: 'System Administrator', department: 'IT', branch: 'Headquarters', status: 'Active', date_hired: '2019-01-01', available_leaves: 20, gender: 'Male', date_of_birth: '1980-01-01' },\n    { id: 'EMP-PENDING-01', first_name: 'Michael', last_name: 'Brown', email: 'michael.brown@example.com', password: 'password', role: 'Employee', position: 'Junior Developer', department: 'Technology', branch: 'Headquarters', status: 'Pending Approval', date_hired: '2024-01-01', available_leaves: 15, gender: 'Male', date_of_birth: '1998-06-15' },\n];\nlet MOCK_BRANCHES = [\n    { id: 1, name: 'Headquarters' },\n    { id: 2, name: 'Downtown Office' },\n    { id: 3, name: 'Remote' },\n];\nlet MOCK_ANNOUNCEMENTS = [];\nlet MOCK_LEAVE_REQUESTS = [];\nlet MOCK_SCHEDULES = [];\nlet MOCK_ATTENDANCE = [];\nlet MOCK_PAYSLIPS = [];\n\n// --- END MOCK DATA ---\n\nexport async function getHRDashboardData() {\n  const totalEmployees = MOCK_ACCOUNTS.filter(a => a.role === 'Employee').length;\n  const pendingLeaveRequests = MOCK_LEAVE_REQUESTS.filter(lr => lr.status === 'Pending').length;\n\n  const stats = [\n      { title: 'Total Employees', value: String(totalEmployees), change: '' },\n      { title: 'On Time Percentage', value: `0%`, change: '' },\n      { title: 'Active Job Postings', value: '4', change: 'External API' },\n      { title: 'Pending Leave Requests', value: String(pendingLeaveRequests), change: '' },\n  ];\n\n  return {\n    stats,\n    recentActivities: []\n  };\n}\n\nexport async function getPastAnnouncements() {\n    return MOCK_ANNOUNCEMENTS.map(a => {\n        const postedBy = MOCK_ACCOUNTS.find(acc => acc.id === a.posted_by_id);\n        return {\n            ...a,\n            postedBy: postedBy ? `${postedBy.first_name} ${postedBy.last_name}` : 'Unknown',\n            date: format(new Date(a.posted_at), 'yyyy-MM-dd')\n        };\n    }).sort((a, b) => new Date(b.posted_at) - new Date(a.posted_at));\n}\n\nexport async function createAnnouncement(title, content, status) {\n    const hrUserId = 'HR-001';\n    const newAnnouncement = {\n        id: MOCK_ANNOUNCEMENTS.length + 1,\n        title,\n        content,\n        posted_by_id: hrUserId,\n        status,\n        posted_at: new Date().toISOString()\n    };\n    MOCK_ANNOUNCEMENTS.push(newAnnouncement);\n}\n\nexport async function deleteAnnouncement(id) {\n    MOCK_ANNOUNCEMENTS = MOCK_ANNOUNCEMENTS.filter(a => a.id !== id);\n}\n\n\nexport async function getDailyAttendanceData(date) {\n    return [];\n}\n\n\nexport async function getEmployees() {\n    return MOCK_ACCOUNTS.filter(a => a.role === 'Employee' && a.status !== 'Pending Approval').map(a => ({\n        id: a.id,\n        name: `${a.first_name} ${a.last_name}`,\n        position: a.position,\n        branch: a.branch,\n        status: a.status\n    }));\n}\n\nexport async function getLeaveRequests() {\n    return MOCK_LEAVE_REQUESTS.map(lr => {\n        const employee = MOCK_ACCOUNTS.find(a => a.id === lr.account_id);\n        return {\n            id: lr.id,\n            employeeId: employee.id,\n            employeeName: `${employee.first_name} ${employee.last_name}`,\n            leave_type: lr.leave_type,\n            startDate: format(new Date(lr.start_date), 'yyyy-MM-dd'),\n            endDate: format(new Date(lr.end_date), 'yyyy-MM-dd'),\n            reason: lr.reason,\n            status: lr.status\n        }\n    });\n}\n\nexport async function updateLeaveRequestStatus(requestId, status) {\n    const request = MOCK_LEAVE_REQUESTS.find(lr => lr.id === requestId);\n    if (request) {\n        request.status = status;\n    }\n}\n\nexport async function getEmployeesWithPayslipStatus() {\n    return MOCK_ACCOUNTS\n        .filter(a => a.role === 'Employee')\n        .map(a => ({\n            id: a.id,\n            name: `${a.first_name} ${a.last_name}`,\n            position: a.position,\n            department: a.department,\n            payslipStatus: 'Pending'\n        }));\n}\n\nexport async function getEmployeesForScheduling() {\n    return MOCK_ACCOUNTS\n        .filter(a => a.role === 'Employee' && a.status === 'Active')\n        .map(a => ({\n            id: a.id,\n            name: `${a.first_name} ${a.last_name}`,\n            shift: '9:00 - 17:00'\n        }));\n}\n\nexport async function getEmployeeDashboardData(employeeId) {\n    const employee = MOCK_ACCOUNTS.find(a => a.id === employeeId);\n    if (!employee) {\n        return { employee: { name: 'Employee Not Found' }, announcements: [] };\n    }\n    return {\n        employee: {\n            employeeId: employee.id,\n            name: `${employee.first_name} ${employee.last_name}`,\n            position: employee.position,\n            department: employee.department,\n            email: employee.email,\n        },\n        announcements: []\n    };\n}\n\nexport async function getAttendanceData(employeeId) {\n    return {\n        summary: { daysAttended: 0, lates: 0, absences: 0, totalHours: 0, availableLeaves: 0 },\n        records: []\n    };\n}\n\nexport async function getPastLeaveRequests(employeeId) {\n    return MOCK_LEAVE_REQUESTS\n        .filter(lr => lr.account_id === employeeId)\n        .map(lr => ({\n            id: lr.id,\n            leave_type: lr.leave_type,\n            startDate: format(new Date(lr.start_date), 'yyyy-MM-dd'),\n            endDate: format(new Date(lr.end_date), 'yyyy-MM-dd'),\n            status: lr.status,\n        }));\n}\n\nexport async function createLeaveRequest(data) {\n    const { employeeId, leaveType, startDate, endDate, reason } = data;\n    const newRequest = {\n        id: MOCK_LEAVE_REQUESTS.length + 1,\n        account_id: employeeId,\n        leave_type: leaveType,\n        start_date: startDate,\n        end_date: endDate,\n        reason: reason,\n        status: 'Pending'\n    };\n    MOCK_LEAVE_REQUESTS.push(newRequest);\n    return { success: true };\n}\n\nexport async function getPayPeriods(employeeId) {\n    return [];\n}\n\nexport async function getSchedule(employeeId) {\n    return [];\n}\n\n\nexport async function getPendingEmployeeApprovals() {\n     return MOCK_ACCOUNTS\n        .filter(a => a.status === 'Pending Approval')\n        .map(a => ({\n            id: a.id,\n            employeeName: `${a.first_name} ${a.last_name}`,\n            position: a.position,\n            submittedBy: 'Olivia Chen',\n            submissionDate: format(new Date(a.date_hired), 'yyyy-MM-dd')\n        }));\n}\n\nexport async function approveEmployee(employeeId) {\n    const employee = MOCK_ACCOUNTS.find(a => a.id === employeeId);\n    if(employee) employee.status = 'Active';\n}\n\nexport async function rejectEmployee(employeeId) {\n    MOCK_ACCOUNTS = MOCK_ACCOUNTS.filter(a => a.id !== employeeId);\n}\n\nexport async function getEmployeeName(employeeId) {\n    const employee = MOCK_ACCOUNTS.find(a => a.id === employeeId);\n    return employee ? `${employee.first_name} ${employee.last_name}` : \"Unknown Employee\";\n}\n\nexport async function getReportDetails(reportId) {\n    return null;\n}\n\n// --- Branch Allocation & Management Functions ---\n\nexport async function getHrPersonnel() {\n    return MOCK_ACCOUNTS\n        .filter(a => a.role === 'HR')\n        .map(a => ({\n            id: a.id,\n            name: `${a.first_name} ${a.last_name}`,\n            position: a.position,\n            managed_branches: a.managed_branches || []\n        }));\n}\n\nexport async function getBranches() {\n    // We now use the dedicated MOCK_BRANCHES array.\n    return MOCK_BRANCHES;\n}\n\nexport async function createBranch(branchName) {\n    // Check if branch already exists\n    if (MOCK_BRANCHES.some(b => b.name.toLowerCase() === branchName.toLowerCase())) {\n        throw new Error('A branch with this name already exists.');\n    }\n    const newId = MOCK_BRANCHES.length > 0 ? Math.max(...MOCK_BRANCHES.map(b => b.id)) + 1 : 1;\n    const newBranch = { id: newId, name: branchName };\n    MOCK_BRANCHES.push(newBranch);\n    return newBranch;\n}\n\nexport async function deleteBranch(branchId) {\n    MOCK_BRANCHES = MOCK_BRANCHES.filter(b => b.id !== branchId);\n}\n\nexport async function updateHrBranchAllocation(hrId, branches) {\n    const hrAccount = MOCK_ACCOUNTS.find(a => a.id === hrId);\n    if (hrAccount) {\n        hrAccount.managed_branches = branches;\n        return { success: true };\n    }\n    return { success: false, message: \"HR personnel not found.\" };\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 475, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/.next-internal/server/app/admin/branches/page/actions.js%20%28server%20actions%20loader%29"],"sourcesContent":["export {getBranches as '00651499873cf7b226d6bebda46391ddb16c9e3017'} from 'ACTIONS_MODULE0'\nexport {getHRDashboardData as '0041d2031c64a9612535dcab2138817eeef5f5974c'} from 'ACTIONS_MODULE0'\nexport {getPastAnnouncements as '0081b652a1ba97ae17200b5330a84c1eaee2045820'} from 'ACTIONS_MODULE0'\nexport {createAnnouncement as '70b877cecdc386a8a18ed56ee7a4f1ed9d86f3d177'} from 'ACTIONS_MODULE0'\nexport {deleteAnnouncement as '406a1f92adca3011402ab7c759c72a0873cf50a660'} from 'ACTIONS_MODULE0'\nexport {getDailyAttendanceData as '40a5b75da077963d47ebe0f5fc53e2a123ce19ae24'} from 'ACTIONS_MODULE0'\nexport {getEmployees as '00c619ec02afa7d57568b4e0406ecec6a6bf21e12a'} from 'ACTIONS_MODULE0'\nexport {getLeaveRequests as '00acc9d5c2e411c4f8f6e3b8e0c4a2c3da73708524'} from 'ACTIONS_MODULE0'\nexport {updateLeaveRequestStatus as '60a9cb6eb3ceaacad191d5184a4122349a0d55217a'} from 'ACTIONS_MODULE0'\nexport {getEmployeesWithPayslipStatus as '002dd23120083517493f1856b5ce3e27ca1098d244'} from 'ACTIONS_MODULE0'\nexport {getEmployeesForScheduling as '00d5a8089689a75a56fcc38e7013d6855f6b64deb6'} from 'ACTIONS_MODULE0'\nexport {getEmployeeDashboardData as '40b7b79cef1785e3c75ae17348edfad469c103bb85'} from 'ACTIONS_MODULE0'\nexport {getAttendanceData as '40360376d7fc3085764bf086e59364b9a7bd931021'} from 'ACTIONS_MODULE0'\nexport {getPastLeaveRequests as '40885e633df6cf5d24407734484d3a4bcc7bc878e0'} from 'ACTIONS_MODULE0'\nexport {createLeaveRequest as '40e89487447e1f133bfc1c734cc2338626fb053105'} from 'ACTIONS_MODULE0'\nexport {getPayPeriods as '40e36f9c74786f4cdb1a562f7c79abdf9440a06d44'} from 'ACTIONS_MODULE0'\nexport {getSchedule as '40b0eb7305a3d24b1488b76f6edba4bab27c969bfe'} from 'ACTIONS_MODULE0'\nexport {getPendingEmployeeApprovals as '0067b71c9617499970f47f615b607f992a7b35b7ca'} from 'ACTIONS_MODULE0'\nexport {approveEmployee as '400c24efbdff8ad0edbd723316ed5350a26ca81947'} from 'ACTIONS_MODULE0'\nexport {rejectEmployee as '403bd6deaf58cedd1f69830ca2372388b1774aab05'} from 'ACTIONS_MODULE0'\nexport {getEmployeeName as '405c3db62c447e59c0ae7044461282afdf964ae1bd'} from 'ACTIONS_MODULE0'\nexport {getReportDetails as '40fdc91fc4350406f04eb4a57938354df3e9a76bac'} from 'ACTIONS_MODULE0'\nexport {getHrPersonnel as '006f92dd1eaec6e537e91dc9dec624243ee6afc955'} from 'ACTIONS_MODULE0'\nexport {createBranch as '409822123b4518f2a5ebec8d5029d0aa257facd731'} from 'ACTIONS_MODULE0'\nexport {deleteBranch as '402bf722be4a91aa4ab56f119fd6bbe1240abba9d6'} from 'ACTIONS_MODULE0'\nexport {updateHrBranchAllocation as '6034bd75e3ee5334cb7cb149ba648ab4d639d921dd'} from 'ACTIONS_MODULE0'\n"],"names":[],"mappings":";AAAA","debugId":null}},
    {"offset": {"line": 608, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/admin/branches/page.jsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/src/app/admin/branches/page.jsx <module evaluation> from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/app/admin/branches/page.jsx <module evaluation>\",\n    \"default\",\n);\n"],"names":[],"mappings":";;;AAAA;;uCACe,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACjC;IAAa,MAAM,IAAI,MAAM;AAAmS,GAChU,iEACA","debugId":null}},
    {"offset": {"line": 622, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/admin/branches/page.jsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/src/app/admin/branches/page.jsx from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/app/admin/branches/page.jsx\",\n    \"default\",\n);\n"],"names":[],"mappings":";;;AAAA;;uCACe,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACjC;IAAa,MAAM,IAAI,MAAM;AAA+Q,GAC5S,6CACA","debugId":null}},
    {"offset": {"line": 636, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}}]
}