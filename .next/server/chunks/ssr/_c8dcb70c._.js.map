{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/lib/data.js"],"sourcesContent":["/**\n * @fileoverview This file contains all the functions for fetching data from the database.\n */\n'use server';\n\nimport { format, formatDistanceToNow, addDays, subDays } from 'date-fns';\n\n// --- MOCK DATA ---\n\nlet MOCK_ACCOUNTS = [\n    { id: 'EMP-00123', first_name: 'Maria', last_name: 'Rodriguez', email: 'maria.rodriguez@example.com', password: 'password', role: 'Employee', position: 'Senior Software Engineer', department: 'Technology', branch: 'Headquarters', status: 'Active', date_hired: '2022-01-15', available_leaves: 12, gender: 'Female', date_of_birth: '1990-05-20', sss_number: '00-0000000-0', philhealth_number: '00-000000000-0', pagibig_number: '0000-0000-0000', tin: '000-000-000-000' },\n    { id: 'EMP-00124', first_name: 'David', last_name: 'Lee', email: 'david.lee@example.com', password: 'password', role: 'Employee', position: 'Project Manager', department: 'Management', branch: 'Headquarters', status: 'Active', date_hired: '2021-03-20', available_leaves: 15, gender: 'Male', date_of_birth: '1988-11-12' },\n    { id: 'EMP-00125', first_name: 'Sarah', last_name: 'Chen', email: 'sarah.chen@example.com', password: 'password', role: 'Employee', position: 'UX Designer', department: 'Design', branch: 'Downtown Office', status: 'Active', date_hired: '2023-05-10', available_leaves: 10, gender: 'Female', date_of_birth: '1995-02-25' },\n    { id: 'EMP-00126', first_name: 'John', last_name: 'Doe', email: 'john.doe@example.com', password: 'password', role: 'Employee', position: 'QA Tester', department: 'Technology', branch: 'Remote', status: 'On Leave', date_hired: '2022-08-01', available_leaves: 5, gender: 'Male', date_of_birth: '1992-07-30' },\n    { id: 'HR-001', first_name: 'Olivia', last_name: 'Chen', email: 'olivia.chen.hr@example.com', password: 'password', role: 'HR', position: 'HR Manager', department: 'Human Resources', branch: 'Headquarters', status: 'Active', date_hired: '2020-01-01', available_leaves: 15, gender: 'Female', date_of_birth: '1985-09-05', managed_branches: ['Headquarters', 'Downtown Office'] },\n    { id: 'ADM-001', first_name: 'Super', last_name: 'Admin', email: 'super@example.com', password: 'password', role: 'Admin', position: 'System Administrator', department: 'IT', branch: 'Headquarters', status: 'Active', date_hired: '2019-01-01', available_leaves: 20, gender: 'Male', date_of_birth: '1980-01-01' },\n    { id: 'EMP-PENDING-01', first_name: 'Michael', last_name: 'Brown', email: 'michael.brown@example.com', password: 'password', role: 'Employee', position: 'Junior Developer', department: 'Technology', branch: 'Headquarters', status: 'Pending Approval', date_hired: '2024-01-01', available_leaves: 15, gender: 'Male', date_of_birth: '1998-06-15' },\n];\nlet MOCK_BRANCHES = [\n    { id: 1, name: 'Headquarters', coordinates: '14.5547, 121.0244' },\n    { id: 2, name: 'Downtown Office', coordinates: '14.5995, 120.9842' },\n    { id: 3, name: 'Remote', coordinates: 'N/A' },\n];\nlet MOCK_POSITIONS = [\n    { id: 1, title: 'Senior Software Engineer', rate: 50.00 },\n    { id: 2, title: 'Project Manager', rate: 55.00 },\n    { id: 3, title: 'UX Designer', rate: 45.00 },\n    { id: 4, title: 'QA Tester', rate: 35.00 },\n    { id: 5, title: 'Junior Developer', rate: 30.00 },\n    { id: 6, title: 'HR Manager', rate: 48.00 },\n    { id: 7, title: 'System Administrator', rate: 52.00 },\n];\nconst MOCK_STRUCTURE = {\n    'Headquarters': {\n        'Technology': ['Senior Software Engineer', 'Junior Developer', 'QA Tester'],\n        'Management': ['Project Manager'],\n        'Human Resources': ['HR Manager'],\n        'IT': ['System Administrator']\n    },\n    'Downtown Office': {\n        'Design': ['UX Designer'],\n        'Sales': ['Sales Associate'],\n        'Marketing': ['Marketing Specialist']\n    },\n    'Remote': {\n        'Technology': ['Senior Software Engineer', 'QA Tester'],\n        'Design': ['UX Designer']\n    }\n};\n\nlet MOCK_ANNOUNCEMENTS = [];\nlet MOCK_LEAVE_REQUESTS = [];\nlet MOCK_SCHEDULES = [];\nlet MOCK_ATTENDANCE = [];\nlet MOCK_PAYSLIPS = [];\n\n// --- END MOCK DATA ---\n\nexport async function getHRDashboardData() {\n  const totalEmployees = MOCK_ACCOUNTS.filter(a => a.role === 'Employee').length;\n  const pendingLeaveRequests = MOCK_LEAVE_REQUESTS.filter(lr => lr.status === 'Pending').length;\n\n  const stats = [\n      { title: 'Total Employees', value: String(totalEmployees), change: '' },\n      { title: 'On Time Percentage', value: `0%`, change: '' },\n      { title: 'Active Job Postings', value: '4', change: 'External API' },\n      { title: 'Pending Leave Requests', value: String(pendingLeaveRequests), change: '' },\n  ];\n\n  return {\n    stats,\n    recentActivities: []\n  };\n}\n\nexport async function getPastAnnouncements() {\n    return MOCK_ANNOUNCEMENTS.map(a => {\n        const postedBy = MOCK_ACCOUNTS.find(acc => acc.id === a.posted_by_id);\n        return {\n            ...a,\n            postedBy: postedBy ? `${''}${postedBy.first_name} ${postedBy.last_name}` : 'Unknown',\n            date: format(new Date(a.posted_at), 'yyyy-MM-dd')\n        };\n    }).sort((a, b) => new Date(b.posted_at) - new Date(a.posted_at));\n}\n\nexport async function createAnnouncement(title, content, status) {\n    const hrUserId = 'HR-001';\n    const newAnnouncement = {\n        id: MOCK_ANNOUNCEMENTS.length + 1,\n        title,\n        content,\n        posted_by_id: hrUserId,\n        status,\n        posted_at: new Date().toISOString()\n    };\n    MOCK_ANNOUNCEMENTS.push(newAnnouncement);\n}\n\nexport async function deleteAnnouncement(id) {\n    MOCK_ANNOUNCEMENTS = MOCK_ANNOUNCEMENTS.filter(a => a.id !== id);\n}\n\n\nexport async function getDailyAttendanceData(date) {\n    return [];\n}\n\n\nexport async function getEmployees() {\n    return MOCK_ACCOUNTS.filter(a => a.role === 'Employee' && a.status !== 'Pending Approval').map(a => ({\n        id: a.id,\n        name: `${a.first_name} ${a.last_name}`,\n        position: a.position,\n        branch: a.branch,\n        status: a.status\n    }));\n}\n\nexport async function getEmployeeById(id) {\n    const employee = MOCK_ACCOUNTS.find(a => a.id === id);\n    if (!employee) return null;\n\n    return {\n        ...employee,\n        name: `${employee.first_name} ${employee.last_name}`,\n        date_hired: format(new Date(employee.date_hired), 'yyyy-MM-dd'),\n        date_of_birth: format(new Date(employee.date_of_birth), 'yyyy-MM-dd'),\n    };\n}\n\n\nexport async function deleteEmployee(id) {\n    const initialLength = MOCK_ACCOUNTS.length;\n    MOCK_ACCOUNTS = MOCK_ACCOUNTS.filter(a => a.id !== id);\n    return MOCK_ACCOUNTS.length < initialLength;\n}\n\nexport async function getLeaveRequests() {\n    return MOCK_LEAVE_REQUESTS.map(lr => {\n        const employee = MOCK_ACCOUNTS.find(a => a.id === lr.account_id);\n        return {\n            id: lr.id,\n            employeeId: employee.id,\n            employeeName: `${employee.first_name} ${employee.last_name}`,\n            leave_type: lr.leave_type,\n            startDate: format(new Date(lr.start_date), 'yyyy-MM-dd'),\n            endDate: format(new Date(lr.end_date), 'yyyy-MM-dd'),\n            reason: lr.reason,\n            status: lr.status\n        }\n    });\n}\n\nexport async function updateLeaveRequestStatus(requestId, status) {\n    const request = MOCK_LEAVE_REQUESTS.find(lr => lr.id === requestId);\n    if (request) {\n        request.status = status;\n    }\n}\n\nexport async function getEmployeesWithPayslipStatus() {\n    return MOCK_ACCOUNTS\n        .filter(a => a.role === 'Employee')\n        .map(a => {\n            const hasBenefits = a.sss_number && a.philhealth_number && a.pagibig_number && a.tin;\n            const positionDetails = MOCK_POSITIONS.find(p => p.title === a.position);\n            return {\n                id: a.id,\n                name: `${a.first_name} ${a.last_name}`,\n                position: a.position,\n                department: a.department,\n                rate: positionDetails ? positionDetails.rate : 0,\n                payslipStatus: 'Pending',\n                benefitsStatus: hasBenefits ? 'Complete' : 'Incomplete',\n            };\n        });\n}\n\nexport async function getEmployeesForScheduling() {\n    return MOCK_ACCOUNTS\n        .filter(a => a.role === 'Employee' && a.status === 'Active')\n        .map(a => ({\n            id: a.id,\n            name: `${a.first_name} ${a.last_name}`,\n            shift: '9:00 - 17:00'\n        }));\n}\n\nexport async function getEmployeeDashboardData(employeeId) {\n    const employee = MOCK_ACCOUNTS.find(a => a.id === employeeId);\n    if (!employee) {\n        return { employee: { name: 'Employee Not Found' }, announcements: [] };\n    }\n    return {\n        employee: {\n            employeeId: employee.id,\n            name: `${employee.first_name} ${employee.last_name}`,\n            position: employee.position,\n            department: employee.department,\n            branch: employee.branch,\n            email: employee.email,\n        },\n        announcements: []\n    };\n}\n\nexport async function getAttendanceData(employeeId) {\n    return {\n        summary: { daysAttended: 0, lates: 0, absences: 0, totalHours: 0, availableLeaves: 0 },\n        records: []\n    };\n}\n\nexport async function getPastLeaveRequests(employeeId) {\n    return MOCK_LEAVE_REQUESTS\n        .filter(lr => lr.account_id === employeeId)\n        .map(lr => ({\n            id: lr.id,\n            leave_type: lr.leave_type,\n            startDate: format(new Date(lr.start_date), 'yyyy-MM-dd'),\n            endDate: format(new Date(lr.end_date), 'yyyy-MM-dd'),\n            status: lr.status,\n        }));\n}\n\nexport async function createLeaveRequest(data) {\n    const { employeeId, leaveType, startDate, endDate, reason } = data;\n    const newRequest = {\n        id: MOCK_LEAVE_REQUESTS.length + 1,\n        account_id: employeeId,\n        leave_type: leaveType,\n        start_date: startDate,\n        end_date: endDate,\n        reason: reason,\n        status: 'Pending'\n    };\n    MOCK_LEAVE_REQUESTS.push(newRequest);\n    return { success: true };\n}\n\nexport async function getPayPeriods(employeeId) {\n    return [];\n}\n\nexport async function getSchedule(employeeId) {\n    return [];\n}\n\n\nexport async function getPendingEmployeeApprovals() {\n     return MOCK_ACCOUNTS\n        .filter(a => a.status === 'Pending Approval')\n        .map(a => ({\n            id: a.id,\n            employeeName: `${a.first_name} ${a.last_name}`,\n            position: a.position,\n            submittedBy: 'Olivia Chen',\n            submissionDate: format(new Date(a.date_hired), 'yyyy-MM-dd')\n        }));\n}\n\nexport async function approveEmployee(employeeId) {\n    const employee = MOCK_ACCOUNTS.find(a => a.id === employeeId);\n    if(employee) employee.status = 'Active';\n}\n\nexport async function rejectEmployee(employeeId) {\n    MOCK_ACCOUNTS = MOCK_ACCOUNTS.filter(a => a.id !== employeeId);\n}\n\nexport async function getEmployeeName(employeeId) {\n    const employee = MOCK_ACCOUNTS.find(a => a.id === employeeId);\n    return employee ? `${employee.first_name} ${employee.last_name}` : \"Unknown Employee\";\n}\n\nexport async function getReportDetails(reportId) {\n    return null;\n}\n\n// --- Branch Allocation & Management Functions ---\n\nexport async function getHrPersonnel() {\n    return MOCK_ACCOUNTS\n        .filter(a => a.role === 'HR')\n        .map(a => ({\n            id: a.id,\n            name: `${a.first_name} ${a.last_name}`,\n            position: a.position,\n            managed_branches: a.managed_branches || []\n        }));\n}\n\nexport async function getBranches() {\n    return MOCK_BRANCHES;\n}\n\nexport async function createBranch(branchName, coordinates) {\n    if (MOCK_BRANCHES.some(b => b.name.toLowerCase() === branchName.toLowerCase())) {\n        throw new Error('A branch with this name already exists.');\n    }\n    const newId = MOCK_BRANCHES.length > 0 ? Math.max(...MOCK_BRANCHES.map(b => b.id)) + 1 : 1;\n    const newBranch = { id: newId, name: branchName, coordinates };\n    MOCK_BRANCHES.push(newBranch);\n    return newBranch;\n}\n\nexport async function deleteBranch(branchId) {\n    const branchInUse = MOCK_ACCOUNTS.some(hr => hr.managed_branches?.includes(MOCK_BRANCHES.find(b => b.id === branchId)?.name));\n    if (branchInUse) {\n        throw new Error('This branch is currently assigned to HR personnel and cannot be deleted.');\n    }\n    MOCK_BRANCHES = MOCK_BRANCHES.filter(b => b.id !== branchId);\n}\n\n\nexport async function updateHrBranchAllocation(hrId, branches) {\n    const hrAccount = MOCK_ACCOUNTS.find(a => a.id === hrId);\n    if (hrAccount) {\n        hrAccount.managed_branches = branches;\n        return { success: true };\n    }\n    return { success: false, message: \"HR personnel not found.\" };\n}\n\nexport async function updateEmployee(id, data) {\n    const index = MOCK_ACCOUNTS.findIndex(a => a.id === id);\n    if (index === -1) {\n        return { success: false, message: 'Employee not found.' };\n    }\n\n    const updatedEmployee = {\n        ...MOCK_ACCOUNTS[index],\n        first_name: data.firstName,\n        last_name: data.lastName,\n        middle_name: data.middleName,\n        gender: data.gender,\n        date_of_birth: data.dob,\n        position: data.position,\n        department: data.department,\n        branch: data.branch,\n        date_hired: data.hireDate,\n        email: data.email,\n        // Assuming phone number is not directly on the main account object in this mock\n    };\n\n    MOCK_ACCOUNTS[index] = updatedEmployee;\n    return { success: true, message: 'Employee updated successfully.' };\n}\n\n\n// --- Positions & Rates Functions ---\n\nexport async function getPositions() {\n    // This now returns all unique position titles across all departments/branches\n    const allPositions = new Set();\n    Object.values(MOCK_STRUCTURE).forEach(departments => {\n        Object.values(departments).forEach(positions => {\n            positions.forEach(p => allPositions.add(p));\n        });\n    });\n    return Array.from(allPositions).map((title, index) => {\n        // Find original rate if possible, otherwise default\n        const originalPosition = MOCK_POSITIONS.find(p => p.title === title);\n        return {\n            id: index + 1,\n            title,\n            rate: originalPosition ? originalPosition.rate : 0\n        }\n    });\n}\n\nexport async function createPosition(title, rate) {\n    if (MOCK_POSITIONS.some(p => p.title.toLowerCase() === title.toLowerCase())) {\n        throw new Error('A position with this title already exists.');\n    }\n    const newId = MOCK_POSITIONS.length > 0 ? Math.max(...MOCK_POSITIONS.map(p => p.id)) + 1 : 1;\n    const newPosition = { id: newId, title, rate };\n    MOCK_POSITIONS.push(newPosition);\n    return newPosition;\n}\n\nexport async function deletePosition(positionId) {\n    const positionInUse = MOCK_ACCOUNTS.some(acc => acc.position === MOCK_POSITIONS.find(p => p.id === positionId)?.title);\n    if (positionInUse) {\n        throw new Error('This position is currently assigned to employees and cannot be deleted.');\n    }\n    MOCK_POSITIONS = MOCK_POSITIONS.filter(p => p.id !== positionId);\n}\n\n// --- Cascading Dropdown Functions ---\n\nexport async function getDepartmentsForBranch(branchName) {\n    if (!branchName || !MOCK_STRUCTURE[branchName]) {\n        return [];\n    }\n    return Object.keys(MOCK_STRUCTURE[branchName]);\n}\n\nexport async function getPositionsForDepartment(departmentName) {\n    for (const branch in MOCK_STRUCTURE) {\n        if (MOCK_STRUCTURE[branch][departmentName]) {\n            return MOCK_STRUCTURE[branch][departmentName];\n        }\n    }\n    return [];\n}\n\n    "],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 685, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/.next-internal/server/app/dashboard/schedule/page/actions.js%20%28server%20actions%20loader%29"],"sourcesContent":["export {getEmployeesWithPayslipStatus as '002dd23120083517493f1856b5ce3e27ca1098d244'} from 'ACTIONS_MODULE0'\nexport {getHRDashboardData as '0041d2031c64a9612535dcab2138817eeef5f5974c'} from 'ACTIONS_MODULE0'\nexport {getBranches as '00651499873cf7b226d6bebda46391ddb16c9e3017'} from 'ACTIONS_MODULE0'\nexport {getPendingEmployeeApprovals as '0067b71c9617499970f47f615b607f992a7b35b7ca'} from 'ACTIONS_MODULE0'\nexport {getHrPersonnel as '006f92dd1eaec6e537e91dc9dec624243ee6afc955'} from 'ACTIONS_MODULE0'\nexport {getPastAnnouncements as '0081b652a1ba97ae17200b5330a84c1eaee2045820'} from 'ACTIONS_MODULE0'\nexport {getPositions as '009e1e55ed3679817775f3fa1467d6a8d3d8736c4a'} from 'ACTIONS_MODULE0'\nexport {getLeaveRequests as '00acc9d5c2e411c4f8f6e3b8e0c4a2c3da73708524'} from 'ACTIONS_MODULE0'\nexport {getEmployees as '00c619ec02afa7d57568b4e0406ecec6a6bf21e12a'} from 'ACTIONS_MODULE0'\nexport {getEmployeesForScheduling as '00d5a8089689a75a56fcc38e7013d6855f6b64deb6'} from 'ACTIONS_MODULE0'\nexport {approveEmployee as '400c24efbdff8ad0edbd723316ed5350a26ca81947'} from 'ACTIONS_MODULE0'\nexport {deleteBranch as '402bf722be4a91aa4ab56f119fd6bbe1240abba9d6'} from 'ACTIONS_MODULE0'\nexport {getAttendanceData as '40360376d7fc3085764bf086e59364b9a7bd931021'} from 'ACTIONS_MODULE0'\nexport {rejectEmployee as '403bd6deaf58cedd1f69830ca2372388b1774aab05'} from 'ACTIONS_MODULE0'\nexport {getEmployeeName as '405c3db62c447e59c0ae7044461282afdf964ae1bd'} from 'ACTIONS_MODULE0'\nexport {getDepartmentsForBranch as '405d0bc438bbb2c7f72de945affb8287da8e3ec894'} from 'ACTIONS_MODULE0'\nexport {deleteAnnouncement as '406a1f92adca3011402ab7c759c72a0873cf50a660'} from 'ACTIONS_MODULE0'\nexport {getPastLeaveRequests as '40885e633df6cf5d24407734484d3a4bcc7bc878e0'} from 'ACTIONS_MODULE0'\nexport {getPositionsForDepartment as '4098d8639b4d7e181c4a232b77c397aee879de1de4'} from 'ACTIONS_MODULE0'\nexport {getDailyAttendanceData as '40a5b75da077963d47ebe0f5fc53e2a123ce19ae24'} from 'ACTIONS_MODULE0'\nexport {deletePosition as '40a69a957b01cb08f497843c9138b9020dea342972'} from 'ACTIONS_MODULE0'\nexport {getSchedule as '40b0eb7305a3d24b1488b76f6edba4bab27c969bfe'} from 'ACTIONS_MODULE0'\nexport {getEmployeeDashboardData as '40b7b79cef1785e3c75ae17348edfad469c103bb85'} from 'ACTIONS_MODULE0'\nexport {deleteEmployee as '40d9a51fb28edbd77052634e1d4229df7421a16ff4'} from 'ACTIONS_MODULE0'\nexport {getPayPeriods as '40e36f9c74786f4cdb1a562f7c79abdf9440a06d44'} from 'ACTIONS_MODULE0'\nexport {createLeaveRequest as '40e89487447e1f133bfc1c734cc2338626fb053105'} from 'ACTIONS_MODULE0'\nexport {getEmployeeById as '40ed5a75d32568df3e02e1d7138130c11b0fa518ff'} from 'ACTIONS_MODULE0'\nexport {getReportDetails as '40fdc91fc4350406f04eb4a57938354df3e9a76bac'} from 'ACTIONS_MODULE0'\nexport {updateHrBranchAllocation as '6034bd75e3ee5334cb7cb149ba648ab4d639d921dd'} from 'ACTIONS_MODULE0'\nexport {updateEmployee as '604206acd9d9cff37b360a36edb47864916be42ac7'} from 'ACTIONS_MODULE0'\nexport {createPosition as '6093911139f7f04c7d4349f18c45e70c1cd12710b1'} from 'ACTIONS_MODULE0'\nexport {createBranch as '609822123b4518f2a5ebec8d5029d0aa257facd731'} from 'ACTIONS_MODULE0'\nexport {updateLeaveRequestStatus as '60a9cb6eb3ceaacad191d5184a4122349a0d55217a'} from 'ACTIONS_MODULE0'\nexport {createAnnouncement as '70b877cecdc386a8a18ed56ee7a4f1ed9d86f3d177'} from 'ACTIONS_MODULE0'\n"],"names":[],"mappings":";AAAA","debugId":null}},
    {"offset": {"line": 842, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/card.jsx"],"sourcesContent":["/**\n * @fileoverview Defines the Card component and its parts.\n * A card is a flexible and extensible content container. It includes options for\n * headers, footers, titles, descriptions, and content.\n */\nimport * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\n/**\n * The main container for the card component.\n */\nconst Card = React.forwardRef(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"rounded-lg border bg-card text-card-foreground shadow-sm\",\n      className\n    )}\n    {...props}\n  />\n))\nCard.displayName = \"Card\"\n\n/**\n * The header section of the card. Typically contains the title and description.\n */\nconst CardHeader = React.forwardRef(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex flex-col space-y-1.5 p-6\", className)}\n    {...props}\n  />\n))\nCardHeader.displayName = \"CardHeader\"\n\n/**\n * The title of the card. Should be placed inside a CardHeader.\n */\nconst CardTitle = React.forwardRef(({ className, ...props }, ref) => (\n  <h3\n    ref={ref}\n    className={cn(\n      \"text-2xl font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nCardTitle.displayName = \"CardTitle\"\n\n/**\n * A description for the card. Should be placed inside a CardHeader.\n */\nconst CardDescription = React.forwardRef(({ className, ...props }, ref) => (\n  <p\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nCardDescription.displayName = \"CardDescription\"\n\n/**\n * The main content area of the card.\n */\nconst CardContent = React.forwardRef(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn(\"p-6 pt-0\", className)} {...props} />\n))\nCardContent.displayName = \"CardContent\"\n\n/**\n_The footer section of the card.\n*/\nconst CardFooter = React.forwardRef(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex items-center p-6 pt-0\", className)}\n    {...props}\n  />\n))\nCardFooter.displayName = \"CardFooter\"\n\nexport { Card, CardHeader, CardFooter, CardTitle, CardDescription, CardContent }\n"],"names":[],"mappings":"AAAA;;;;CAIC;;;;;;;;;AACD;AAEA;;;;AAEA;;CAEC,GACD,MAAM,qBAAO,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAAE,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBACtD,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,4DACA;QAED,GAAG,KAAK;;;;;;AAGb,KAAK,WAAW,GAAG;AAEnB;;CAEC,GACD,MAAM,2BAAa,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAAE,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC5D,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGb,WAAW,WAAW,GAAG;AAEzB;;CAEC,GACD,MAAM,0BAAY,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAAE,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC3D,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,sDACA;QAED,GAAG,KAAK;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB;;CAEC,GACD,MAAM,gCAAkB,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAAE,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBACjE,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGb,gBAAgB,WAAW,GAAG;AAE9B;;CAEC,GACD,MAAM,4BAAc,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAAE,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC7D,8OAAC;QAAI,KAAK;QAAK,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,YAAY;QAAa,GAAG,KAAK;;;;;;AAEhE,YAAY,WAAW,GAAG;AAE1B;;AAEA,GACA,MAAM,2BAAa,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAAE,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC5D,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,8BAA8B;QAC3C,GAAG,KAAK;;;;;;AAGb,WAAW,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 939, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/table.jsx"],"sourcesContent":["/**\n * @fileoverview Defines the Table component and its parts.\n * This provides a set of styled components for creating tables.\n */\nimport * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\n/** The root `<table>` element. */\nconst Table = React.forwardRef(({ className, ...props }, ref) => (\n  <div className=\"relative w-full overflow-auto\">\n    <table\n      ref={ref}\n      className={cn(\"w-full caption-bottom text-sm\", className)}\n      {...props}\n    />\n  </div>\n))\nTable.displayName = \"Table\"\n\n/** The `<thead>` element. */\nconst TableHeader = React.forwardRef(({ className, ...props }, ref) => (\n  <thead ref={ref} className={cn(\"[&_tr]:border-b\", className)} {...props} />\n))\nTableHeader.displayName = \"TableHeader\"\n\n/** The `<tbody>` element. */\nconst TableBody = React.forwardRef(({ className, ...props }, ref) => (\n  <tbody\n    ref={ref}\n    className={cn(\"[&_tr:last-child]:border-0\", className)}\n    {...props}\n  />\n))\nTableBody.displayName = \"TableBody\"\n\n/** The `<tfoot>` element. */\nconst TableFooter = React.forwardRef(({ className, ...props }, ref) => (\n  <tfoot\n    ref={ref}\n    className={cn(\n      \"border-t bg-muted/50 font-medium [&>tr]:last:border-b-0\",\n      className\n    )}\n    {...props}\n  />\n))\nTableFooter.displayName = \"TableFooter\"\n\n/** The `<tr>` element. */\nconst TableRow = React.forwardRef(({ className, ...props }, ref) => (\n  <tr\n    ref={ref}\n    className={cn(\n      \"border-b transition-colors hover:bg-muted/50 data-[state=selected]:bg-muted\",\n      className\n    )}\n    {...props}\n  />\n))\nTableRow.displayName = \"TableRow\"\n\n/** The `<th>` element. */\nconst TableHead = React.forwardRef(({ className, ...props }, ref) => (\n  <th\n    ref={ref}\n    className={cn(\n      \"h-12 px-4 text-left align-middle font-medium text-muted-foreground [&:has([role=checkbox])]:pr-0\",\n      className\n    )}\n    {...props}\n  />\n))\nTableHead.displayName = \"TableHead\"\n\n/** The `<td>` element. */\nconst TableCell = React.forwardRef(({ className, ...props }, ref) => (\n  <td\n    ref={ref}\n    className={cn(\"p-4 align-middle [&:has([role=checkbox])]:pr-0\", className)}\n    {...props}\n  />\n))\nTableCell.displayName = \"TableCell\"\n\n/** The `<caption>` element. */\nconst TableCaption = React.forwardRef(({ className, ...props }, ref) => (\n  <caption\n    ref={ref}\n    className={cn(\"mt-4 text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nTableCaption.displayName = \"TableCaption\"\n\nexport {\n  Table,\n  TableHeader,\n  TableBody,\n  TableFooter,\n  TableHead,\n  TableRow,\n  TableCell,\n  TableCaption,\n}\n"],"names":[],"mappings":"AAAA;;;CAGC;;;;;;;;;;;AACD;AAEA;;;;AAEA,gCAAgC,GAChC,MAAM,sBAAQ,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAAE,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBACvD,8OAAC;QAAI,WAAU;kBACb,cAAA,8OAAC;YACC,KAAK;YACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;YAC9C,GAAG,KAAK;;;;;;;;;;;AAIf,MAAM,WAAW,GAAG;AAEpB,2BAA2B,GAC3B,MAAM,4BAAc,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAAE,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC7D,8OAAC;QAAM,KAAK;QAAK,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,mBAAmB;QAAa,GAAG,KAAK;;;;;;AAEzE,YAAY,WAAW,GAAG;AAE1B,2BAA2B,GAC3B,MAAM,0BAAY,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAAE,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC3D,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,8BAA8B;QAC3C,GAAG,KAAK;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,2BAA2B,GAC3B,MAAM,4BAAc,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAAE,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC7D,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,2DACA;QAED,GAAG,KAAK;;;;;;AAGb,YAAY,WAAW,GAAG;AAE1B,wBAAwB,GACxB,MAAM,yBAAW,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAAE,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1D,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,+EACA;QAED,GAAG,KAAK;;;;;;AAGb,SAAS,WAAW,GAAG;AAEvB,wBAAwB,GACxB,MAAM,0BAAY,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAAE,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC3D,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,oGACA;QAED,GAAG,KAAK;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,wBAAwB,GACxB,MAAM,0BAAY,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAAE,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC3D,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,kDAAkD;QAC/D,GAAG,KAAK;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,6BAA6B,GAC7B,MAAM,6BAAe,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAAE,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC9D,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,sCAAsC;QACnD,GAAG,KAAK;;;;;;AAGb,aAAa,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 1052, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/badge.jsx"],"sourcesContent":["/**\n * @fileoverview This file defines the Badge component.\n * Badges are used to highlight small pieces of information, such as a status or a category.\n * They come in different visual styles (variants).\n */\nimport * as React from \"react\"\nimport { cva } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\n/**\n * Defines the visual styles for the badge component.\n * Includes variants for different states like 'default', 'secondary', 'destructive', and 'outline'.\n */\nconst badgeVariants = cva(\n  \"inline-flex items-center rounded-full border px-2.5 py-0.5 text-xs font-semibold transition-colors focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2\",\n  {\n    variants: {\n      variant: {\n        default:\n          \"border-transparent bg-primary text-primary-foreground hover:bg-primary/80\",\n        secondary:\n          \"border-transparent bg-secondary text-secondary-foreground hover:bg-secondary/80\",\n        destructive:\n          \"border-transparent bg-destructive text-destructive-foreground hover:bg-destructive/80\",\n        outline: \"text-foreground\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\n/**\n * The Badge component itself.\n * @param {BadgeProps} props - The properties for the badge.\n * @returns {JSX.Element} The rendered badge component.\n */\nfunction Badge({ className, variant, ...props }) {\n  return (\n    <div className={cn(badgeVariants({ variant }), className)} {...props} />\n  )\n}\n\nexport { Badge, badgeVariants }\n"],"names":[],"mappings":"AAAA;;;;CAIC;;;;;AACD;AACA;AAEA;;;;;AAEA;;;CAGC,GACD,MAAM,gBAAgB,CAAA,GAAA,gKAAA,CAAA,MAAG,AAAD,EACtB,0KACA;IACE,UAAU;QACR,SAAS;YACP,SACE;YACF,WACE;YACF,aACE;YACF,SAAS;QACX;IACF;IACA,iBAAiB;QACf,SAAS;IACX;AACF;AAGF;;;;CAIC,GACD,SAAS,MAAM,EAAE,SAAS,EAAE,OAAO,EAAE,GAAG,OAAO;IAC7C,qBACE,8OAAC;QAAI,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,cAAc;YAAE;QAAQ,IAAI;QAAa,GAAG,KAAK;;;;;;AAExE","debugId":null}},
    {"offset": {"line": 1107, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/dashboard/schedule/page.jsx"],"sourcesContent":["/**\n * @fileoverview This file defines the Schedule page for the employee dashboard.\n * It displays the employee's weekly work schedule in a clear, tabular format.\n */\nimport {\n  Card,\n  CardContent,\n  CardHeader,\n  CardTitle,\n  CardDescription,\n  CardFooter,\n} from \"@/components/ui/card\";\nimport {\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TableHeader,\n  TableRow,\n} from \"@/components/ui/table\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { Calendar, Clock } from \"lucide-react\";\nimport { getSchedule } from \"@/lib/data\";\n\n// Hardcoded employee ID for demonstration purposes.\nconst EMPLOYEE_ID = 'EMP-00123';\n\n/**\n * Renders the employee's weekly schedule page.\n * It displays the schedule in a table and highlights the current day.\n * @returns {JSX.Element} The schedule page component.\n */\nexport default async function SchedulePage() {\n  const schedule = await getSchedule(EMPLOYEE_ID);\n\n  // Get today's day name to highlight in the schedule.\n  const today = new Date().toLocaleDateString(\"en-US\", { weekday: \"long\" });\n  const todaysSchedule = schedule.find(s => s.day === today);\n  const totalWeeklyHours = schedule.reduce((acc, s) => acc + (s.hours || 0), 0);\n\n  return (\n    <div className=\"space-y-6\">\n      <h1 className=\"text-3xl font-bold font-headline\">My Schedule</h1>\n      <Card>\n        <CardHeader>\n          <CardTitle className=\"flex items-center gap-2\">\n            <Calendar />\n            This Week's Schedule\n          </CardTitle>\n          <CardDescription>\n            Your work schedule for the current week.\n          </CardDescription>\n        </CardHeader>\n        <CardContent>\n          {schedule.length > 0 ? (\n            <Table>\n              <TableHeader>\n                <TableRow>\n                  <TableHead>Day</TableHead>\n                  <TableHead>Date</TableHead>\n                  <TableHead>Time In</TableHead>\n                  <TableHead>Time Out</TableHead>\n                  <TableHead>Break</TableHead>\n                  <TableHead className=\"text-right\">Hours</TableHead>\n                </TableRow>\n              </TableHeader>\n              <TableBody>\n                {schedule.map((item) => (\n                  <TableRow key={item.day} className={item.day === today ? 'bg-accent' : ''}>\n                    <TableCell className=\"font-medium\">\n                      {item.day}\n                      {/* Highlight the current day with a \"Today\" badge */}\n                      {item.day === today && <Badge variant=\"default\" className=\"ml-2\">Today</Badge>}\n                    </TableCell>\n                    <TableCell>{item.date}</TableCell>\n                    <TableCell>{item.timeIn}</TableCell>\n                    <TableCell>{item.timeOut}</TableCell>\n                    <TableCell>{item.break}</TableCell>\n                    <TableCell className=\"text-right\">{item.hours > 0 ? `${item.hours}` : \"-\"}</TableCell>\n                  </TableRow>\n                ))}\n              </TableBody>\n            </Table>\n          ) : (\n            <p className=\"text-muted-foreground text-center\">No schedule has been published for this week.</p>\n          )}\n        </CardContent>\n        {schedule.length > 0 && (\n            <CardFooter className=\"flex justify-between items-center\">\n                {/* Display total hours for the current day */}\n                <div className=\"text-sm text-muted-foreground flex items-center gap-2\">\n                    <Clock />\n                    <span>Today's Total Hours: <span className=\"font-bold text-foreground\">{todaysSchedule?.hours ?? 0}</span></span>\n                </div>\n                {/* Display total hours for the entire week */}\n                <div className=\"font-semibold\">\n                    Total Weekly Hours: {totalWeeklyHours}\n                </div>\n            </CardFooter>\n        )}\n      </Card>\n    </div>\n  );\n}\n"],"names":[],"mappings":"AAAA;;;CAGC;;;;AACD;AAQA;AAQA;AACA;AAAA;AACA;;;;;;;AAEA,oDAAoD;AACpD,MAAM,cAAc;AAOL,eAAe;IAC5B,MAAM,WAAW,MAAM,CAAA,GAAA,kHAAA,CAAA,cAAW,AAAD,EAAE;IAEnC,qDAAqD;IACrD,MAAM,QAAQ,IAAI,OAAO,kBAAkB,CAAC,SAAS;QAAE,SAAS;IAAO;IACvE,MAAM,iBAAiB,SAAS,IAAI,CAAC,CAAA,IAAK,EAAE,GAAG,KAAK;IACpD,MAAM,mBAAmB,SAAS,MAAM,CAAC,CAAC,KAAK,IAAM,MAAM,CAAC,EAAE,KAAK,IAAI,CAAC,GAAG;IAE3E,qBACE,8OAAC;QAAI,WAAU;;0BACb,8OAAC;gBAAG,WAAU;0BAAmC;;;;;;0BACjD,8OAAC,gIAAA,CAAA,OAAI;;kCACH,8OAAC,gIAAA,CAAA,aAAU;;0CACT,8OAAC,gIAAA,CAAA,YAAS;gCAAC,WAAU;;kDACnB,8OAAC,0MAAA,CAAA,WAAQ;;;;;oCAAG;;;;;;;0CAGd,8OAAC,gIAAA,CAAA,kBAAe;0CAAC;;;;;;;;;;;;kCAInB,8OAAC,gIAAA,CAAA,cAAW;kCACT,SAAS,MAAM,GAAG,kBACjB,8OAAC,iIAAA,CAAA,QAAK;;8CACJ,8OAAC,iIAAA,CAAA,cAAW;8CACV,cAAA,8OAAC,iIAAA,CAAA,WAAQ;;0DACP,8OAAC,iIAAA,CAAA,YAAS;0DAAC;;;;;;0DACX,8OAAC,iIAAA,CAAA,YAAS;0DAAC;;;;;;0DACX,8OAAC,iIAAA,CAAA,YAAS;0DAAC;;;;;;0DACX,8OAAC,iIAAA,CAAA,YAAS;0DAAC;;;;;;0DACX,8OAAC,iIAAA,CAAA,YAAS;0DAAC;;;;;;0DACX,8OAAC,iIAAA,CAAA,YAAS;gDAAC,WAAU;0DAAa;;;;;;;;;;;;;;;;;8CAGtC,8OAAC,iIAAA,CAAA,YAAS;8CACP,SAAS,GAAG,CAAC,CAAC,qBACb,8OAAC,iIAAA,CAAA,WAAQ;4CAAgB,WAAW,KAAK,GAAG,KAAK,QAAQ,cAAc;;8DACrE,8OAAC,iIAAA,CAAA,YAAS;oDAAC,WAAU;;wDAClB,KAAK,GAAG;wDAER,KAAK,GAAG,KAAK,uBAAS,8OAAC,iIAAA,CAAA,QAAK;4DAAC,SAAQ;4DAAU,WAAU;sEAAO;;;;;;;;;;;;8DAEnE,8OAAC,iIAAA,CAAA,YAAS;8DAAE,KAAK,IAAI;;;;;;8DACrB,8OAAC,iIAAA,CAAA,YAAS;8DAAE,KAAK,MAAM;;;;;;8DACvB,8OAAC,iIAAA,CAAA,YAAS;8DAAE,KAAK,OAAO;;;;;;8DACxB,8OAAC,iIAAA,CAAA,YAAS;8DAAE,KAAK,KAAK;;;;;;8DACtB,8OAAC,iIAAA,CAAA,YAAS;oDAAC,WAAU;8DAAc,KAAK,KAAK,GAAG,IAAI,GAAG,KAAK,KAAK,EAAE,GAAG;;;;;;;2CAVzD,KAAK,GAAG;;;;;;;;;;;;;;;iDAgB7B,8OAAC;4BAAE,WAAU;sCAAoC;;;;;;;;;;;oBAGpD,SAAS,MAAM,GAAG,mBACf,8OAAC,gIAAA,CAAA,aAAU;wBAAC,WAAU;;0CAElB,8OAAC;gCAAI,WAAU;;kDACX,8OAAC,oMAAA,CAAA,QAAK;;;;;kDACN,8OAAC;;4CAAK;0DAAqB,8OAAC;gDAAK,WAAU;0DAA6B,gBAAgB,SAAS;;;;;;;;;;;;;;;;;;0CAGrG,8OAAC;gCAAI,WAAU;;oCAAgB;oCACN;;;;;;;;;;;;;;;;;;;;;;;;;AAOzC","debugId":null}}]
}