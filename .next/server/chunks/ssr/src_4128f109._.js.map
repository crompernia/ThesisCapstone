{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/card.jsx"],"sourcesContent":["/**\n * @fileoverview Defines the Card component and its parts.\n * A card is a flexible and extensible content container. It includes options for\n * headers, footers, titles, descriptions, and content.\n */\nimport * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\n/**\n * The main container for the card component.\n */\nconst Card = React.forwardRef(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"rounded-lg border bg-card text-card-foreground shadow-sm\",\n      className\n    )}\n    {...props}\n  />\n))\nCard.displayName = \"Card\"\n\n/**\n * The header section of the card. Typically contains the title and description.\n */\nconst CardHeader = React.forwardRef(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex flex-col space-y-1.5 p-6\", className)}\n    {...props}\n  />\n))\nCardHeader.displayName = \"CardHeader\"\n\n/**\n * The title of the card. Should be placed inside a CardHeader.\n */\nconst CardTitle = React.forwardRef(({ className, ...props }, ref) => (\n  <h3\n    ref={ref}\n    className={cn(\n      \"text-2xl font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nCardTitle.displayName = \"CardTitle\"\n\n/**\n * A description for the card. Should be placed inside a CardHeader.\n */\nconst CardDescription = React.forwardRef(({ className, ...props }, ref) => (\n  <p\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nCardDescription.displayName = \"CardDescription\"\n\n/**\n * The main content area of the card.\n */\nconst CardContent = React.forwardRef(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn(\"p-6 pt-0\", className)} {...props} />\n))\nCardContent.displayName = \"CardContent\"\n\n/**\n_The footer section of the card.\n*/\nconst CardFooter = React.forwardRef(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex items-center p-6 pt-0\", className)}\n    {...props}\n  />\n))\nCardFooter.displayName = \"CardFooter\"\n\nexport { Card, CardHeader, CardFooter, CardTitle, CardDescription, CardContent }\n"],"names":[],"mappings":"AAAA;;;;CAIC;;;;;;;;;AACD;AAEA;;;;AAEA;;CAEC,GACD,MAAM,qBAAO,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAAE,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBACtD,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,4DACA;QAED,GAAG,KAAK;;;;;;AAGb,KAAK,WAAW,GAAG;AAEnB;;CAEC,GACD,MAAM,2BAAa,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAAE,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC5D,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGb,WAAW,WAAW,GAAG;AAEzB;;CAEC,GACD,MAAM,0BAAY,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAAE,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC3D,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,sDACA;QAED,GAAG,KAAK;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB;;CAEC,GACD,MAAM,gCAAkB,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAAE,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBACjE,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGb,gBAAgB,WAAW,GAAG;AAE9B;;CAEC,GACD,MAAM,4BAAc,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAAE,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC7D,8OAAC;QAAI,KAAK;QAAK,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,YAAY;QAAa,GAAG,KAAK;;;;;;AAEhE,YAAY,WAAW,GAAG;AAE1B;;AAEA,GACA,MAAM,2BAAa,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAAE,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC5D,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,8BAA8B;QAC3C,GAAG,KAAK;;;;;;AAGb,WAAW,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 104, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/tabs.jsx"],"sourcesContent":["/**\n * @fileoverview Defines the Tabs component.\n * A set of layered sections of content, known as tab panels, that are displayed\n * one at a time.\n * It is built on top of the Radix UI Tabs primitive.\n * @see https://www.radix-ui.com/primitives/docs/components/tabs\n */\n\"use client\"\n\nimport * as React from \"react\"\nimport * as TabsPrimitive from \"@radix-ui/react-tabs\"\n\nimport { cn } from \"@/lib/utils\"\n\n/** The root component for a set of tabs. */\nconst Tabs = TabsPrimitive.Root\n\n/** The list of tab triggers. */\nconst TabsList = React.forwardRef(({ className, ...props }, ref) => (\n  <TabsPrimitive.List\n    ref={ref}\n    className={cn(\n      \"inline-flex h-10 items-center justify-center rounded-md bg-muted p-1 text-muted-foreground\",\n      className\n    )}\n    {...props}\n  />\n))\nTabsList.displayName = TabsPrimitive.List.displayName\n\n/** The trigger that activates a tab panel. */\nconst TabsTrigger = React.forwardRef(({ className, ...props }, ref) => (\n  <TabsPrimitive.Trigger\n    ref={ref}\n    className={cn(\n      \"inline-flex items-center justify-center whitespace-nowrap rounded-sm px-3 py-1.5 text-sm font-medium ring-offset-background transition-all focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 data-[state=active]:bg-background data-[state=active]:text-foreground data-[state=active]:shadow-sm\",\n      className\n    )}\n    {...props}\n  />\n))\nTabsTrigger.displayName = TabsPrimitive.Trigger.displayName\n\n/** The content of a tab panel. */\nconst TabsContent = React.forwardRef(({ className, ...props }, ref) => (\n  <TabsPrimitive.Content\n    ref={ref}\n    className={cn(\n      \"mt-2 ring-offset-background focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2\",\n      className\n    )}\n    {...props}\n  />\n))\nTabsContent.displayName = TabsPrimitive.Content.displayName\n\nexport { Tabs, TabsList, TabsTrigger, TabsContent }\n"],"names":[],"mappings":"AAAA;;;;;;CAMC;;;;;;;AAGD;AACA;AAEA;AALA;;;;;AAOA,0CAA0C,GAC1C,MAAM,OAAO,gKAAA,CAAA,OAAkB;AAE/B,8BAA8B,GAC9B,MAAM,yBAAW,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAAE,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1D,8OAAC,gKAAA,CAAA,OAAkB;QACjB,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,8FACA;QAED,GAAG,KAAK;;;;;;AAGb,SAAS,WAAW,GAAG,gKAAA,CAAA,OAAkB,CAAC,WAAW;AAErD,4CAA4C,GAC5C,MAAM,4BAAc,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAAE,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC7D,8OAAC,gKAAA,CAAA,UAAqB;QACpB,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,uYACA;QAED,GAAG,KAAK;;;;;;AAGb,YAAY,WAAW,GAAG,gKAAA,CAAA,UAAqB,CAAC,WAAW;AAE3D,gCAAgC,GAChC,MAAM,4BAAc,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAAE,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC7D,8OAAC,gKAAA,CAAA,UAAqB;QACpB,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,mIACA;QAED,GAAG,KAAK;;;;;;AAGb,YAAY,WAAW,GAAG,gKAAA,CAAA,UAAqB,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 163, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/label.jsx"],"sourcesContent":["/**\n * @fileoverview Defines the Label component.\n * It is a styled text label, typically used for form fields.\n * It is built on top of the Radix UI Label primitive.\n * @see https://www.radix-ui.com/primitives/docs/components/label\n */\n\"use client\"\n\nimport * as React from \"react\"\nimport * as LabelPrimitive from \"@radix-ui/react-label\"\nimport { cva } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\n/**\n * Defines the base styles for the label.\n */\nconst labelVariants = cva(\n  \"text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70\"\n)\n\n/**\n * The Label component.\n */\nconst Label = React.forwardRef(({ className, ...props }, ref) => (\n  <LabelPrimitive.Root\n    ref={ref}\n    className={cn(labelVariants(), className)}\n    {...props}\n  />\n))\nLabel.displayName = LabelPrimitive.Root.displayName\n\nexport { Label }\n"],"names":[],"mappings":"AAAA;;;;;CAKC;;;;AAGD;AACA;AACA;AAEA;AANA;;;;;;AAQA;;CAEC,GACD,MAAM,gBAAgB,CAAA,GAAA,gKAAA,CAAA,MAAG,AAAD,EACtB;AAGF;;CAEC,GACD,MAAM,sBAAQ,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAAE,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBACvD,8OAAC,iKAAA,CAAA,OAAmB;QAClB,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,iBAAiB;QAC9B,GAAG,KAAK;;;;;;AAGb,MAAM,WAAW,GAAG,iKAAA,CAAA,OAAmB,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 204, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/table.jsx"],"sourcesContent":["/**\n * @fileoverview Defines the Table component and its parts.\n * This provides a set of styled components for creating tables.\n */\nimport * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\n/** The root `<table>` element. */\nconst Table = React.forwardRef(({ className, ...props }, ref) => (\n  <div className=\"relative w-full overflow-auto\">\n    <table\n      ref={ref}\n      className={cn(\"w-full caption-bottom text-sm\", className)}\n      {...props}\n    />\n  </div>\n))\nTable.displayName = \"Table\"\n\n/** The `<thead>` element. */\nconst TableHeader = React.forwardRef(({ className, ...props }, ref) => (\n  <thead ref={ref} className={cn(\"[&_tr]:border-b\", className)} {...props} />\n))\nTableHeader.displayName = \"TableHeader\"\n\n/** The `<tbody>` element. */\nconst TableBody = React.forwardRef(({ className, ...props }, ref) => (\n  <tbody\n    ref={ref}\n    className={cn(\"[&_tr:last-child]:border-0\", className)}\n    {...props}\n  />\n))\nTableBody.displayName = \"TableBody\"\n\n/** The `<tfoot>` element. */\nconst TableFooter = React.forwardRef(({ className, ...props }, ref) => (\n  <tfoot\n    ref={ref}\n    className={cn(\n      \"border-t bg-muted/50 font-medium [&>tr]:last:border-b-0\",\n      className\n    )}\n    {...props}\n  />\n))\nTableFooter.displayName = \"TableFooter\"\n\n/** The `<tr>` element. */\nconst TableRow = React.forwardRef(({ className, ...props }, ref) => (\n  <tr\n    ref={ref}\n    className={cn(\n      \"border-b transition-colors hover:bg-muted/50 data-[state=selected]:bg-muted\",\n      className\n    )}\n    {...props}\n  />\n))\nTableRow.displayName = \"TableRow\"\n\n/** The `<th>` element. */\nconst TableHead = React.forwardRef(({ className, ...props }, ref) => (\n  <th\n    ref={ref}\n    className={cn(\n      \"h-12 px-4 text-left align-middle font-medium text-muted-foreground [&:has([role=checkbox])]:pr-0\",\n      className\n    )}\n    {...props}\n  />\n))\nTableHead.displayName = \"TableHead\"\n\n/** The `<td>` element. */\nconst TableCell = React.forwardRef(({ className, ...props }, ref) => (\n  <td\n    ref={ref}\n    className={cn(\"p-4 align-middle [&:has([role=checkbox])]:pr-0\", className)}\n    {...props}\n  />\n))\nTableCell.displayName = \"TableCell\"\n\n/** The `<caption>` element. */\nconst TableCaption = React.forwardRef(({ className, ...props }, ref) => (\n  <caption\n    ref={ref}\n    className={cn(\"mt-4 text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nTableCaption.displayName = \"TableCaption\"\n\nexport {\n  Table,\n  TableHeader,\n  TableBody,\n  TableFooter,\n  TableHead,\n  TableRow,\n  TableCell,\n  TableCaption,\n}\n"],"names":[],"mappings":"AAAA;;;CAGC;;;;;;;;;;;AACD;AAEA;;;;AAEA,gCAAgC,GAChC,MAAM,sBAAQ,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAAE,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBACvD,8OAAC;QAAI,WAAU;kBACb,cAAA,8OAAC;YACC,KAAK;YACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;YAC9C,GAAG,KAAK;;;;;;;;;;;AAIf,MAAM,WAAW,GAAG;AAEpB,2BAA2B,GAC3B,MAAM,4BAAc,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAAE,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC7D,8OAAC;QAAM,KAAK;QAAK,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,mBAAmB;QAAa,GAAG,KAAK;;;;;;AAEzE,YAAY,WAAW,GAAG;AAE1B,2BAA2B,GAC3B,MAAM,0BAAY,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAAE,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC3D,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,8BAA8B;QAC3C,GAAG,KAAK;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,2BAA2B,GAC3B,MAAM,4BAAc,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAAE,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC7D,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,2DACA;QAED,GAAG,KAAK;;;;;;AAGb,YAAY,WAAW,GAAG;AAE1B,wBAAwB,GACxB,MAAM,yBAAW,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAAE,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1D,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,+EACA;QAED,GAAG,KAAK;;;;;;AAGb,SAAS,WAAW,GAAG;AAEvB,wBAAwB,GACxB,MAAM,0BAAY,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAAE,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC3D,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,oGACA;QAED,GAAG,KAAK;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,wBAAwB,GACxB,MAAM,0BAAY,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAAE,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC3D,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,kDAAkD;QAC/D,GAAG,KAAK;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,6BAA6B,GAC7B,MAAM,6BAAe,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAAE,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC9D,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,sCAAsC;QACnD,GAAG,KAAK;;;;;;AAGb,aAAa,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 317, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/select.jsx"],"sourcesContent":["/**\n * @fileoverview Defines the Select component and its parts.\n * A select component allows the user to choose one option from a list.\n * It is built on top of the Radix UI Select primitive.\n * @see https://www.radix-ui.com/primitives/docs/components/select\n */\n\"use client\"\n\nimport * as React from \"react\"\nimport * as SelectPrimitive from \"@radix-ui/react-select\"\nimport { Check, ChevronDown, ChevronUp } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\n/** The root component for a select dropdown. */\nconst Select = SelectPrimitive.Root\n\n/** A group of related options in a select dropdown. */\nconst SelectGroup = SelectPrimitive.Group\n\n/** The part of the select that displays the currently selected value. */\nconst SelectValue = SelectPrimitive.Value\n\n/** The trigger that opens the select dropdown. */\nconst SelectTrigger = React.forwardRef(({ className, children, ...props }, ref) => (\n  <SelectPrimitive.Trigger\n    ref={ref}\n    className={cn(\n      \"flex h-10 w-full items-center justify-between rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background placeholder:text-muted-foreground focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 [&>span]:line-clamp-1\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <SelectPrimitive.Icon asChild>\n      <ChevronDown className=\"h-4 w-4 opacity-50\" />\n    </SelectPrimitive.Icon>\n  </SelectPrimitive.Trigger>\n))\nSelectTrigger.displayName = SelectPrimitive.Trigger.displayName\n\n/** The button to scroll up in the select content. */\nconst SelectScrollUpButton = React.forwardRef(({ className, ...props }, ref) => (\n  <SelectPrimitive.ScrollUpButton\n    ref={ref}\n    className={cn(\n      \"flex cursor-default items-center justify-center py-1\",\n      className\n    )}\n    {...props}\n  >\n    <ChevronUp className=\"h-4 w-4\" />\n  </SelectPrimitive.ScrollUpButton>\n))\nSelectScrollUpButton.displayName = SelectPrimitive.ScrollUpButton.displayName\n\n/** The button to scroll down in the select content. */\nconst SelectScrollDownButton = React.forwardRef(({ className, ...props }, ref) => (\n  <SelectPrimitive.ScrollDownButton\n    ref={ref}\n    className={cn(\n      \"flex cursor-default items-center justify-center py-1\",\n      className\n    )}\n    {...props}\n  >\n    <ChevronDown className=\"h-4 w-4\" />\n  </SelectPrimitive.ScrollDownButton>\n))\nSelectScrollDownButton.displayName =\n  SelectPrimitive.ScrollDownButton.displayName\n\n/** The content of the select dropdown, containing the list of options. */\nconst SelectContent = React.forwardRef(({ className, children, position = \"popper\", ...props }, ref) => (\n  <SelectPrimitive.Portal>\n    <SelectPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"relative z-50 max-h-96 min-w-[8rem] overflow-hidden rounded-md border bg-popover text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2\",\n        position === \"popper\" &&\n          \"data-[side=bottom]:translate-y-1 data-[side=left]:-translate-x-1 data-[side=right]:translate-x-1 data-[side=top]:-translate-y-1\",\n        className\n      )}\n      position={position}\n      {...props}\n    >\n      <SelectScrollUpButton />\n      <SelectPrimitive.Viewport\n        className={cn(\n          \"p-1\",\n          position === \"popper\" &&\n            \"h-[var(--radix-select-trigger-height)] w-full min-w-[var(--radix-select-trigger-width)]\"\n        )}\n      >\n        {children}\n      </SelectPrimitive.Viewport>\n      <SelectScrollDownButton />\n    </SelectPrimitive.Content>\n  </SelectPrimitive.Portal>\n))\nSelectContent.displayName = SelectPrimitive.Content.displayName\n\n/** A label for a group of options in the select dropdown. */\nconst SelectLabel = React.forwardRef(({ className, ...props }, ref) => (\n  <SelectPrimitive.Label\n    ref={ref}\n    className={cn(\"py-1.5 pl-8 pr-2 text-sm font-semibold\", className)}\n    {...props}\n  />\n))\nSelectLabel.displayName = SelectPrimitive.Label.displayName\n\n/** An individual option in the select dropdown. */\nconst SelectItem = React.forwardRef(({ className, children, ...props }, ref) => (\n  <SelectPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex w-full cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <SelectPrimitive.ItemIndicator>\n        <Check className=\"h-4 w-4\" />\n      </SelectPrimitive.ItemIndicator>\n    </span>\n\n    <SelectPrimitive.ItemText>{children}</SelectPrimitive.ItemText>\n  </SelectPrimitive.Item>\n))\nSelectItem.displayName = SelectPrimitive.Item.displayName\n\n/** A separator between groups of options in the select dropdown. */\nconst SelectSeparator = React.forwardRef(({ className, ...props }, ref) => (\n  <SelectPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 my-1 h-px bg-muted\", className)}\n    {...props}\n  />\n))\nSelectSeparator.displayName = SelectPrimitive.Separator.displayName\n\nexport {\n  Select,\n  SelectGroup,\n  SelectValue,\n  SelectTrigger,\n  SelectContent,\n  SelectLabel,\n  SelectItem,\n  SelectSeparator,\n  SelectScrollUpButton,\n  SelectScrollDownButton,\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 514, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/lib/data.js"],"sourcesContent":["/**\n * @fileoverview This file contains all the functions for fetching data from the database.\n * It acts as a centralized and server-side-only data access layer.\n * All functions include error handling to return safe default values in case of\n * a database error, preventing the application from crashing.\n */\n'use server';\n\nimport { query } from './db';\nimport { formatDistanceToNow } from 'date-fns';\n\n/**\n * Fetches all the necessary data for the HR dashboard from the database.\n * This includes employee counts, leave requests, and recent activities.\n * @returns {Promise<object>} A promise that resolves with the dashboard data.\n */\nexport async function getHRDashboardData() {\n    try {\n        const employeeCountQuery = \"SELECT COUNT(*) FROM employees WHERE status = 'Active'\";\n        const pendingLeaveQuery = \"SELECT COUNT(*) FROM leave_requests WHERE status = 'Pending'\";\n        const recentActivityQuery = `\n            SELECT \n                lr.id, \n                e.first_name || ' ' || e.last_name as employee_name, \n                lr.leave_type, \n                lr.start_date \n            FROM leave_requests lr\n            JOIN employees e ON lr.employee_id = e.id\n            ORDER BY lr.id DESC\n            LIMIT 5;\n        `;\n\n        const [employeeResult, pendingLeaveResult, activityResult] = await Promise.all([\n            query(employeeCountQuery),\n            query(pendingLeaveQuery),\n            query(recentActivityQuery)\n        ]);\n\n        const employeeCount = employeeResult?.rows?.[0]?.count ?? 0;\n        const pendingLeaves = pendingLeaveResult?.rows?.[0]?.count ?? 0;\n        const recentActivities = activityResult?.rows?.map(row => ({\n            id: row.id,\n            activity: `${row.employee_name} requested ${row.leave_type.toLowerCase()} leave`,\n            timestamp: formatDistanceToNow(new Date(row.start_date), { addSuffix: true }),\n            type: 'Leave'\n        })) ?? [];\n\n        return {\n            stats: [\n                { title: 'Total Employees', value: employeeCount, icon: '<Users />', change: '+2 this month' },\n                { title: 'On Time Percentage', value: '96%', icon: '<CheckCircle />', change: '-1% from last month' },\n                { title: 'Active Job Postings', value: '4', icon: '<Briefcase />', change: '+1 new posting' },\n                { title: 'Pending Leave Requests', value: pendingLeaves, icon: '<Bell />', change: `${pendingLeaves} new today` },\n            ],\n            recentActivities\n        };\n    } catch (error) {\n        console.error(\"Database Error fetching HR dashboard data:\", error);\n        return {\n            stats: [],\n            recentActivities: []\n        };\n    }\n}\n\n/**\n * Fetches past announcements from the database.\n * @returns {Promise<object[]>}\n */\nexport async function getPastAnnouncements() {\n    try {\n        const announcementsQuery = `\n            SELECT \n                a.id, \n                a.title, \n                p.first_name || ' ' || p.last_name as \"postedBy\",\n                to_char(a.posted_at, 'YYYY-MM-DD') as date,\n                a.status\n            FROM announcements a\n            JOIN hr_personnel p ON a.posted_by_id = p.id\n            ORDER BY a.posted_at DESC;\n        `;\n        const result = await query(announcementsQuery);\n        return result ? result.rows : [];\n    } catch (error) {\n        console.error(\"Database error fetching announcements:\", error);\n        return [];\n    }\n}\n\n/**\n * Fetches attendance data for a specific date.\n * @param {string} date - The date to fetch data for in 'YYYY-MM-DD' format.\n * @returns {Promise<object[]>}\n */\nexport async function getDailyAttendanceData(date) {\n    try {\n        const attendanceQuery = `\n            SELECT \n                e.id, \n                e.first_name || ' ' || e.last_name as name,\n                e.position,\n                e.branch,\n                to_char(a.time_in, 'HH24:MI') as \"timeIn\",\n                to_char(a.time_out, 'HH24:MI') as \"timeOut\",\n                a.status\n            FROM employees e\n            LEFT JOIN attendance a ON e.id = a.employee_id AND a.attendance_date = $1\n            WHERE e.status = 'Active'\n            ORDER BY e.last_name, e.first_name;\n        `;\n        const result = await query(attendanceQuery, [date]);\n        if (!result) return [];\n        return result.rows.map(row => ({\n            ...row,\n            status: row.status || 'Absent'\n        }));\n    } catch (error) {\n        console.error(\"Database Error fetching daily attendance data:\", error);\n        return [];\n    }\n}\n\n/**\n * Fetches all employees from the database.\n * @returns {Promise<object[]>} A promise that resolves to an array of employee objects.\n */\nexport async function getEmployees() {\n    try {\n        const employeesQuery = `\n            SELECT \n                id,\n                first_name || ' ' || last_name as name,\n                position,\n                branch,\n                status\n            FROM employees\n            ORDER BY last_name, first_name;\n        `;\n        const result = await query(employeesQuery);\n        return result ? result.rows : [];\n    } catch (error) {\n        console.error(\"Database error fetching employees:\", error);\n        return [];\n    }\n}\n\n/**\n * Fetches all leave requests from the database.\n * @returns {Promise<object[]>}\n */\nexport async function getLeaveRequests() {\n    try {\n        const leaveRequestsQuery = `\n            SELECT \n                lr.id,\n                e.first_name || ' ' || e.last_name as \"employeeName\",\n                e.id as \"employeeId\",\n                lr.leave_type,\n                to_char(lr.start_date, 'YYYY-MM-DD') as \"startDate\",\n                to_char(lr.end_date, 'YYYY-MM-DD') as \"endDate\",\n                lr.reason,\n                lr.status\n            FROM leave_requests lr\n            JOIN employees e ON lr.employee_id = e.id\n            ORDER BY \n                CASE lr.status\n                    WHEN 'Pending' THEN 1\n                    WHEN 'Approved' THEN 2\n                    WHEN 'Rejected' THEN 3\n                    ELSE 4\n                END,\n                lr.start_date ASC;\n        `;\n        const result = await query(leaveRequestsQuery);\n        return result ? result.rows : [];\n    } catch (error) {\n        console.error(\"Database error fetching leave requests:\", error);\n        return [];\n    }\n}\n\n/**\n * Fetches all employees and their latest payslip status.\n * @returns {Promise<object[]>}\n */\nexport async function getEmployeesWithPayslipStatus() {\n    try {\n        const employeesQuery = `\n            SELECT \n                e.id,\n                e.first_name || ' ' || e.last_name as name,\n                e.position,\n                e.department,\n                CASE \n                    WHEN p.id IS NOT NULL THEN 'Generated'\n                    ELSE 'Pending'\n                END as \"payslipStatus\"\n            FROM employees e\n            LEFT JOIN payslips p ON e.id = p.employee_id \n                AND p.period_start >= date_trunc('month', current_date)\n                AND p.period_end <= (date_trunc('month', current_date) + interval '1 month - 1 day')\n            WHERE e.status = 'Active'\n            ORDER BY e.last_name, e.first_name;\n        `;\n        const result = await query(employeesQuery);\n        return result ? result.rows : [];\n    } catch (error) {\n        console.error(\"Database error fetching employee payslip status:\", error);\n        return [];\n    }\n}\n\n/**\n * Fetches all active employees to be scheduled.\n * @returns {Promise<object[]>}\n */\nexport async function getEmployeesForScheduling() {\n    try {\n        const employeesQuery = `\n            SELECT id, first_name || ' ' || last_name as name\n            FROM employees\n            WHERE status = 'Active'\n            ORDER BY last_name, first_name;\n        `;\n        const result = await query(employeesQuery);\n        if (!result) return [];\n        return result.rows.map(emp => ({...emp, shift: '9:00 - 17:00'}));\n    } catch (error) {\n        console.error(\"Database Error fetching employees for scheduling:\", error);\n        return [];\n    }\n}\n\n/**\n * Fetches the dashboard data for a specific employee.\n * @param {string} employeeId - The ID of the employee.\n * @returns {Promise<{employee: object, announcements: object[]}>}\n */\nexport async function getEmployeeDashboardData(employeeId) {\n    try {\n        const employeeQuery = \"SELECT id as \\\"employeeId\\\", first_name || ' ' || last_name as name, position, department FROM employees WHERE id = $1\";\n        const announcementsQuery = \"SELECT id, title, content, to_char(posted_at, 'Month DD, YYYY') as date FROM announcements WHERE status = 'Published' ORDER BY posted_at DESC LIMIT 5\";\n        \n        const [employeeResult, announcementsResult] = await Promise.all([\n            query(employeeQuery, [employeeId]),\n            query(announcementsQuery)\n        ]);\n\n        return {\n            employee: employeeResult?.rows[0] || null,\n            announcements: announcementsResult?.rows || []\n        };\n    } catch (error) {\n        console.error(\"Database Error fetching employee dashboard data:\", error);\n        return { employee: null, announcements: [] };\n    }\n}\n\n/**\n * Fetches attendance data for a specific employee.\n * @param {string} employeeId - The ID of the employee.\n * @returns {Promise<{summary: object, records: object[]}>}\n */\nexport async function getAttendanceData(employeeId) {\n    const defaultData = { \n        summary: { daysAttended: 0, lates: 0, absences: 0, totalHours: 0, availableLeaves: 0 },\n        records: [] \n    };\n\n    try {\n        const attendanceQuery = `\n            SELECT \n                attendance_date, \n                to_char(time_in, 'HH24:MI') as \"time_in\", \n                to_char(time_out, 'HH24:MI') as \"time_out\", \n                status\n            FROM attendance\n            WHERE employee_id = $1 \n              AND attendance_date >= date_trunc('month', current_date)\n            ORDER BY attendance_date DESC;\n        `;\n        const leaveBalanceQuery = `\n            SELECT available_leaves FROM employees WHERE id = $1;\n        `;\n        \n        const [attendanceResult, leaveResult] = await Promise.all([\n            query(attendanceQuery, [employeeId]),\n            query(leaveBalanceQuery, [employeeId])\n        ]);\n\n        if (!attendanceResult || !leaveResult) {\n             return defaultData;\n        }\n\n        const records = attendanceResult.rows.map(r => ({\n            date: new Date(r.attendance_date).toLocaleDateString('en-US', { month: 'long', day: 'numeric', year: 'numeric'}),\n            timeIn: r.time_in,\n            timeOut: r.time_out,\n            status: r.status\n        }));\n        \n        let daysAttended = 0;\n        let lates = 0;\n        let absences = 0;\n        let totalHours = 0;\n\n        records.forEach(record => {\n            if (record.status === 'Present' || record.status === 'Late') {\n                daysAttended++;\n                totalHours += 8;\n            }\n            if (record.status === 'Late') {\n                lates++;\n            }\n        });\n        \n        const availableLeaves = leaveResult.rows.length > 0 ? leaveResult.rows[0].available_leaves : 0;\n        const summary = { daysAttended, lates, absences, totalHours, availableLeaves };\n\n        return { summary, records };\n    } catch (error) {\n        console.error(\"Database Error fetching attendance data:\", error);\n        return defaultData;\n    }\n}\n\n/**\n * Fetches past leave requests for a given employee.\n * @param {string} employeeId - The ID of the employee.\n * @returns {Promise<object[]>}\n */\nexport async function getPastLeaveRequests(employeeId) {\n    try {\n        const pastRequestsQuery = `\n            SELECT \n                id, \n                leave_type, \n                to_char(start_date, 'YYYY-MM-DD') as \"startDate\", \n                to_char(end_date, 'YYYY-MM-DD') as \"endDate\", \n                status \n            FROM leave_requests \n            WHERE employee_id = $1 \n            ORDER BY start_date DESC;\n        `;\n        const result = await query(pastRequestsQuery, [employeeId]);\n        return result ? result.rows : [];\n    } catch (error) {\n        console.error(\"Database error fetching leave requests:\", error);\n        return [];\n    }\n}\n\n/**\n * Creates a new leave request in the database.\n * @param {object} leaveRequest - The leave request data.\n * @returns {Promise<void>}\n */\nexport async function createLeaveRequest(leaveRequest) {\n    const { employeeId, leaveType, startDate, endDate, reason } = leaveRequest;\n    try {\n        const insertQuery = `\n            INSERT INTO leave_requests (employee_id, leave_type, start_date, end_date, reason)\n            VALUES ($1, $2, $3, $4, $5);\n        `;\n        await query(insertQuery, [employeeId, leaveType, startDate, endDate, reason]);\n    } catch (error) {\n        console.error(\"Database error creating leave request:\", error);\n        throw new Error(\"Failed to create leave request in database.\");\n    }\n}\n\n/**\n * Fetches the pay periods for the specified employee.\n * @param {string} employeeId - The ID of the employee.\n * @returns {Promise<object[]>} A promise that resolves to an array of pay periods.\n */\nexport async function getPayPeriods(employeeId) {\n    try {\n        const result = await query(\n            `SELECT \n                id,\n                period_start,\n                period_end,\n                to_char(pay_date, 'Month DD, YYYY') as \"payDate\",\n                earnings,\n                deductions,\n                net_pay\n             FROM payslips \n             WHERE employee_id = $1 \n             ORDER BY period_start DESC`,\n            [employeeId]\n        );\n        if (!result) return [];\n        const formattedPeriods = result.rows.map(p => ({\n            ...p,\n            period: `${new Date(p.period_start).toLocaleDateString()} - ${new Date(p.period_end).toLocaleDateString()}`\n        }));\n        return formattedPeriods;\n    } catch (error) {\n        console.error(\"Failed to fetch pay periods:\", error);\n        return [];\n    }\n}\n\n/**\n * Fetches the schedule for a given employee for the current week.\n * @param {string} employeeId The ID of the employee.\n * @returns {Promise<object[]>}\n */\nexport async function getSchedule(employeeId) {\n    try {\n        const scheduleQuery = `\n            SELECT schedule_data \n            FROM schedules\n            WHERE employee_id = $1 \n              AND week_start_date = date_trunc('week', current_date);\n        `;\n        const result = await query(scheduleQuery, [employeeId]);\n        if (result && result.rows.length > 0 && result.rows[0].schedule_data) {\n            return result.rows[0].schedule_data;\n        }\n        return [];\n    } catch (error) {\n        console.error(\"Database error fetching schedule:\", error);\n        return [];\n    }\n}\n\n/**\n * Fetches the details for a specific report.\n * In this mock version, it returns null.\n * @param {string} id - The ID of the report to fetch.\n * @returns {Promise<null>} A promise that resolves with null.\n */\nexport async function getReportDetails(id) {\n    try {\n        // In a real application, this would query the database.\n        // For now, we return null to simulate a report not being found\n        // which demonstrates the UI's handling of this case.\n        return null;\n    } catch (error) {\n        console.error(\"Database Error fetching report details:\", error);\n        return null;\n    }\n}\n"],"names":[],"mappings":";;;;;;IAyNsB,4BAAA,WAAA,GAAA,CAAA,GAAA,sNAAA,CAAA,wBAAA,EAAA,8CAAA,sNAAA,CAAA,aAAA,EAAA,KAAA,GAAA,sNAAA,CAAA,mBAAA,EAAA","debugId":null}},
    {"offset": {"line": 527, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/alert-dialog.jsx"],"sourcesContent":["/**\n * @fileoverview This file defines the AlertDialog component and its parts.\n * It is a modal dialog that interrupts the user with important content and\n * requires a response. It is built on top of the Radix UI Alert Dialog primitive.\n * @see https://www.radix-ui.com/primitives/docs/components/alert-dialog\n */\n\"use client\"\n\nimport * as React from \"react\"\nimport * as AlertDialogPrimitive from \"@radix-ui/react-alert-dialog\"\n\nimport { cn } from \"@/lib/utils\"\nimport { buttonVariants } from \"@/components/ui/button\"\n\n/**\n * The root component for an alert dialog.\n */\nconst AlertDialog = AlertDialogPrimitive.Root\n\n/**\n * The trigger that opens the alert dialog.\n */\nconst AlertDialogTrigger = AlertDialogPrimitive.Trigger\n\n/**\n * A portal that renders its children into a new stacking context.\n */\nconst AlertDialogPortal = AlertDialogPrimitive.Portal\n\n/**\n * A semi-transparent overlay that is rendered behind the dialog.\n */\nconst AlertDialogOverlay = React.forwardRef(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Overlay\n    className={cn(\n      \"fixed inset-0 z-50 bg-black/80  data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0\",\n      className\n    )}\n    {...props}\n    ref={ref}\n  />\n))\nAlertDialogOverlay.displayName = AlertDialogPrimitive.Overlay.displayName\n\n/**\n * The main content of the alert dialog.\n */\nconst AlertDialogContent = React.forwardRef(({ className, ...props }, ref) => (\n  <AlertDialogPortal>\n    <AlertDialogOverlay />\n    <AlertDialogPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"fixed left-[50%] top-[50%] z-50 grid w-full max-w-lg translate-x-[-50%] translate-y-[-50%] gap-4 border bg-background p-6 shadow-lg duration-200 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[state=closed]:slide-out-to-left-1/2 data-[state=closed]:slide-out-to-top-[48%] data-[state=open]:slide-in-from-left-1/2 data-[state=open]:slide-in-from-top-[48%] sm:rounded-lg\",\n        className\n      )}\n      {...props}\n    />\n  </AlertDialogPortal>\n))\nAlertDialogContent.displayName = AlertDialogPrimitive.Content.displayName\n\n/**\n * The header of the alert dialog, containing the title and description.\n */\nconst AlertDialogHeader = ({\n  className,\n  ...props\n}) => (\n  <div\n    className={cn(\n      \"flex flex-col space-y-2 text-center sm:text-left\",\n      className\n    )}\n    {...props}\n  />\n)\nAlertDialogHeader.displayName = \"AlertDialogHeader\"\n\n/**\n * The footer of the alert dialog, containing action buttons.\n */\nconst AlertDialogFooter = ({\n  className,\n  ...props\n}) => (\n  <div\n    className={cn(\n      \"flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2\",\n      className\n    )}\n    {...props}\n  />\n)\nAlertDialogFooter.displayName = \"AlertDialogFooter\"\n\n/**\n * The title of the alert dialog.\n */\nconst AlertDialogTitle = React.forwardRef(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Title\n    ref={ref}\n    className={cn(\"text-lg font-semibold\", className)}\n    {...props}\n  />\n))\nAlertDialogTitle.displayName = AlertDialogPrimitive.Title.displayName\n\n/**\n * The description of the alert dialog.\n */\nconst AlertDialogDescription = React.forwardRef(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Description\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nAlertDialogDescription.displayName =\n  AlertDialogPrimitive.Description.displayName\n\n/**\n * The action button that typically performs the primary action of the dialog.\n */\nconst AlertDialogAction = React.forwardRef(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Action\n    ref={ref}\n    className={cn(buttonVariants(), className)}\n    {...props}\n  />\n))\nAlertDialogAction.displayName = AlertDialogPrimitive.Action.displayName\n\n/**\n * The cancel button that closes the dialog.\n */\nconst AlertDialogCancel = React.forwardRef(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Cancel\n    ref={ref}\n    className={cn(\n      buttonVariants({ variant: \"outline\" }),\n      \"mt-2 sm:mt-0\",\n      className\n    )}\n    {...props}\n  />\n))\nAlertDialogCancel.displayName = AlertDialogPrimitive.Cancel.displayName\n\nexport {\n  AlertDialog,\n  AlertDialogPortal,\n  AlertDialogOverlay,\n  AlertDialogTrigger,\n  AlertDialogContent,\n  AlertDialogHeader,\n  AlertDialogFooter,\n  AlertDialogTitle,\n  AlertDialogDescription,\n  AlertDialogAction,\n  AlertDialogCancel,\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 681, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/scroll-area.jsx"],"sourcesContent":["/**\n * @fileoverview Defines the ScrollArea component.\n * A scroll area is a container that provides scrollbars when its content overflows.\n * It is built on top of the Radix UI Scroll Area primitive.\n * @see https://www.radix-ui.com/primitives/docs/components/scroll-area\n */\n\"use client\"\n\nimport * as React from \"react\"\nimport * as ScrollAreaPrimitive from \"@radix-ui/react-scroll-area\"\n\nimport { cn } from \"@/lib/utils\"\n\n/** The main component for a scrollable area. */\nconst ScrollArea = React.forwardRef(({ className, children, ...props }, ref) => (\n  <ScrollAreaPrimitive.Root\n    ref={ref}\n    className={cn(\"relative overflow-hidden\", className)}\n    {...props}\n  >\n    <ScrollAreaPrimitive.Viewport className=\"h-full w-full rounded-[inherit]\">\n      {children}\n    </ScrollAreaPrimitive.Viewport>\n    <ScrollBar />\n    <ScrollAreaPrimitive.Corner />\n  </ScrollAreaPrimitive.Root>\n))\nScrollArea.displayName = ScrollAreaPrimitive.Root.displayName\n\n/** The scrollbar component, which can be vertical or horizontal. */\nconst ScrollBar = React.forwardRef(({ className, orientation = \"vertical\", ...props }, ref) => (\n  <ScrollAreaPrimitive.ScrollAreaScrollbar\n    ref={ref}\n    orientation={orientation}\n    className={cn(\n      \"flex touch-none select-none transition-colors\",\n      orientation === \"vertical\" &&\n        \"h-full w-2.5 border-l border-l-transparent p-[1px]\",\n      orientation === \"horizontal\" &&\n        \"h-2.5 flex-col border-t border-t-transparent p-[1px]\",\n      className\n    )}\n    {...props}\n  >\n    <ScrollAreaPrimitive.ScrollAreaThumb className=\"relative flex-1 rounded-full bg-border\" />\n  </ScrollAreaPrimitive.ScrollAreaScrollbar>\n))\nScrollBar.displayName = ScrollAreaPrimitive.ScrollAreaScrollbar.displayName\n\nexport { ScrollArea, ScrollBar }\n"],"names":[],"mappings":"AAAA;;;;;CAKC;;;;;AAGD;AACA;AAEA;AALA;;;;;AAOA,8CAA8C,GAC9C,MAAM,2BAAa,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAAE,CAAC,EAAE,SAAS,EAAE,QAAQ,EAAE,GAAG,OAAO,EAAE,oBACtE,8OAAC,0KAAA,CAAA,OAAwB;QACvB,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,4BAA4B;QACzC,GAAG,KAAK;;0BAET,8OAAC,0KAAA,CAAA,WAA4B;gBAAC,WAAU;0BACrC;;;;;;0BAEH,8OAAC;;;;;0BACD,8OAAC,0KAAA,CAAA,SAA0B;;;;;;;;;;;AAG/B,WAAW,WAAW,GAAG,0KAAA,CAAA,OAAwB,CAAC,WAAW;AAE7D,kEAAkE,GAClE,MAAM,0BAAY,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAAE,CAAC,EAAE,SAAS,EAAE,cAAc,UAAU,EAAE,GAAG,OAAO,EAAE,oBACrF,8OAAC,0KAAA,CAAA,sBAAuC;QACtC,KAAK;QACL,aAAa;QACb,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,iDACA,gBAAgB,cACd,sDACF,gBAAgB,gBACd,wDACF;QAED,GAAG,KAAK;kBAET,cAAA,8OAAC,0KAAA,CAAA,kBAAmC;YAAC,WAAU;;;;;;;;;;;AAGnD,UAAU,WAAW,GAAG,0KAAA,CAAA,sBAAuC,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 754, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/hr/scheduling/page.jsx"],"sourcesContent":["/**\n * @fileoverview This file defines the Employee Scheduling page for the HR portal.\n * It provides a user interface for HR personnel to create and manage weekly\n * work schedules for employees, either manually or by uploading a file.\n */\n'use client';\nimport * as React from 'react';\nimport {\n  Card,\n  CardContent,\n  CardHeader,\n  CardTitle,\n  CardDescription,\n} from \"@/components/ui/card\";\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from \"@/components/ui/tabs\";\nimport { Button } from \"@/components/ui/button\";\nimport { Input } from \"@/components/ui/input\";\nimport { Label } from \"@/components/ui/label\";\nimport {\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TableHeader,\n  TableRow,\n} from \"@/components/ui/table\";\nimport {\n  Select,\n  SelectContent,\n  SelectItem,\n  SelectTrigger,\n  SelectValue,\n} from \"@/components/ui/select\";\nimport { UploadCloud, PlusCircle } from \"lucide-react\";\nimport { getEmployeesForScheduling } from \"@/lib/data\";\nimport {\n    AlertDialog,\n    AlertDialogAction,\n    AlertDialogCancel,\n    AlertDialogContent,\n    AlertDialogDescription,\n    AlertDialogFooter,\n    AlertDialogHeader,\n    AlertDialogTitle,\n    AlertDialogTrigger,\n} from \"@/components/ui/alert-dialog\";\nimport { ScrollArea } from '@/components/ui/scroll-area';\n\n\n/**\n * Renders the HR employee scheduling page.\n * Allows for manual creation of schedules or uploading from an Excel file.\n * @returns {JSX.Element} The scheduling page component.\n */\nexport default function SchedulingPage() {\n  const [scheduleData, setScheduleData] = React.useState([]);\n  const [allEmployees, setAllEmployees] = React.useState([]);\n\n  React.useEffect(() => {\n    async function fetchData() {\n      const initialSchedule = await getEmployeesForScheduling();\n      setScheduleData(initialSchedule);\n      // In a real app, you might want a different function to get *all* employees for the modal\n      setAllEmployees(initialSchedule); \n    }\n    fetchData();\n  }, []);\n\n  const addEmployeeToSchedule = (employee) => {\n    // Avoid adding duplicates\n    if (!scheduleData.find(e => e.id === employee.id)) {\n      setScheduleData(prevData => [...prevData, { ...employee, shift: '9:00 - 17:00' }]);\n    }\n  };\n\n  return (\n    <div className=\"space-y-6\">\n      <h1 className=\"text-3xl font-bold font-headline\">Employee Scheduling</h1>\n      <Tabs defaultValue=\"create-schedule\">\n        <TabsList className=\"grid w-full grid-cols-2\">\n          <TabsTrigger value=\"create-schedule\">Create Schedule</TabsTrigger>\n          <TabsTrigger value=\"upload-schedule\">Upload Excel</TabsTrigger>\n        </TabsList>\n        {/* Manual Schedule Creation Tab */}\n        <TabsContent value=\"create-schedule\">\n          <Card>\n            <CardHeader>\n              <CardTitle>Manual Schedule Creation</CardTitle>\n              <CardDescription>\n                Assign shifts to employees for the upcoming week.\n              </CardDescription>\n            </CardHeader>\n            <CardContent className=\"space-y-4\">\n              <div className=\"flex justify-between items-center\">\n                <div className=\"flex items-center gap-2\">\n                    <Label htmlFor=\"week-select\">Week of:</Label>\n                    {/* Dropdown to select the week for scheduling */}\n                    <Select defaultValue=\"aug-19\">\n                        <SelectTrigger id=\"week-select\" className=\"w-[200px]\">\n                            <SelectValue />\n                        </SelectTrigger>\n                        <SelectContent>\n                            <SelectItem value=\"aug-19\">Aug 19 - Aug 25</SelectItem>\n                            <SelectItem value=\"aug-26\">Aug 26 - Sep 1</SelectItem>\n                        </SelectContent>\n                    </Select>\n                </div>\n                <AlertDialog>\n                    <AlertDialogTrigger asChild>\n                        <Button><PlusCircle /> Schedule Employee</Button>\n                    </AlertDialogTrigger>\n                    <AlertDialogContent className=\"sm:max-w-[600px]\">\n                        <AlertDialogHeader>\n                            <AlertDialogTitle>Add Employee to Schedule</AlertDialogTitle>\n                            <AlertDialogDescription>\n                                Find and select an employee to add to the current week's schedule.\n                            </AlertDialogDescription>\n                        </AlertDialogHeader>\n                        <div className=\"grid grid-cols-1 sm:grid-cols-3 gap-4 py-4\">\n                             <Select>\n                                <SelectTrigger><SelectValue placeholder=\"Select Branch\" /></SelectTrigger>\n                                <SelectContent>\n                                    <SelectItem value=\"hq\">Headquarters</SelectItem>\n                                    <SelectItem value=\"downtown\">Downtown Office</SelectItem>\n                                    <SelectItem value=\"remote\">Remote</SelectItem>\n                                </SelectContent>\n                            </Select>\n                            <Select>\n                                <SelectTrigger><SelectValue placeholder=\"Select Department\" /></SelectTrigger>\n                                <SelectContent>\n                                    <SelectItem value=\"tech\">Technology</SelectItem>\n                                    <SelectItem value=\"mgmt\">Management</SelectItem>\n                                </SelectContent>\n                            </Select>\n                            <Select>\n                                <SelectTrigger><SelectValue placeholder=\"Select Position\" /></SelectTrigger>\n                                <SelectContent>\n                                    <SelectItem value=\"swe\">Software Engineer</SelectItem>\n                                    <SelectItem value=\"pm\">Project Manager</SelectItem>\n                                </SelectContent>\n                            </Select>\n                        </div>\n                        <ScrollArea className=\"h-48 border rounded-md\">\n                           <Table>\n                                {allEmployees.map(emp => (\n                                    <TableRow key={emp.id} className=\"cursor-pointer hover:bg-muted\" onClick={() => addEmployeeToSchedule(emp)}>\n                                        <TableCell>{emp.name}</TableCell>\n                                    </TableRow>\n                                ))}\n                           </Table>\n                        </ScrollArea>\n                        <AlertDialogFooter>\n                            <AlertDialogCancel>Close</AlertDialogCancel>\n                        </AlertDialogFooter>\n                    </AlertDialogContent>\n                </AlertDialog>\n              </div>\n              {scheduleData.length > 0 ? (\n                <>\n                  <Table>\n                    <TableHeader>\n                      <TableRow>\n                        <TableHead>Employee Name</TableHead>\n                        <TableHead>Mon</TableHead>\n                        <TableHead>Tue</TableHead>\n                        <TableHead>Wed</TableHead>\n                        <TableHead>Thu</TableHead>\n                        <TableHead>Fri</TableHead>\n                        <TableHead>Sat</TableHead>\n                        <TableHead>Sun</TableHead>\n                      </TableRow>\n                    </TableHeader>\n                    <TableBody>\n                      {scheduleData.map((emp) => (\n                        <TableRow key={emp.id}>\n                          <TableCell className=\"font-medium\">{emp.name}</TableCell>\n                          {/* Generates input fields for each day of the week */}\n                          {[...Array(5)].map((_, i) => (\n                            <TableCell key={i}>\n                              <Input\n                                className=\"h-8 text-xs\"\n                                defaultValue={emp.shift}\n                              />\n                            </TableCell>\n                          ))}\n                          {[...Array(2)].map((_, i) => (\n                            <TableCell key={i}>\n                              <Input\n                                className=\"h-8 text-xs bg-muted\"\n                                defaultValue=\"OFF\"\n                                readOnly\n                              />\n                            </TableCell>\n                          ))}\n                        </TableRow>\n                      ))}\n                    </TableBody>\n                  </Table>\n                  <div className=\"flex justify-end gap-2 pt-4\">\n                    <Button variant=\"outline\">Save as Draft</Button>\n                    <Button>Publish Schedule</Button>\n                  </div>\n                </>\n              ) : (\n                <p className=\"text-muted-foreground text-center pt-4\">No employees added to the schedule yet.</p>\n              )}\n            </CardContent>\n          </Card>\n        </TabsContent>\n        {/* Upload Schedule Tab */}\n        <TabsContent value=\"upload-schedule\">\n          <Card>\n            <CardHeader>\n              <CardTitle>Upload Schedule from Excel</CardTitle>\n              <CardDescription>\n                Use a template to upload the weekly schedule in bulk.\n              </CardDescription>\n            </CardHeader>\n            <CardContent className=\"space-y-4 text-center\">\n              {/* Dropzone for uploading an Excel file */}\n              <div className=\"mx-auto flex justify-center items-center h-48 w-full border-2 border-dashed rounded-lg\">\n                <div className=\"text-center\">\n                  <UploadCloud className=\"mx-auto h-12 w-12 text-muted-foreground\" />\n                  <p className=\"mt-2 text-sm text-muted-foreground\">\n                    Drag and drop your file here, or click to select a file.\n                  </p>\n                  <p className=\"text-xs text-muted-foreground\">XLS, XLSX up to 10MB</p>\n                </div>\n              </div>\n              <div className=\"flex justify-center gap-4\">\n                <Button variant=\"outline\">Download Template</Button>\n                <Button>Upload File</Button>\n              </div>\n            </CardContent>\n          </Card>\n        </TabsContent>\n      </Tabs>\n    </div>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}}]
}