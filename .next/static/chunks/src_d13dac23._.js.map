{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/card.tsx"],"sourcesContent":["/**\n * @fileoverview Defines the Card component and its parts.\n * A card is a flexible and extensible content container. It includes options for\n * headers, footers, titles, descriptions, and content.\n */\nimport * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\n/**\n * The main container for the card component.\n */\nconst Card = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"rounded-lg border bg-card text-card-foreground shadow-sm\",\n      className\n    )}\n    {...props}\n  />\n))\nCard.displayName = \"Card\"\n\n/**\n * The header section of the card. Typically contains the title and description.\n */\nconst CardHeader = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex flex-col space-y-1.5 p-6\", className)}\n    {...props}\n  />\n))\nCardHeader.displayName = \"CardHeader\"\n\n/**\n * The title of the card. Should be placed inside a CardHeader.\n */\nconst CardTitle = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLHeadingElement>\n>(({ className, ...props }, ref) => (\n  <h3\n    ref={ref}\n    className={cn(\n      \"text-2xl font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nCardTitle.displayName = \"CardTitle\"\n\n/**\n * A description for the card. Should be placed inside a CardHeader.\n */\nconst CardDescription = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, ...props }, ref) => (\n  <p\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nCardDescription.displayName = \"CardDescription\"\n\n/**\n * The main content area of the card.\n */\nconst CardContent = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn(\"p-6 pt-0\", className)} {...props} />\n))\nCardContent.displayName = \"CardContent\"\n\n/**\n_The footer section of the card.\n*/\nconst CardFooter = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex items-center p-6 pt-0\", className)}\n    {...props}\n  />\n))\nCardFooter.displayName = \"CardFooter\"\n\nexport { Card, CardHeader, CardFooter, CardTitle, CardDescription, CardContent }\n"],"names":[],"mappings":"AAAA;;;;CAIC;;;;;;;;;AACD;AAEA;;;;AAEA;;CAEC,GACD,MAAM,qBAAO,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,OAG1B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,4DACA;QAED,GAAG,KAAK;;;;;;;AAGb,KAAK,WAAW,GAAG;AAEnB;;CAEC,GACD,MAAM,2BAAa,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;;AAGb,WAAW,WAAW,GAAG;AAEzB;;CAEC,GACD,MAAM,0BAAY,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAG/B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,sDACA;QAED,GAAG,KAAK;;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB;;CAEC,GACD,MAAM,gCAAkB,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGrC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;;AAGb,gBAAgB,WAAW,GAAG;AAE9B;;CAEC,GACD,MAAM,4BAAc,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QAAI,KAAK;QAAK,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,YAAY;QAAa,GAAG,KAAK;;;;;;;AAEhE,YAAY,WAAW,GAAG;AAE1B;;AAEA,GACA,MAAM,2BAAa,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,SAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,8BAA8B;QAC3C,GAAG,KAAK;;;;;;;AAGb,WAAW,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 126, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/select.tsx"],"sourcesContent":["/**\n * @fileoverview Defines the Select component and its parts.\n * A select component allows the user to choose one option from a list.\n * It is built on top of the Radix UI Select primitive.\n * @see https://www.radix-ui.com/primitives/docs/components/select\n */\n\"use client\"\n\nimport * as React from \"react\"\nimport * as SelectPrimitive from \"@radix-ui/react-select\"\nimport { Check, ChevronDown, ChevronUp } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\n/** The root component for a select dropdown. */\nconst Select = SelectPrimitive.Root\n\n/** A group of related options in a select dropdown. */\nconst SelectGroup = SelectPrimitive.Group\n\n/** The part of the select that displays the currently selected value. */\nconst SelectValue = SelectPrimitive.Value\n\n/** The trigger that opens the select dropdown. */\nconst SelectTrigger = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Trigger>\n>(({ className, children, ...props }, ref) => (\n  <SelectPrimitive.Trigger\n    ref={ref}\n    className={cn(\n      \"flex h-10 w-full items-center justify-between rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background placeholder:text-muted-foreground focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 [&>span]:line-clamp-1\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <SelectPrimitive.Icon asChild>\n      <ChevronDown className=\"h-4 w-4 opacity-50\" />\n    </SelectPrimitive.Icon>\n  </SelectPrimitive.Trigger>\n))\nSelectTrigger.displayName = SelectPrimitive.Trigger.displayName\n\n/** The button to scroll up in the select content. */\nconst SelectScrollUpButton = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.ScrollUpButton>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollUpButton>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.ScrollUpButton\n    ref={ref}\n    className={cn(\n      \"flex cursor-default items-center justify-center py-1\",\n      className\n    )}\n    {...props}\n  >\n    <ChevronUp className=\"h-4 w-4\" />\n  </SelectPrimitive.ScrollUpButton>\n))\nSelectScrollUpButton.displayName = SelectPrimitive.ScrollUpButton.displayName\n\n/** The button to scroll down in the select content. */\nconst SelectScrollDownButton = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.ScrollDownButton>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollDownButton>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.ScrollDownButton\n    ref={ref}\n    className={cn(\n      \"flex cursor-default items-center justify-center py-1\",\n      className\n    )}\n    {...props}\n  >\n    <ChevronDown className=\"h-4 w-4\" />\n  </SelectPrimitive.ScrollDownButton>\n))\nSelectScrollDownButton.displayName =\n  SelectPrimitive.ScrollDownButton.displayName\n\n/** The content of the select dropdown, containing the list of options. */\nconst SelectContent = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Content>\n>(({ className, children, position = \"popper\", ...props }, ref) => (\n  <SelectPrimitive.Portal>\n    <SelectPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"relative z-50 max-h-96 min-w-[8rem] overflow-hidden rounded-md border bg-popover text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2\",\n        position === \"popper\" &&\n          \"data-[side=bottom]:translate-y-1 data-[side=left]:-translate-x-1 data-[side=right]:translate-x-1 data-[side=top]:-translate-y-1\",\n        className\n      )}\n      position={position}\n      {...props}\n    >\n      <SelectScrollUpButton />\n      <SelectPrimitive.Viewport\n        className={cn(\n          \"p-1\",\n          position === \"popper\" &&\n            \"h-[var(--radix-select-trigger-height)] w-full min-w-[var(--radix-select-trigger-width)]\"\n        )}\n      >\n        {children}\n      </SelectPrimitive.Viewport>\n      <SelectScrollDownButton />\n    </SelectPrimitive.Content>\n  </SelectPrimitive.Portal>\n))\nSelectContent.displayName = SelectPrimitive.Content.displayName\n\n/** A label for a group of options in the select dropdown. */\nconst SelectLabel = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Label>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.Label\n    ref={ref}\n    className={cn(\"py-1.5 pl-8 pr-2 text-sm font-semibold\", className)}\n    {...props}\n  />\n))\nSelectLabel.displayName = SelectPrimitive.Label.displayName\n\n/** An individual option in the select dropdown. */\nconst SelectItem = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Item>\n>(({ className, children, ...props }, ref) => (\n  <SelectPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex w-full cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <SelectPrimitive.ItemIndicator>\n        <Check className=\"h-4 w-4\" />\n      </SelectPrimitive.ItemIndicator>\n    </span>\n\n    <SelectPrimitive.ItemText>{children}</SelectPrimitive.ItemText>\n  </SelectPrimitive.Item>\n))\nSelectItem.displayName = SelectPrimitive.Item.displayName\n\n/** A separator between groups of options in the select dropdown. */\nconst SelectSeparator = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 my-1 h-px bg-muted\", className)}\n    {...props}\n  />\n))\nSelectSeparator.displayName = SelectPrimitive.Separator.displayName\n\nexport {\n  Select,\n  SelectGroup,\n  SelectValue,\n  SelectTrigger,\n  SelectContent,\n  SelectLabel,\n  SelectItem,\n  SelectSeparator,\n  SelectScrollUpButton,\n  SelectScrollDownButton,\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 346, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/dashboard/payslip/page.tsx"],"sourcesContent":["/**\n * @fileoverview This file defines the Payslip page for the employee dashboard.\n * It allows an employee to view their detailed payslip for a selected period,\n * including earnings, deductions, and net pay.\n */\n'use client';\n\nimport * as React from 'react';\nimport {\n  Card,\n  CardContent,\n  CardHeader,\n  CardTitle,\n  CardDescription,\n  CardFooter,\n} from \"@/components/ui/card\";\nimport {\n  Select,\n  SelectContent,\n  SelectItem,\n  SelectTrigger,\n  SelectValue,\n} from \"@/components/ui/select\";\nimport { Button } from \"@/components/ui/button\";\nimport { Separator } from \"@/components/ui/separator\";\nimport { FileDown, Building2 } from \"lucide-react\";\n\n// --- DATABASE INTEGRATION POINT ---\n// In a real application, this data would be fetched from a database\n// based on the selected period and the logged-in employee.\nconst mockPayslipDatabase: { [key: string]: any } = {\n  'aug-1-2024': {\n      id: 'aug-1-2024',\n      period: 'Aug 1-15, 2024',\n      payDate: 'August 20, 2024',\n      earnings: [\n          { name: 'Basic Pay', amount: 20000.00 },\n          { name: 'Overtime Pay (5 hrs)', amount: 1500.00 },\n          { name: 'Holiday Pay', amount: 1000.00 },\n      ],\n      deductions: [\n          { name: 'Income Tax', amount: 2500.00 },\n          { name: 'SSS Contribution', amount: 800.00 },\n          { name: 'Pag-IBIG Contribution', amount: 200.00 },\n          { name: 'Company Loan', amount: 1000.00 },\n      ]\n  },\n  'jul-2-2024': {\n      id: 'jul-2-2024',\n      period: 'Jul 16-31, 2024',\n      payDate: 'August 5, 2024',\n      earnings: [\n          { name: 'Basic Pay', amount: 20000.00 },\n          { name: 'Performance Bonus', amount: 5000.00 },\n      ],\n      deductions: [\n          { name: 'Income Tax', amount: 2800.00 },\n          { name: 'SSS Contribution', amount: 800.00 },\n          { name: 'Pag-IBIG Contribution', amount: 200.00 },\n          { name: 'Company Loan', amount: 1000.00 },\n      ]\n  },\n  'jul-1-2024': {\n      id: 'jul-1-2024',\n      period: 'Jul 1-15, 2024',\n      payDate: 'July 20, 2024',\n      earnings: [\n          { name: 'Basic Pay', amount: 20000.00 },\n          { name: 'Allowance', amount: 2000.00 },\n      ],\n      deductions: [\n          { name: 'Income Tax', amount: 2200.00 },\n          { name: 'SSS Contribution', amount: 800.00 },\n          { name: 'Pag-IBIG Contribution', amount: 200.00 },\n          { name: 'Company Loan', amount: 1000.00 },\n      ]\n  }\n};\n\n\n/**\n * Renders the employee's payslip page.\n * Allows viewing and downloading payslips for different periods.\n * @returns {JSX.Element} The payslip page component.\n */\nexport default function PayslipPage() {\n  const [selectedPeriod, setSelectedPeriod] = React.useState('aug-1-2024');\n  \n  const payslipData = mockPayslipDatabase[selectedPeriod];\n\n  // Calculate totals from payslip data if it exists.\n  const totalEarnings = payslipData?.earnings.reduce((sum: number, item: { amount: number }) => sum + item.amount, 0) ?? 0;\n  const totalDeductions = payslipData?.deductions.reduce((sum: number, item: { amount: number }) => sum + item.amount, 0) ?? 0;\n  const netPay = totalEarnings - totalDeductions;\n\n  return (\n    <div className=\"space-y-6 max-w-4xl mx-auto\">\n      {/* Page Header and Period Selector */}\n      <div className=\"flex flex-col sm:flex-row justify-between items-start sm:items-center gap-4\">\n        <div>\n          <h1 className=\"text-3xl font-bold font-headline\">My Payslip</h1>\n          <p className=\"text-muted-foreground\">View and download your payslips.</p>\n        </div>\n        <div className=\"flex gap-2 w-full sm:w-auto\">\n          {/* A dropdown to select the pay period */}\n          <Select value={selectedPeriod} onValueChange={setSelectedPeriod}>\n            <SelectTrigger className=\"w-full sm:w-[200px]\">\n              <SelectValue placeholder=\"Select Period\" />\n            </SelectTrigger>\n            <SelectContent>\n              {/* In a real app, these items would be generated dynamically */}\n              <SelectItem value=\"aug-1-2024\">Aug 1-15, 2024</SelectItem>\n              <SelectItem value=\"jul-2-2024\">Jul 16-31, 2024</SelectItem>\n              <SelectItem value=\"jul-1-2024\">Jul 1-15, 2024</SelectItem>\n            </SelectContent>\n          </Select>\n          <Button disabled={!payslipData}>\n            <FileDown />\n            PDF\n          </Button>\n        </div>\n      </div>\n\n      {/* Payslip Details Card */}\n      <Card className=\"overflow-hidden\">\n        <CardHeader className=\"bg-muted/30 p-6\">\n          <div className=\"flex justify-between items-center\">\n            <div>\n                <div className=\"flex items-center gap-2\">\n                    <Building2 />\n                    <h2 className=\"text-2xl font-bold font-headline\">Company Name Inc.</h2>\n                </div>\n                <p className=\"text-muted-foreground\">{payslipData ? `Payslip for ${payslipData.period}` : 'Select a period to view payslip'}</p>\n            </div>\n            {payslipData && (\n              <div className=\"text-right\">\n                  <p className=\"text-sm text-muted-foreground\">Pay Date</p>\n                  <p className=\"font-semibold\">{payslipData.payDate}</p>\n              </div>\n            )}\n          </div>\n        </CardHeader>\n        {payslipData ? (\n          <>\n            <CardContent className=\"p-6\">\n                <div className=\"grid md:grid-cols-2 gap-8\">\n                    {/* Earnings Section: Lists all income sources for the period. */}\n                    <div>\n                        <h3 className=\"font-semibold text-lg mb-4 text-green-600\">Earnings</h3>\n                        <ul className=\"space-y-2\">\n                        {payslipData.earnings.map((item: { name: string; amount: number }) => (\n                            <li key={item.name} className=\"flex justify-between items-center text-sm\">\n                                <span>{item.name}</span>\n                                <span className=\"font-mono\">₱{item.amount.toFixed(2)}</span>\n                            </li>\n                        ))}\n                        </ul>\n                        <Separator className=\"my-4\"/>\n                        <div className=\"flex justify-between items-center font-semibold\">\n                            <span>Gross Earnings</span>\n                            <span className=\"font-mono\">₱{totalEarnings.toFixed(2)}</span>\n                        </div>\n                    </div>\n                    {/* Deductions Section: Lists all deductions for the period. */}\n                    <div>\n                        <h3 className=\"font-semibold text-lg mb-4 text-red-600\">Deductions</h3>\n                        <ul className=\"space-y-2\">\n                        {payslipData.deductions.map((item: { name: string; amount: number }) => (\n                            <li key={item.name} className=\"flex justify-between items-center text-sm\">\n                                <span>{item.name}</span>\n                                <span className=\"font-mono\">(₱{item.amount.toFixed(2)})</span>\n                            </li>\n                        ))}\n                        </ul>\n                        <Separator className=\"my-4\"/>\n                        <div className=\"flex justify-between items-center font-semibold\">\n                            <span>Total Deductions</span>\n                            <span className=\"font-mono\">(₱{totalDeductions.toFixed(2)})</span>\n                        </div>\n                    </div>\n                </div>\n            </CardContent>\n            <CardFooter className=\"bg-muted/30 p-6\">\n                {/* Net Pay Section: The final take-home pay. */}\n                <div className=\"w-full flex justify-between items-center\">\n                    <span className=\"text-xl font-bold font-headline\">Net Pay</span>\n                    <span className=\"text-2xl font-bold font-headline text-primary\">₱{netPay.toFixed(2)}</span>\n                </div>\n            </CardFooter>\n          </>\n        ) : (\n          <CardContent className=\"p-6 text-center text-muted-foreground\">\n            No payslip data available for the selected period.\n          </CardContent>\n        )}\n      </Card>\n    </div>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}}]
}