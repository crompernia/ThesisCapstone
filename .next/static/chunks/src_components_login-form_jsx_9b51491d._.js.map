{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/login-form.jsx"],"sourcesContent":["\n\"use client\";\n\nimport * as React from \"react\";\nimport { useRouter } from \"next/navigation\";\nimport { Camera, Loader2, Compass, Check, X, UserSquare } from \"lucide-react\";\nimport { z } from \"zod\";\nimport { zodResolver } from \"@hookform/resolvers/zod\";\nimport { useForm } from \"react-hook-form\";\n\nimport { Button } from \"@/components/ui/button\";\nimport {\n  Form,\n  FormControl,\n  FormField,\n  FormItem,\n  FormLabel,\n  FormMessage,\n} from \"@/components/ui/form\";\nimport { Input } from \"@/components/ui/input\";\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from \"@/components/ui/tabs\";\nimport { Card, CardContent } from \"@/components/ui/card\";\nimport { useToast } from \"@/hooks/use-toast\";\nimport {\n  AlertDialog,\n  AlertDialogContent,\n  AlertDialogHeader,\n  AlertDialogTitle,\n  AlertDialogDescription,\n  AlertDialogFooter,\n} from \"@/components/ui/alert-dialog\";\nimport { Alert, AlertTitle, AlertDescription } from \"@/components/ui/alert\";\n\n// Schema for employee login form validation.\nconst employeeFormSchema = z.object({\n  employeeId: z.string().min(1, \"Employee ID is required\"),\n  password: z.string().min(1, \"Password is required\"),\n});\n\n// Schema for HR login form validation.\nconst hrFormSchema = z.object({\n  email: z.string().email(\"Invalid email address\"),\n  password: z.string().min(1, \"Password is required\"),\n});\n\n// Schema for Admin login form validation.\nconst adminFormSchema = z.object({\n  email: z.string().email(\"Invalid email address\"),\n  password: z.string().min(1, \"Password is required\"),\n});\n\n/**\n * Renders a login form with tabs for \"Employee\", \"HR Admin\", and \"Admin\".\n * Handles form submission, validation, and different login methods including geofenced clock-in.\n * @returns {JSX.Element} The login form component.\n */\nexport function LoginForm() {\n  const router = useRouter();\n  const { toast } = useToast();\n  const [clockInStatus, setClockInStatus] = React.useState(\"idle\");\n  const [clockInError, setClockInError] = React.useState(null);\n  const [isLoading, setIsLoading] = React.useState(false);\n  const [hasCameraPermission, setHasCameraPermission] = React.useState(false);\n\n  const videoRef = React.useRef(null);\n  const canvasRef = React.useRef(null);\n\n  // Form hook for employee login.\n  const employeeForm = useForm({\n    resolver: zodResolver(employeeFormSchema),\n    defaultValues: { employeeId: \"\", password: \"\" },\n  });\n\n  // Form hook for HR login.\n  const hrForm = useForm({\n    resolver: zodResolver(hrFormSchema),\n    defaultValues: { email: \"\", password: \"\" },\n  });\n\n  // Form hook for Admin login.\n  const adminForm = useForm({\n    resolver: zodResolver(adminFormSchema),\n    defaultValues: { email: \"\", password: \"\" },\n  });\n  \n  /**\n   * Request camera permission and start video stream.\n   */\n  React.useEffect(() => {\n    async function getCameraPermission() {\n        if (clockInStatus !== 'capturing_face') return;\n\n        try {\n            const stream = await navigator.mediaDevices.getUserMedia({ video: true });\n            if (videoRef.current) {\n                videoRef.current.srcObject = stream;\n            }\n            setHasCameraPermission(true);\n        } catch (error) {\n            console.error(\"Error accessing camera:\", error);\n            setHasCameraPermission(false);\n            setClockInError(\"Camera access denied. Please enable camera permissions.\");\n            setClockInStatus(\"error\");\n        }\n    }\n    getCameraPermission();\n\n    // Cleanup function to stop video stream\n    return () => {\n        if (videoRef.current && videoRef.current.srcObject) {\n            const stream = videoRef.current.srcObject;\n            stream.getTracks().forEach(track => track.stop());\n        }\n    };\n  }, [clockInStatus]);\n\n  /**\n   * Handles the geofenced clock-in process.\n   * Gets user's location and simulates verification.\n   */\n  const handleClockIn = async () => {\n    setClockInStatus(\"getting_location\");\n    setClockInError(null);\n\n    if (!navigator.geolocation) {\n        setClockInError(\"Geolocation is not supported by your browser.\");\n        setClockInStatus(\"error\");\n        return;\n    }\n\n    navigator.geolocation.getCurrentPosition(\n        async (position) => {\n            setClockInStatus(\"verifying_location\");\n\n            // Simulating server verification delay\n            await new Promise(resolve => setTimeout(resolve, 1500));\n            const isWithinGeofence = true; // Simulate a successful check\n\n            if (isWithinGeofence) {\n                setClockInStatus(\"capturing_face\");\n            } else {\n                setClockInError(\"You are not within the allowed geofence for clock-in.\");\n                setClockInStatus(\"error\");\n            }\n        },\n        (error) => {\n            let message = \"An unknown error occurred while getting your location.\";\n            if (error.code === error.PERMISSION_DENIED) {\n                message = \"Location access denied. Please enable location permissions to clock in.\";\n            } else if (error.code === error.POSITION_UNAVAILABLE) {\n                message = \"Your location information is currently unavailable.\";\n            }\n            setClockInError(message);\n            setClockInStatus(\"error\");\n        }\n    );\n  };\n  \n  /**\n   * Captures a photo from the video stream and proceeds with verification.\n   */\n  const handleCaptureAndVerify = async () => {\n    if (videoRef.current && canvasRef.current) {\n        setClockInStatus(\"verifying_face\");\n        const video = videoRef.current;\n        const canvas = canvasRef.current;\n        canvas.width = video.videoWidth;\n        canvas.height = video.videoHeight;\n        const context = canvas.getContext('2d');\n        context?.drawImage(video, 0, 0, video.videoWidth, video.videoHeight);\n        \n        const photoDataUri = canvas.toDataURL('image/jpeg');\n\n        // within the application, you would send this `photoDataUri` to your server\n        // for facial recognition against the employee's stored photo.\n        \n        // Simulating server verification delay\n        await new Promise(resolve => setTimeout(resolve, 2000));\n        const isFaceVerified = true; // Simulate successful verification\n\n        if (isFaceVerified) {\n             setClockInStatus(\"success\");\n             toast({\n                title: \"Clock-In Successful\",\n                description: \"Your attendance and identity have been verified.\",\n            });\n            await new Promise(resolve => setTimeout(resolve, 1500));\n            router.push(\"/dashboard\");\n        } else {\n            setClockInError(\"Facial recognition failed. Please try again.\");\n            setClockInStatus(\"error\");\n        }\n    }\n  };\n\n  /**\n   * Handles standard employee login.\n   * Simulates an API call and navigates to the dashboard on success.\n   */\n  const handleStandardLogin = async () => {\n    setIsLoading(true);\n    await new Promise((resolve) => setTimeout(resolve, 1000));\n    setIsLoading(false);\n    router.push(\"/dashboard\");\n  }\n\n  /**\n   * Handles HR admin login.\n   * Simulates an API call and navigates to the HR dashboard on success.\n   */\n  const handleHrLogin = async () => {\n    setIsLoading(true);\n    await new Promise((resolve) => setTimeout(resolve, 1000));\n    setIsLoading(false);\n    router.push(\"/hr/dashboard\");\n  }\n\n  /**\n   * Handles admin login.\n   * Simulates an API call and navigates to the admin dashboard on success.\n   */\n  const handleAdminLogin = async () => {\n    setIsLoading(true);\n    await new Promise((resolve) => setTimeout(resolve, 1000));\n    setIsLoading(false);\n    router.push(\"/admin/dashboard\");\n  }\n  \n  const isClockingIn = clockInStatus !== \"idle\" && clockInStatus !== \"success\";\n\n  const closeDialog = () => {\n    setClockInStatus(\"idle\");\n    setClockInError(null);\n  }\n\n  return (\n    <>\n      <Tabs defaultValue=\"employee\" className=\"w-full\">\n        <TabsList className=\"grid w-full grid-cols-3\">\n          <TabsTrigger value=\"employee\">Employee</TabsTrigger>\n          <TabsTrigger value=\"hr\">HR Admin</TabsTrigger>\n          <TabsTrigger value=\"admin\">Admin</TabsTrigger>\n        </TabsList>\n        {/* Employee Login Tab */}\n        <TabsContent value=\"employee\">\n          <Card>\n            <CardContent className=\"p-6\">\n              <Form {...employeeForm}>\n                <form onSubmit={employeeForm.handleSubmit(handleStandardLogin)} className=\"space-y-4\">\n                  <FormField\n                    control={employeeForm.control}\n                    name=\"employeeId\"\n                    render={({ field }) => (\n                      <FormItem>\n                        <FormLabel>Employee ID</FormLabel>\n                        <FormControl>\n                          <Input placeholder=\"e.g., 10023\" {...field} disabled={isClockingIn} />\n                        </FormControl>\n                        <FormMessage />\n                      </FormItem>\n                    )}\n                  />\n                  <FormField\n                    control={employeeForm.control}\n                    name=\"password\"\n                    render={({ field }) => (\n                      <FormItem>\n                        <FormLabel>Password</FormLabel>\n                        <FormControl>\n                          <Input type=\"password\" placeholder=\"••••••••\" {...field} disabled={isClockingIn}/>\n                        </FormControl>\n                        <FormMessage />\n                      </FormItem>\n                    )}\n                  />\n                  <div className=\"space-y-2 pt-2\">\n                     <Button onClick={handleClockIn} type=\"button\" className=\"w-full\" size=\"lg\" disabled={isClockingIn}>\n                        {isClockingIn ? <Loader2 className=\"mr-2 h-4 w-4 animate-spin\" /> : <Camera className=\"mr-2 h-4 w-4\" />}\n                        Clock In (Geofenced)\n                    </Button>\n                    <Button type=\"submit\" variant=\"outline\" className=\"w-full\" disabled={isLoading || isClockingIn}>\n                      {isLoading && <Loader2 className=\"mr-2 h-4 w-4 animate-spin\" />}\n                      Standard Login\n                    </Button>\n                  </div>\n                </form>\n              </Form>\n            </CardContent>\n          </Card>\n        </TabsContent>\n        {/* HR Admin Login Tab */}\n        <TabsContent value=\"hr\">\n          <Card>\n            <CardContent className=\"p-6\">\n              <Form {...hrForm}>\n                <form onSubmit={hrForm.handleSubmit(handleHrLogin)} className=\"space-y-4\">\n                  <FormField\n                    control={hrForm.control}\n                    name=\"email\"\n                    render={({ field }) => (\n                      <FormItem>\n                        <FormLabel>Email</FormLabel>\n                        <FormControl>\n                          <Input placeholder=\"hr@example.com\" {...field} />\n                        </FormControl>\n                        <FormMessage />\n                      </FormItem>\n                    )}\n                  />\n                  <FormField\n                    control={hrForm.control}\n                    name=\"password\"\n                    render={({ field }) => (\n                      <FormItem>\n                        <FormLabel>Password</FormLabel>\n                        <FormControl>\n                          <Input type=\"password\" placeholder=\"••••••••\" {...field} />\n                        </FormControl>\n                        <FormMessage />\n                      </FormItem>\n                    )}\n                  />\n                  <div className=\"pt-2\">\n                    <Button type=\"submit\" className=\"w-full\" size=\"lg\" disabled={isLoading}>\n                      {isLoading && <Loader2 className=\"mr-2 h-4 w-4 animate-spin\" />}\n                      Login to HR Portal\n                    </Button>\n                  </div>\n                </form>\n              </Form>\n            </CardContent>\n          </Card>\n        </TabsContent>\n        {/* Admin Login Tab */}\n        <TabsContent value=\"admin\">\n          <Card>\n            <CardContent className=\"p-6\">\n              <Form {...adminForm}>\n                <form onSubmit={adminForm.handleSubmit(handleAdminLogin)} className=\"space-y-4\">\n                  <FormField\n                    control={adminForm.control}\n                    name=\"email\"\n                    render={({ field }) => (\n                      <FormItem>\n                        <FormLabel>Email</FormLabel>\n                        <FormControl>\n                          <Input placeholder=\"admin@example.com\" {...field} />\n                        </FormControl>\n                        <FormMessage />\n                      </FormItem>\n                    )}\n                  />\n                  <FormField\n                    control={adminForm.control}\n                    name=\"password\"\n                    render={({ field }) => (\n                      <FormItem>\n                        <FormLabel>Password</FormLabel>\n                        <FormControl>\n                          <Input type=\"password\" placeholder=\"••••••••\" {...field} />\n                        </FormControl>\n                        <FormMessage />\n                      </FormItem>\n                    )}\n                  />\n                  <div className=\"pt-2\">\n                    <Button type=\"submit\" className=\"w-full\" size=\"lg\" disabled={isLoading}>\n                      {isLoading && <Loader2 className=\"mr-2 h-4 w-4 animate-spin\" />}\n                      Login to Admin Portal\n                    </Button>\n                  </div>\n                </form>\n              </Form>\n            </CardContent>\n          </Card>\n        </TabsContent>\n      </Tabs>\n      {/* Dialog for Clock-In Process */}\n      <AlertDialog open={isClockingIn} onOpenChange={(open) => { if(!open) closeDialog(); }}>\n        <AlertDialogContent>\n          <AlertDialogHeader>\n            <AlertDialogTitle className=\"text-center\">Clock-In Verification</AlertDialogTitle>\n            <AlertDialogDescription asChild>\n              <div className=\"text-center text-muted-foreground space-y-4\">\n                  {(clockInStatus === 'getting_location' || clockInStatus === 'verifying_location') && (\n                      <>\n                          <div className=\"flex justify-center my-4\">\n                              <Compass className=\"w-12 h-12 animate-pulse text-primary\"/>\n                          </div>\n                          <p>{clockInStatus === 'getting_location' ? 'Requesting location access...' : 'Verifying your location...'}</p>\n                      </>\n                  )}\n                  {clockInStatus === 'capturing_face' && (\n                      <div className=\"space-y-4\">\n                           <div className=\"flex justify-center my-4\">\n                                <UserSquare className=\"w-12 h-12 text-primary\"/>\n                           </div>\n                           <p>Location verified. Now, please take a photo for facial recognition.</p>\n                            <div className=\"relative aspect-video w-full max-w-sm mx-auto bg-muted rounded-md overflow-hidden\">\n                                <video ref={videoRef} className=\"w-full h-full object-cover\" autoPlay muted playsInline />\n                                <canvas ref={canvasRef} className=\"hidden\" />\n                                {!hasCameraPermission && <div className=\"absolute inset-0 flex items-center justify-center\"><Loader2 className=\"w-8 h-8 animate-spin\"/></div>}\n                            </div>\n                           {!hasCameraPermission && (\n                                <Alert variant=\"destructive\">\n                                    <AlertTitle>Camera Access Required</AlertTitle>\n                                    <AlertDescription>\n                                        Please allow camera access to use this feature.\n                                    </AlertDescription>\n                                </Alert>\n                            )}\n                      </div>\n                  )}\n                  {clockInStatus === 'verifying_face' && (\n                     <>\n                         <div className=\"flex justify-center my-4\">\n                             <Loader2 className=\"w-12 h-12 animate-spin text-primary\"/>\n                         </div>\n                         <p>Verifying your identity... Please wait.</p>\n                    </>\n                  )}\n                  {clockInStatus === 'error' && (\n                      <>\n                          <div className=\"flex justify-center my-4\">\n                              <X className=\"w-12 h-12 text-destructive\"/>\n                          </div>\n                          <p className=\"text-destructive font-medium\">{clockInError}</p>\n                      </>\n                  )}\n              </div>\n            </AlertDialogDescription>\n          </AlertDialogHeader>\n          <AlertDialogFooter>\n             {clockInStatus === 'capturing_face' && (\n                <Button onClick={handleCaptureAndVerify} disabled={!hasCameraPermission} className=\"w-full\">\n                    <Camera className=\"mr-2\"/>\n                    Take Photo & Verify\n                </Button>\n            )}\n            {clockInStatus === 'error' && (\n                <Button variant=\"outline\" onClick={closeDialog}>Close</Button>\n            )}\n          </AlertDialogFooter>\n        </AlertDialogContent>\n      </AlertDialog>\n    </>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}}]
}