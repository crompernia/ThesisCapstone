{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/card.tsx"],"sourcesContent":["/**\n * @fileoverview Defines the Card component and its parts.\n * A card is a flexible and extensible content container. It includes options for\n * headers, footers, titles, descriptions, and content.\n */\nimport * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\n/**\n * The main container for the card component.\n */\nconst Card = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"rounded-lg border bg-card text-card-foreground shadow-sm\",\n      className\n    )}\n    {...props}\n  />\n))\nCard.displayName = \"Card\"\n\n/**\n * The header section of the card. Typically contains the title and description.\n */\nconst CardHeader = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex flex-col space-y-1.5 p-6\", className)}\n    {...props}\n  />\n))\nCardHeader.displayName = \"CardHeader\"\n\n/**\n * The title of the card. Should be placed inside a CardHeader.\n */\nconst CardTitle = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLHeadingElement>\n>(({ className, ...props }, ref) => (\n  <h3\n    ref={ref}\n    className={cn(\n      \"text-2xl font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nCardTitle.displayName = \"CardTitle\"\n\n/**\n * A description for the card. Should be placed inside a CardHeader.\n */\nconst CardDescription = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, ...props }, ref) => (\n  <p\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nCardDescription.displayName = \"CardDescription\"\n\n/**\n * The main content area of the card.\n */\nconst CardContent = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn(\"p-6 pt-0\", className)} {...props} />\n))\nCardContent.displayName = \"CardContent\"\n\n/**\n_The footer section of the card.\n*/\nconst CardFooter = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex items-center p-6 pt-0\", className)}\n    {...props}\n  />\n))\nCardFooter.displayName = \"CardFooter\"\n\nexport { Card, CardHeader, CardFooter, CardTitle, CardDescription, CardContent }\n"],"names":[],"mappings":"AAAA;;;;CAIC;;;;;;;;;AACD;AAEA;;;;AAEA;;CAEC,GACD,MAAM,qBAAO,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,OAG1B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,4DACA;QAED,GAAG,KAAK;;;;;;;AAGb,KAAK,WAAW,GAAG;AAEnB;;CAEC,GACD,MAAM,2BAAa,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;;AAGb,WAAW,WAAW,GAAG;AAEzB;;CAEC,GACD,MAAM,0BAAY,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAG/B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,sDACA;QAED,GAAG,KAAK;;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB;;CAEC,GACD,MAAM,gCAAkB,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGrC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;;AAGb,gBAAgB,WAAW,GAAG;AAE9B;;CAEC,GACD,MAAM,4BAAc,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QAAI,KAAK;QAAK,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,YAAY;QAAa,GAAG,KAAK;;;;;;;AAEhE,YAAY,WAAW,GAAG;AAE1B;;AAEA,GACA,MAAM,2BAAa,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,SAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,8BAA8B;QAC3C,GAAG,KAAK;;;;;;;AAGb,WAAW,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 126, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/label.tsx"],"sourcesContent":["/**\n * @fileoverview Defines the Label component.\n * It is a styled text label, typically used for form fields.\n * It is built on top of the Radix UI Label primitive.\n * @see https://www.radix-ui.com/primitives/docs/components/label\n */\n\"use client\"\n\nimport * as React from \"react\"\nimport * as LabelPrimitive from \"@radix-ui/react-label\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\n/**\n * Defines the base styles for the label.\n */\nconst labelVariants = cva(\n  \"text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70\"\n)\n\n/**\n * The Label component.\n */\nconst Label = React.forwardRef<\n  React.ElementRef<typeof LabelPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof LabelPrimitive.Root> &\n    VariantProps<typeof labelVariants>\n>(({ className, ...props }, ref) => (\n  <LabelPrimitive.Root\n    ref={ref}\n    className={cn(labelVariants(), className)}\n    {...props}\n  />\n))\nLabel.displayName = LabelPrimitive.Root.displayName\n\nexport { Label }\n"],"names":[],"mappings":"AAAA;;;;;CAKC;;;;AAGD;AACA;AACA;AAEA;AANA;;;;;;AAQA;;CAEC,GACD,MAAM,gBAAgB,CAAA,GAAA,mKAAA,CAAA,MAAG,AAAD,EACtB;AAGF;;CAEC,GACD,MAAM,sBAAQ,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,OAI3B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC,oKAAA,CAAA,OAAmB;QAClB,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,iBAAiB;QAC9B,GAAG,KAAK;;;;;;;AAGb,MAAM,WAAW,GAAG,oKAAA,CAAA,OAAmB,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 174, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/select.tsx"],"sourcesContent":["/**\n * @fileoverview Defines the Select component and its parts.\n * A select component allows the user to choose one option from a list.\n * It is built on top of the Radix UI Select primitive.\n * @see https://www.radix-ui.com/primitives/docs/components/select\n */\n\"use client\"\n\nimport * as React from \"react\"\nimport * as SelectPrimitive from \"@radix-ui/react-select\"\nimport { Check, ChevronDown, ChevronUp } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\n/** The root component for a select dropdown. */\nconst Select = SelectPrimitive.Root\n\n/** A group of related options in a select dropdown. */\nconst SelectGroup = SelectPrimitive.Group\n\n/** The part of the select that displays the currently selected value. */\nconst SelectValue = SelectPrimitive.Value\n\n/** The trigger that opens the select dropdown. */\nconst SelectTrigger = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Trigger>\n>(({ className, children, ...props }, ref) => (\n  <SelectPrimitive.Trigger\n    ref={ref}\n    className={cn(\n      \"flex h-10 w-full items-center justify-between rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background placeholder:text-muted-foreground focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 [&>span]:line-clamp-1\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <SelectPrimitive.Icon asChild>\n      <ChevronDown className=\"h-4 w-4 opacity-50\" />\n    </SelectPrimitive.Icon>\n  </SelectPrimitive.Trigger>\n))\nSelectTrigger.displayName = SelectPrimitive.Trigger.displayName\n\n/** The button to scroll up in the select content. */\nconst SelectScrollUpButton = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.ScrollUpButton>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollUpButton>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.ScrollUpButton\n    ref={ref}\n    className={cn(\n      \"flex cursor-default items-center justify-center py-1\",\n      className\n    )}\n    {...props}\n  >\n    <ChevronUp className=\"h-4 w-4\" />\n  </SelectPrimitive.ScrollUpButton>\n))\nSelectScrollUpButton.displayName = SelectPrimitive.ScrollUpButton.displayName\n\n/** The button to scroll down in the select content. */\nconst SelectScrollDownButton = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.ScrollDownButton>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollDownButton>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.ScrollDownButton\n    ref={ref}\n    className={cn(\n      \"flex cursor-default items-center justify-center py-1\",\n      className\n    )}\n    {...props}\n  >\n    <ChevronDown className=\"h-4 w-4\" />\n  </SelectPrimitive.ScrollDownButton>\n))\nSelectScrollDownButton.displayName =\n  SelectPrimitive.ScrollDownButton.displayName\n\n/** The content of the select dropdown, containing the list of options. */\nconst SelectContent = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Content>\n>(({ className, children, position = \"popper\", ...props }, ref) => (\n  <SelectPrimitive.Portal>\n    <SelectPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"relative z-50 max-h-96 min-w-[8rem] overflow-hidden rounded-md border bg-popover text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2\",\n        position === \"popper\" &&\n          \"data-[side=bottom]:translate-y-1 data-[side=left]:-translate-x-1 data-[side=right]:translate-x-1 data-[side=top]:-translate-y-1\",\n        className\n      )}\n      position={position}\n      {...props}\n    >\n      <SelectScrollUpButton />\n      <SelectPrimitive.Viewport\n        className={cn(\n          \"p-1\",\n          position === \"popper\" &&\n            \"h-[var(--radix-select-trigger-height)] w-full min-w-[var(--radix-select-trigger-width)]\"\n        )}\n      >\n        {children}\n      </SelectPrimitive.Viewport>\n      <SelectScrollDownButton />\n    </SelectPrimitive.Content>\n  </SelectPrimitive.Portal>\n))\nSelectContent.displayName = SelectPrimitive.Content.displayName\n\n/** A label for a group of options in the select dropdown. */\nconst SelectLabel = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Label>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.Label\n    ref={ref}\n    className={cn(\"py-1.5 pl-8 pr-2 text-sm font-semibold\", className)}\n    {...props}\n  />\n))\nSelectLabel.displayName = SelectPrimitive.Label.displayName\n\n/** An individual option in the select dropdown. */\nconst SelectItem = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Item>\n>(({ className, children, ...props }, ref) => (\n  <SelectPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex w-full cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <SelectPrimitive.ItemIndicator>\n        <Check className=\"h-4 w-4\" />\n      </SelectPrimitive.ItemIndicator>\n    </span>\n\n    <SelectPrimitive.ItemText>{children}</SelectPrimitive.ItemText>\n  </SelectPrimitive.Item>\n))\nSelectItem.displayName = SelectPrimitive.Item.displayName\n\n/** A separator between groups of options in the select dropdown. */\nconst SelectSeparator = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 my-1 h-px bg-muted\", className)}\n    {...props}\n  />\n))\nSelectSeparator.displayName = SelectPrimitive.Separator.displayName\n\nexport {\n  Select,\n  SelectGroup,\n  SelectValue,\n  SelectTrigger,\n  SelectContent,\n  SelectLabel,\n  SelectItem,\n  SelectSeparator,\n  SelectScrollUpButton,\n  SelectScrollDownButton,\n}\n"],"names":[],"mappings":"AAAA;;;;;CAKC;;;;;;;;;;;;;AAGD;AACA;AACA;AAAA;AAAA;AAEA;AANA;;;;;;AAQA,8CAA8C,GAC9C,MAAM,SAAS,qKAAA,CAAA,OAAoB;AAEnC,qDAAqD,GACrD,MAAM,cAAc,qKAAA,CAAA,QAAqB;AAEzC,uEAAuE,GACvE,MAAM,cAAc,qKAAA,CAAA,QAAqB;AAEzC,gDAAgD,GAChD,MAAM,8BAAgB,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,OAGnC,CAAC,EAAE,SAAS,EAAE,QAAQ,EAAE,GAAG,OAAO,EAAE,oBACpC,6LAAC,qKAAA,CAAA,UAAuB;QACtB,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,mTACA;QAED,GAAG,KAAK;;YAER;0BACD,6LAAC,qKAAA,CAAA,OAAoB;gBAAC,OAAO;0BAC3B,cAAA,6LAAC,uNAAA,CAAA,cAAW;oBAAC,WAAU;;;;;;;;;;;;;;;;;;AAI7B,cAAc,WAAW,GAAG,qKAAA,CAAA,UAAuB,CAAC,WAAW;AAE/D,mDAAmD,GACnD,MAAM,qCAAuB,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,EAG1C,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC,qKAAA,CAAA,iBAA8B;QAC7B,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,wDACA;QAED,GAAG,KAAK;kBAET,cAAA,6LAAC,mNAAA,CAAA,YAAS;YAAC,WAAU;;;;;;;;;;;MAZnB;AAeN,qBAAqB,WAAW,GAAG,qKAAA,CAAA,iBAA8B,CAAC,WAAW;AAE7E,qDAAqD,GACrD,MAAM,uCAAyB,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,EAG5C,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC,qKAAA,CAAA,mBAAgC;QAC/B,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,wDACA;QAED,GAAG,KAAK;kBAET,cAAA,6LAAC,uNAAA,CAAA,cAAW;YAAC,WAAU;;;;;;;;;;;MAZrB;AAeN,uBAAuB,WAAW,GAChC,qKAAA,CAAA,mBAAgC,CAAC,WAAW;AAE9C,wEAAwE,GACxE,MAAM,8BAAgB,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGnC,CAAC,EAAE,SAAS,EAAE,QAAQ,EAAE,WAAW,QAAQ,EAAE,GAAG,OAAO,EAAE,oBACzD,6LAAC,qKAAA,CAAA,SAAsB;kBACrB,cAAA,6LAAC,qKAAA,CAAA,UAAuB;YACtB,KAAK;YACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,ucACA,aAAa,YACX,mIACF;YAEF,UAAU;YACT,GAAG,KAAK;;8BAET,6LAAC;;;;;8BACD,6LAAC,qKAAA,CAAA,WAAwB;oBACvB,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,OACA,aAAa,YACX;8BAGH;;;;;;8BAEH,6LAAC;;;;;;;;;;;;;;;;;AAIP,cAAc,WAAW,GAAG,qKAAA,CAAA,UAAuB,CAAC,WAAW;AAE/D,2DAA2D,GAC3D,MAAM,4BAAc,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC,qKAAA,CAAA,QAAqB;QACpB,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,0CAA0C;QACvD,GAAG,KAAK;;;;;;;AAGb,YAAY,WAAW,GAAG,qKAAA,CAAA,QAAqB,CAAC,WAAW;AAE3D,iDAAiD,GACjD,MAAM,2BAAa,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGhC,CAAC,EAAE,SAAS,EAAE,QAAQ,EAAE,GAAG,OAAO,EAAE,oBACpC,6LAAC,qKAAA,CAAA,OAAoB;QACnB,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,6NACA;QAED,GAAG,KAAK;;0BAET,6LAAC;gBAAK,WAAU;0BACd,cAAA,6LAAC,qKAAA,CAAA,gBAA6B;8BAC5B,cAAA,6LAAC,uMAAA,CAAA,QAAK;wBAAC,WAAU;;;;;;;;;;;;;;;;0BAIrB,6LAAC,qKAAA,CAAA,WAAwB;0BAAE;;;;;;;;;;;;;AAG/B,WAAW,WAAW,GAAG,qKAAA,CAAA,OAAoB,CAAC,WAAW;AAEzD,kEAAkE,GAClE,MAAM,gCAAkB,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,SAGrC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC,qKAAA,CAAA,YAAyB;QACxB,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,4BAA4B;QACzC,GAAG,KAAK;;;;;;;AAGb,gBAAgB,WAAW,GAAG,qKAAA,CAAA,YAAyB,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 394, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/hr/payslip-generation/page.tsx"],"sourcesContent":["/**\n * @fileoverview This file defines the Payslip Generation page for the HR portal.\n * It provides HR personnel with the tools to configure, generate, and distribute\n * employee payslips for a specific payroll period.\n */\n'use client';\n\nimport * as React from 'react';\nimport {\n  Card,\n  CardContent,\n  CardHeader,\n  CardTitle,\n  CardDescription,\n  CardFooter,\n} from '@/components/ui/card';\nimport { Button } from '@/components/ui/button';\nimport { Input } from '@/components/ui/input';\nimport { Label } from '@/components/ui/label';\nimport {\n  Select,\n  SelectContent,\n  SelectItem,\n  SelectTrigger,\n  SelectValue,\n} from '@/components/ui/select';\nimport { Search, User, Calculator, FileDown } from 'lucide-react';\nimport { Separator } from '@/components/ui/separator';\n\ntype Employee = {\n  id: string;\n  name: string;\n  position: string;\n};\n\ntype Payslip = {\n    employee: Employee;\n    period: string;\n    payDate: string;\n    earnings: { name: string; amount: number }[];\n    deductions: { name: string; amount: number }[];\n    totalEarnings: number;\n    totalDeductions: number;\n    netPay: number;\n};\n\n/**\n * Renders the HR payslip generation page.\n * Allows searching for an employee, applying formulas, and generating a payslip.\n * @returns {JSX.Element} The payslip generation page component.\n */\nexport default function PayslipGenerationPage() {\n  const [searchedEmployee, setSearchedEmployee] = React.useState<Employee | null>(null);\n  const [generatedPayslip, setGeneratedPayslip] = React.useState<Payslip | null>(null);\n\n  // --- DATABASE INTEGRATION POINT (SEARCH) ---\n  // In a real application, this function would query your database for employees.\n  // const employee = await db.query('SELECT * FROM employees WHERE id = $1', [searchId]);\n  const handleSearch = () => {\n    // For demonstration, we'll use a static employee object.\n    setSearchedEmployee({\n      id: 'EMP-00123',\n      name: 'John Doe',\n      position: 'Senior Developer',\n    });\n    setGeneratedPayslip(null); // Clear previous payslip on new search\n  };\n  \n  // --- DATABASE INTEGRATION POINT (CALCULATION) ---\n  // This function would fetch payroll rules and employee data from the database\n  // to perform the calculation and then save the result.\n  const handleGenerate = () => {\n    if (!searchedEmployee) return;\n\n    // Dummy data for demonstration\n    const earnings = [\n        { name: 'Basic Salary', amount: 50000 },\n        { name: 'Overtime Pay', amount: 5000 },\n        { name: 'Bonus', amount: 2000 },\n    ];\n    const deductions = [\n        { name: 'Withholding Tax', amount: 5000 },\n        { name: 'Social Security', amount: 1200 },\n        { name: 'Health Insurance', amount: 800 },\n    ];\n\n    const totalEarnings = earnings.reduce((sum, item) => sum + item.amount, 0);\n    const totalDeductions = deductions.reduce((sum, item) => sum + item.amount, 0);\n    const netPay = totalEarnings - totalDeductions;\n      \n    setGeneratedPayslip({\n        employee: searchedEmployee,\n        period: 'Aug 1-15, 2024',\n        payDate: 'August 20, 2024',\n        earnings,\n        deductions,\n        totalEarnings,\n        totalDeductions,\n        netPay\n    });\n  };\n\n  return (\n    <div className=\"space-y-6\">\n      <h1 className=\"text-3xl font-bold font-headline\">Payslip Generation</h1>\n\n      <div className=\"grid grid-cols-1 lg:grid-cols-3 gap-6\">\n        <div className=\"lg:col-span-1 space-y-6\">\n          {/* Employee Search Card */}\n          <Card>\n            <CardHeader>\n              <CardTitle>1. Find Employee</CardTitle>\n            </CardHeader>\n            <CardContent>\n              <div className=\"flex gap-2\">\n                <Input placeholder=\"Enter Employee ID or Name\" />\n                <Button onClick={handleSearch}>\n                  <Search />\n                </Button>\n              </div>\n            </CardContent>\n          </Card>\n\n          {/* Formula and Calculation Card */}\n          {searchedEmployee && (\n            <Card>\n              <CardHeader>\n                <CardTitle>2. Calculate Payroll</CardTitle>\n                <CardDescription>\n                  Apply formulas for {searchedEmployee.name}.\n                </CardDescription>\n              </CardHeader>\n              <CardContent className=\"space-y-4\">\n                 <div className=\"space-y-2\">\n                    <Label>Formula Template</Label>\n                    <Select>\n                        <SelectTrigger>\n                            <SelectValue placeholder=\"Select a template\" />\n                        </SelectTrigger>\n                        <SelectContent>\n                            <SelectItem value=\"standard\">Standard Employee</SelectItem>\n                            <SelectItem value=\"contractor\">Contractor</SelectItem>\n                            <SelectItem value=\"intern\">Intern</SelectItem>\n                        </SelectContent>\n                    </Select>\n                </div>\n                <div className=\"space-y-2\">\n                  <Label htmlFor=\"overtime\">Overtime Hours</Label>\n                  <Input id=\"overtime\" placeholder=\"e.g., 10\" />\n                </div>\n                <div className=\"space-y-2\">\n                  <Label htmlFor=\"bonus\">Bonus / Commission</Label>\n                  <Input id=\"bonus\" placeholder=\"e.g., 5000\" />\n                </div>\n                 <div className=\"space-y-2\">\n                  <Label htmlFor=\"deductions\">Other Deductions</Label>\n                  <Input id=\"deductions\" placeholder=\"e.g., 250\" />\n                </div>\n              </CardContent>\n              <CardFooter>\n                <Button onClick={handleGenerate} className=\"w-full\">\n                  <Calculator className=\"mr-2\" />\n                  Generate Payslip\n                </Button>\n              </CardFooter>\n            </Card>\n          )}\n        </div>\n\n        {/* Generated Payslip Preview */}\n        <div className=\"lg:col-span-2\">\n          <Card className=\"min-h-[400px]\">\n            <CardHeader>\n              <div className=\"flex justify-between items-center\">\n                <div>\n                  <CardTitle>3. Review & Distribute</CardTitle>\n                  <CardDescription>\n                    Preview the generated payslip before sending.\n                  </CardDescription>\n                </div>\n                <Button variant=\"outline\" disabled={!generatedPayslip}>\n                  <FileDown className=\"mr-2\" /> Download\n                </Button>\n              </div>\n            </CardHeader>\n            <CardContent>\n              {generatedPayslip ? (\n                 <div className=\"border rounded-lg p-6 space-y-4\">\n                    <div className=\"flex justify-between items-start\">\n                        <div>\n                            <p className=\"font-bold text-lg\">{generatedPayslip.employee.name}</p>\n                            <p className=\"text-sm text-muted-foreground\">{generatedPayslip.employee.position} ({generatedPayslip.employee.id})</p>\n                        </div>\n                         <div className=\"text-right\">\n                            <p className=\"font-semibold\">{generatedPayslip.period}</p>\n                            <p className=\"text-sm text-muted-foreground\">Pay Date: {generatedPayslip.payDate}</p>\n                        </div>\n                    </div>\n                    <Separator />\n                     <div className=\"grid md:grid-cols-2 gap-6\">\n                        {/* Earnings */}\n                        <div>\n                            <h4 className=\"font-semibold mb-2 text-green-600\">Earnings</h4>\n                            <ul className=\"space-y-1 text-sm\">\n                            {generatedPayslip.earnings.map((item, i) => (\n                                <li key={i} className=\"flex justify-between\">\n                                    <span>{item.name}</span>\n                                    <span className=\"font-mono\">₱{item.amount.toFixed(2)}</span>\n                                </li>\n                            ))}\n                            </ul>\n                            <Separator className=\"my-2\"/>\n                            <div className=\"flex justify-between font-semibold\">\n                                <span>Gross Earnings</span>\n                                <span className=\"font-mono\">₱{generatedPayslip.totalEarnings.toFixed(2)}</span>\n                            </div>\n                        </div>\n                        {/* Deductions */}\n                        <div>\n                            <h4 className=\"font-semibold mb-2 text-red-600\">Deductions</h4>\n                            <ul className=\"space-y-1 text-sm\">\n                            {generatedPayslip.deductions.map((item, i) => (\n                                <li key={i} className=\"flex justify-between\">\n                                    <span>{item.name}</span>\n                                    <span className=\"font-mono\">(₱{item.amount.toFixed(2)})</span>\n                                </li>\n                            ))}\n                            </ul>\n                            <Separator className=\"my-2\"/>\n                            <div className=\"flex justify-between font-semibold\">\n                                <span>Total Deductions</span>\n                                <span className=\"font-mono\">(₱{generatedPayslip.totalDeductions.toFixed(2)})</span>\n                            </div>\n                        </div>\n                    </div>\n                    <Separator />\n                     <div className=\"flex justify-between items-center pt-2\">\n                        <span className=\"text-lg font-bold\">Net Pay</span>\n                        <span className=\"text-xl font-bold text-primary font-mono\">₱{generatedPayslip.netPay.toFixed(2)}</span>\n                    </div>\n                 </div>\n              ) : (\n                <div className=\"flex flex-col items-center justify-center h-full min-h-[200px] text-center text-muted-foreground bg-muted/50 rounded-lg\">\n                    <User className=\"w-12 h-12 mb-4\"/>\n                    <p className=\"font-semibold\">No employee selected</p>\n                    <p className=\"text-sm\">Search for an employee to begin.</p>\n                </div>\n              )}\n            </CardContent>\n            {generatedPayslip && (\n                 <CardFooter className=\"flex justify-end\">\n                    <Button>Send Payslip to Employee</Button>\n                </CardFooter>\n            )}\n          </Card>\n        </div>\n      </div>\n    </div>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}}]
}