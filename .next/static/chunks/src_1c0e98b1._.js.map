{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/card.jsx"],"sourcesContent":["/**\n * @fileoverview Defines the Card component and its parts.\n * A card is a flexible and extensible content container. It includes options for\n * headers, footers, titles, descriptions, and content.\n */\nimport * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\n/**\n * The main container for the card component.\n */\nconst Card = React.forwardRef(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"rounded-lg border bg-card text-card-foreground shadow-sm\",\n      className\n    )}\n    {...props}\n  />\n))\nCard.displayName = \"Card\"\n\n/**\n * The header section of the card. Typically contains the title and description.\n */\nconst CardHeader = React.forwardRef(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex flex-col space-y-1.5 p-6\", className)}\n    {...props}\n  />\n))\nCardHeader.displayName = \"CardHeader\"\n\n/**\n * The title of the card. Should be placed inside a CardHeader.\n */\nconst CardTitle = React.forwardRef(({ className, ...props }, ref) => (\n  <h3\n    ref={ref}\n    className={cn(\n      \"text-2xl font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nCardTitle.displayName = \"CardTitle\"\n\n/**\n * A description for the card. Should be placed inside a CardHeader.\n */\nconst CardDescription = React.forwardRef(({ className, ...props }, ref) => (\n  <p\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nCardDescription.displayName = \"CardDescription\"\n\n/**\n * The main content area of the card.\n */\nconst CardContent = React.forwardRef(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn(\"p-6 pt-0\", className)} {...props} />\n))\nCardContent.displayName = \"CardContent\"\n\n/**\n_The footer section of the card.\n*/\nconst CardFooter = React.forwardRef(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex items-center p-6 pt-0\", className)}\n    {...props}\n  />\n))\nCardFooter.displayName = \"CardFooter\"\n\nexport { Card, CardHeader, CardFooter, CardTitle, CardDescription, CardContent }\n"],"names":[],"mappings":"AAAA;;;;CAIC;;;;;;;;;AACD;AAEA;;;;AAEA;;CAEC,GACD,MAAM,qBAAO,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,OAAE,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBACtD,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,4DACA;QAED,GAAG,KAAK;;;;;;;AAGb,KAAK,WAAW,GAAG;AAEnB;;CAEC,GACD,MAAM,2BAAa,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAAE,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC5D,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;;AAGb,WAAW,WAAW,GAAG;AAEzB;;CAEC,GACD,MAAM,0BAAY,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAAE,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC3D,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,sDACA;QAED,GAAG,KAAK;;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB;;CAEC,GACD,MAAM,gCAAkB,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAAE,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBACjE,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;;AAGb,gBAAgB,WAAW,GAAG;AAE9B;;CAEC,GACD,MAAM,4BAAc,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAAE,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC7D,6LAAC;QAAI,KAAK;QAAK,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,YAAY;QAAa,GAAG,KAAK;;;;;;;AAEhE,YAAY,WAAW,GAAG;AAE1B;;AAEA,GACA,MAAM,2BAAa,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,SAAE,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC5D,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,8BAA8B;QAC3C,GAAG,KAAK;;;;;;;AAGb,WAAW,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 126, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/textarea.jsx"],"sourcesContent":["/**\n * @fileoverview Defines the Textarea component.\n * It is a multi-line text input field with styling that matches the application's theme.\n */\nimport * as React from 'react';\n\nimport {cn} from '@/lib/utils';\n\n/**\n * The Textarea component.\n * @param {React.ComponentProps<'textarea'>} props - The properties for the textarea element.\n * @returns {JSX.Element} The rendered textarea element.\n */\nconst Textarea = React.forwardRef(\n  ({className, ...props}, ref) => {\n    return (\n      <textarea\n        className={cn(\n          'flex min-h-[80px] w-full rounded-md border border-input bg-background px-3 py-2 text-base ring-offset-background placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 md:text-sm',\n          className\n        )}\n        ref={ref}\n        {...props}\n      />\n    );\n  }\n);\nTextarea.displayName = 'Textarea';\n\nexport {Textarea};\n"],"names":[],"mappings":"AAAA;;;CAGC;;;;AACD;AAEA;;;;AAEA;;;;CAIC,GACD,MAAM,yBAAW,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,OAC9B,CAAC,EAAC,SAAS,EAAE,GAAG,OAAM,EAAE;IACtB,qBACE,6LAAC;QACC,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,qTACA;QAEF,KAAK;QACJ,GAAG,KAAK;;;;;;AAGf;;AAEF,SAAS,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 168, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/table.jsx"],"sourcesContent":["/**\n * @fileoverview Defines the Table component and its parts.\n * This provides a set of styled components for creating tables.\n */\nimport * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\n/** The root `<table>` element. */\nconst Table = React.forwardRef(({ className, ...props }, ref) => (\n  <div className=\"relative w-full overflow-auto\">\n    <table\n      ref={ref}\n      className={cn(\"w-full caption-bottom text-sm\", className)}\n      {...props}\n    />\n  </div>\n))\nTable.displayName = \"Table\"\n\n/** The `<thead>` element. */\nconst TableHeader = React.forwardRef(({ className, ...props }, ref) => (\n  <thead ref={ref} className={cn(\"[&_tr]:border-b\", className)} {...props} />\n))\nTableHeader.displayName = \"TableHeader\"\n\n/** The `<tbody>` element. */\nconst TableBody = React.forwardRef(({ className, ...props }, ref) => (\n  <tbody\n    ref={ref}\n    className={cn(\"[&_tr:last-child]:border-0\", className)}\n    {...props}\n  />\n))\nTableBody.displayName = \"TableBody\"\n\n/** The `<tfoot>` element. */\nconst TableFooter = React.forwardRef(({ className, ...props }, ref) => (\n  <tfoot\n    ref={ref}\n    className={cn(\n      \"border-t bg-muted/50 font-medium [&>tr]:last:border-b-0\",\n      className\n    )}\n    {...props}\n  />\n))\nTableFooter.displayName = \"TableFooter\"\n\n/** The `<tr>` element. */\nconst TableRow = React.forwardRef(({ className, ...props }, ref) => (\n  <tr\n    ref={ref}\n    className={cn(\n      \"border-b transition-colors hover:bg-muted/50 data-[state=selected]:bg-muted\",\n      className\n    )}\n    {...props}\n  />\n))\nTableRow.displayName = \"TableRow\"\n\n/** The `<th>` element. */\nconst TableHead = React.forwardRef(({ className, ...props }, ref) => (\n  <th\n    ref={ref}\n    className={cn(\n      \"h-12 px-4 text-left align-middle font-medium text-muted-foreground [&:has([role=checkbox])]:pr-0\",\n      className\n    )}\n    {...props}\n  />\n))\nTableHead.displayName = \"TableHead\"\n\n/** The `<td>` element. */\nconst TableCell = React.forwardRef(({ className, ...props }, ref) => (\n  <td\n    ref={ref}\n    className={cn(\"p-4 align-middle [&:has([role=checkbox])]:pr-0\", className)}\n    {...props}\n  />\n))\nTableCell.displayName = \"TableCell\"\n\n/** The `<caption>` element. */\nconst TableCaption = React.forwardRef(({ className, ...props }, ref) => (\n  <caption\n    ref={ref}\n    className={cn(\"mt-4 text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nTableCaption.displayName = \"TableCaption\"\n\nexport {\n  Table,\n  TableHeader,\n  TableBody,\n  TableFooter,\n  TableHead,\n  TableRow,\n  TableCell,\n  TableCaption,\n}\n"],"names":[],"mappings":"AAAA;;;CAGC;;;;;;;;;;;AACD;AAEA;;;;AAEA,gCAAgC,GAChC,MAAM,sBAAQ,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,OAAE,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBACvD,6LAAC;QAAI,WAAU;kBACb,cAAA,6LAAC;YACC,KAAK;YACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;YAC9C,GAAG,KAAK;;;;;;;;;;;;AAIf,MAAM,WAAW,GAAG;AAEpB,2BAA2B,GAC3B,MAAM,4BAAc,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAAE,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC7D,6LAAC;QAAM,KAAK;QAAK,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,mBAAmB;QAAa,GAAG,KAAK;;;;;;;AAEzE,YAAY,WAAW,GAAG;AAE1B,2BAA2B,GAC3B,MAAM,0BAAY,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAAE,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC3D,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,8BAA8B;QAC3C,GAAG,KAAK;;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,2BAA2B,GAC3B,MAAM,4BAAc,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAAE,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC7D,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,2DACA;QAED,GAAG,KAAK;;;;;;;AAGb,YAAY,WAAW,GAAG;AAE1B,wBAAwB,GACxB,MAAM,yBAAW,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAAE,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1D,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,+EACA;QAED,GAAG,KAAK;;;;;;;AAGb,SAAS,WAAW,GAAG;AAEvB,wBAAwB,GACxB,MAAM,0BAAY,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,SAAE,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC3D,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,oGACA;QAED,GAAG,KAAK;;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,wBAAwB,GACxB,MAAM,0BAAY,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,SAAE,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC3D,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,kDAAkD;QAC/D,GAAG,KAAK;;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,6BAA6B,GAC7B,MAAM,6BAAe,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,SAAE,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC9D,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,sCAAsC;QACnD,GAAG,KAAK;;;;;;;AAGb,aAAa,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 309, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/badge.jsx"],"sourcesContent":["/**\n * @fileoverview This file defines the Badge component.\n * Badges are used to highlight small pieces of information, such as a status or a category.\n * They come in different visual styles (variants).\n */\nimport * as React from \"react\"\nimport { cva } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\n/**\n * Defines the visual styles for the badge component.\n * Includes variants for different states like 'default', 'secondary', 'destructive', and 'outline'.\n */\nconst badgeVariants = cva(\n  \"inline-flex items-center rounded-full border px-2.5 py-0.5 text-xs font-semibold transition-colors focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2\",\n  {\n    variants: {\n      variant: {\n        default:\n          \"border-transparent bg-primary text-primary-foreground hover:bg-primary/80\",\n        secondary:\n          \"border-transparent bg-secondary text-secondary-foreground hover:bg-secondary/80\",\n        destructive:\n          \"border-transparent bg-destructive text-destructive-foreground hover:bg-destructive/80\",\n        outline: \"text-foreground\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\n/**\n * The Badge component itself.\n * @param {BadgeProps} props - The properties for the badge.\n * @returns {JSX.Element} The rendered badge component.\n */\nfunction Badge({ className, variant, ...props }) {\n  return (\n    <div className={cn(badgeVariants({ variant }), className)} {...props} />\n  )\n}\n\nexport { Badge, badgeVariants }\n"],"names":[],"mappings":"AAAA;;;;CAIC;;;;;AACD;AACA;AAEA;;;;;AAEA;;;CAGC,GACD,MAAM,gBAAgB,CAAA,GAAA,mKAAA,CAAA,MAAG,AAAD,EACtB,0KACA;IACE,UAAU;QACR,SAAS;YACP,SACE;YACF,WACE;YACF,aACE;YACF,SAAS;QACX;IACF;IACA,iBAAiB;QACf,SAAS;IACX;AACF;AAGF;;;;CAIC,GACD,SAAS,MAAM,EAAE,SAAS,EAAE,OAAO,EAAE,GAAG,OAAO;IAC7C,qBACE,6LAAC;QAAI,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,cAAc;YAAE;QAAQ,IAAI;QAAa,GAAG,KAAK;;;;;;AAExE;KAJS","debugId":null}},
    {"offset": {"line": 370, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/label.jsx"],"sourcesContent":["/**\n * @fileoverview Defines the Label component.\n * It is a styled text label, typically used for form fields.\n * It is built on top of the Radix UI Label primitive.\n * @see https://www.radix-ui.com/primitives/docs/components/label\n */\n\"use client\"\n\nimport * as React from \"react\"\nimport * as LabelPrimitive from \"@radix-ui/react-label\"\nimport { cva } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\n/**\n * Defines the base styles for the label.\n */\nconst labelVariants = cva(\n  \"text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70\"\n)\n\n/**\n * The Label component.\n */\nconst Label = React.forwardRef(({ className, ...props }, ref) => (\n  <LabelPrimitive.Root\n    ref={ref}\n    className={cn(labelVariants(), className)}\n    {...props}\n  />\n))\nLabel.displayName = LabelPrimitive.Root.displayName\n\nexport { Label }\n"],"names":[],"mappings":"AAAA;;;;;CAKC;;;;AAGD;AACA;AACA;AAEA;AANA;;;;;;AAQA;;CAEC,GACD,MAAM,gBAAgB,CAAA,GAAA,mKAAA,CAAA,MAAG,AAAD,EACtB;AAGF;;CAEC,GACD,MAAM,sBAAQ,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,OAAE,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBACvD,6LAAC,oKAAA,CAAA,OAAmB;QAClB,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,iBAAiB;QAC9B,GAAG,KAAK;;;;;;;AAGb,MAAM,WAAW,GAAG,oKAAA,CAAA,OAAmB,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 418, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/lib/data.js"],"sourcesContent":["/**\n * @fileoverview This file contains all the functions for fetching data from the database.\n */\n'use server';\n\nimport { query } from './db';\nimport { format, formatDistanceToNow, addDays, subDays } from 'date-fns';\nimport { Users, CheckCircle, Briefcase, Bell } from 'lucide-react';\n\nasync function executeQuery(queryString, params, errorMessage) {\n    try {\n        const { rows } = await query(queryString, params);\n        return rows;\n    } catch (error) {\n        console.error(errorMessage, error);\n        throw new Error(errorMessage);\n    }\n}\n\n\nexport async function getHRDashboardData() {\n  const employeeCountQuery = \"SELECT COUNT(*) FROM accounts WHERE role = 'Employee' AND status = 'Active'\";\n  const pendingLeavesQuery = \"SELECT COUNT(*) FROM leave_requests WHERE status = 'Pending'\";\n  const recentActivitiesQuery = `\n    SELECT lr.id, a.first_name, a.last_name, lr.leave_type, lr.start_date\n    FROM leave_requests lr\n    JOIN accounts a ON lr.account_id = a.id\n    ORDER BY lr.start_date DESC\n    LIMIT 5\n  `;\n\n  try {\n    const [employeeCountResult, pendingLeavesResult, recentActivitiesResult] = await Promise.all([\n      query(employeeCountQuery),\n      query(pendingLeavesQuery),\n      query(recentActivitiesQuery),\n    ]);\n\n    const employeeCount = employeeCountResult.rows[0].count;\n    const pendingLeaves = pendingLeavesResult.rows[0].count;\n    const recentActivities = recentActivitiesResult.rows.map(row => ({\n      id: row.id,\n      activity: `${row.first_name} ${row.last_name} requested ${row.leave_type.toLowerCase()} leave`,\n      timestamp: formatDistanceToNow(new Date(row.start_date), { addSuffix: true }),\n      type: 'Leave'\n    }));\n    \n    return {\n      stats: [\n        { title: 'Total Employees', value: employeeCount, icon: <Users />, change: '+2 this month' },\n        { title: 'On Time Percentage', value: '96%', icon: <CheckCircle />, change: '-1% from last month' },\n        { title: 'Active Job Postings', value: '4', icon: <Briefcase />, change: '+1 new posting' },\n        { title: 'Pending Leave Requests', value: pendingLeaves, icon: <Bell />, change: `${pendingLeaves} new today` },\n      ],\n      recentActivities\n    };\n\n  } catch (error) {\n    console.error('Database Error fetching HR dashboard data:', error);\n    throw new Error('Failed to fetch HR dashboard data.');\n  }\n}\n\nexport async function getPastAnnouncements() {\n    const queryString = `\n        SELECT a.id, a.title, a.content, a.posted_at, a.status, acc.first_name, acc.last_name\n        FROM announcements a\n        JOIN accounts acc ON a.posted_by_id = acc.id\n        ORDER BY a.posted_at DESC\n    `;\n    const rows = await executeQuery(queryString, [], 'Failed to fetch past announcements.');\n    return rows.map(a => ({\n        ...a,\n        date: format(new Date(a.posted_at), 'yyyy-MM-dd'),\n        postedBy: `${a.first_name} ${a.last_name}`\n    }));\n}\n\n\nexport async function getDailyAttendanceData(date) {\n    const requestedDate = format(new Date(date), 'yyyy-MM-dd');\n    const queryString = `\n        SELECT \n            acc.id, \n            acc.first_name, \n            acc.last_name, \n            acc.position, \n            acc.branch, \n            att.time_in, \n            att.time_out, \n            att.status\n        FROM accounts acc\n        LEFT JOIN attendance att ON acc.id = att.account_id AND att.attendance_date = $1\n        WHERE acc.role = 'Employee' AND acc.status = 'Active'\n    `;\n\n    const rows = await executeQuery(queryString, [requestedDate], 'Failed to fetch daily attendance data.');\n    return rows.map(emp => ({\n        id: emp.id,\n        name: `${emp.first_name} ${emp.last_name}`,\n        position: emp.position,\n        branch: emp.branch,\n        timeIn: emp.time_in ? format(new Date(`1970-01-01T${emp.time_in}`), 'HH:mm') : '--',\n        timeOut: emp.time_out ? format(new Date(`1970-01-01T${emp.time_out}`), 'HH:mm') : '--',\n        status: emp.status || 'Absent'\n    }));\n}\n\n\nexport async function getEmployees() {\n    const queryString = `\n        SELECT id, first_name, last_name, position, branch, status \n        FROM accounts \n        WHERE role = 'Employee'`;\n    const rows = await executeQuery(queryString, [], 'Failed to fetch employees.');\n    return rows.map(acc => ({\n        id: acc.id,\n        name: `${acc.first_name} ${acc.last_name}`,\n        position: acc.position,\n        branch: acc.branch,\n        status: acc.status\n    }));\n}\n\nexport async function getLeaveRequests() {\n    const queryString = `\n        SELECT lr.id, lr.leave_type, lr.start_date, lr.end_date, lr.reason, lr.status, a.first_name, a.last_name, a.id as employeeId\n        FROM leave_requests lr\n        JOIN accounts a ON lr.account_id = a.id\n        ORDER BY lr.start_date DESC\n    `;\n    const rows = await executeQuery(queryString, [], 'Failed to fetch leave requests.');\n    return rows.map(lr => ({\n        id: lr.id,\n        employeeName: `${lr.first_name} ${lr.last_name}`,\n        employeeId: lr.employeeid,\n        leave_type: lr.leave_type,\n        startDate: format(new Date(lr.start_date), 'yyyy-MM-dd'),\n        endDate: format(new Date(lr.end_date), 'yyyy-MM-dd'),\n        reason: lr.reason,\n        status: lr.status\n    }));\n}\n\nexport async function getEmployeesWithPayslipStatus() {\n    const queryString = `\n        SELECT \n            acc.id, \n            acc.first_name, \n            acc.last_name, \n            acc.position, \n            acc.department,\n            EXISTS(SELECT 1 FROM payslips p WHERE p.account_id = acc.id) as has_payslip\n        FROM accounts acc\n        WHERE acc.role = 'Employee' AND acc.status = 'Active'\n    `;\n    const rows = await executeQuery(queryString, [], 'Failed to fetch employees with payslip status.');\n    return rows.map(emp => ({\n        id: emp.id,\n        name: `${emp.first_name} ${emp.last_name}`,\n        position: emp.position,\n        department: emp.department,\n        payslipStatus: emp.has_payslip ? 'Generated' : 'Pending'\n    }));\n}\n\nexport async function getEmployeesForScheduling() {\n    const queryString = `\n        SELECT id, first_name, last_name \n        FROM accounts \n        WHERE status = 'Active' AND role = 'Employee'\n    `;\n    const rows = await executeQuery(queryString, [], 'Failed to fetch employees for scheduling.');\n    return rows.map(emp => ({\n        id: emp.id,\n        name: `${emp.first_name} ${emp.last_name}`,\n        shift: '9:00 - 17:00' // Default shift, can be customized\n    }));\n}\n\nexport async function getEmployeeDashboardData(employeeId) {\n    try {\n        const employeeQuery = \"SELECT id, first_name, last_name, position, department, email FROM accounts WHERE id = $1\";\n        const announcementsQuery = `\n            SELECT id, title, content, posted_at\n            FROM announcements\n            WHERE status = 'Published'\n            ORDER BY posted_at DESC\n            LIMIT 5\n        `;\n        \n        const employeeResult = await query(employeeQuery, [employeeId]);\n        if (employeeResult.rows.length === 0) {\n            throw new Error(`Employee with ID ${employeeId} not found`);\n        }\n        \n        const announcementsResult = await query(announcementsQuery);\n        \n        const employeeData = employeeResult.rows[0];\n        const announcements = announcementsResult.rows.map(a => ({\n            id: a.id,\n            title: a.title,\n            content: a.content,\n            date: format(new Date(a.posted_at), 'MMMM d, yyyy')\n        }));\n\n        return {\n            employee: {\n                employeeId: employeeData.id,\n                name: `${employeeData.first_name} ${employeeData.last_name}`,\n                position: employeeData.position,\n                department: employeeData.department,\n                email: employeeData.email,\n            },\n            announcements\n        };\n    } catch (error) {\n        console.error(`Database Error fetching dashboard data for ${employeeId}:`, error);\n        throw new Error(`Failed to fetch dashboard data for employee ${employeeId}.`);\n    }\n}\n\nexport async function getAttendanceData(employeeId) {\n    const recordsQuery = \"SELECT * FROM attendance WHERE account_id = $1 ORDER BY attendance_date DESC\";\n    const accountQuery = \"SELECT available_leaves FROM accounts WHERE id = $1\";\n\n    const [recordsResult, accountResult] = await Promise.all([\n        query(recordsQuery, [employeeId]),\n        query(accountQuery, [employeeId]),\n    ]);\n\n    const records = recordsResult.rows;\n    const account = accountResult.rows[0];\n\n    const summary = {\n        daysAttended: records.filter(r => r.status === 'Present' || r.status === 'Late').length,\n        lates: records.filter(r => r.status === 'Late').length,\n        absences: records.filter(r => r.status === 'Absent').length,\n        totalHours: records.filter(r => r.status === 'Present' || r.status === 'Late').reduce((sum, r) => {\n            if(r.time_in && r.time_out) {\n                const timeIn = new Date(`1970-01-01T${r.time_in}`);\n                const timeOut = new Date(`1970-01-01T${r.time_out}`);\n                return sum + (timeOut - timeIn) / (1000 * 60 * 60);\n            }\n            return sum;\n        }, 0).toFixed(2),\n        availableLeaves: account?.available_leaves || 0,\n    };\n\n    return {\n        summary,\n        records: records.map(r => ({\n            date: format(new Date(r.attendance_date), 'MMMM d, yyyy'),\n            timeIn: r.time_in ? format(new Date(`1970-01-01T${r.time_in}`), 'HH:mm') : '--',\n            timeOut: r.time_out ? format(new Date(`1970-01-01T${r.time_out}`), 'HH:mm') : '--',\n            status: r.status\n        }))\n    };\n}\n\nexport async function getPastLeaveRequests(employeeId) {\n    const queryString = `\n        SELECT id, leave_type, start_date, end_date, status \n        FROM leave_requests \n        WHERE account_id = $1 \n        ORDER BY start_date DESC\n    `;\n    const rows = await executeQuery(queryString, [employeeId], 'Failed to fetch past leave requests.');\n    return rows.map(lr => ({\n        id: lr.id,\n        leave_type: lr.leave_type,\n        startDate: format(new Date(lr.start_date), 'yyyy-MM-dd'),\n        endDate: format(new Date(lr.end_date), 'yyyy-MM-dd'),\n        status: lr.status\n    }));\n}\n\nexport async function createLeaveRequest(leaveRequest) {\n    const { employeeId, leaveType, startDate, endDate, reason } = leaveRequest;\n    const queryString = `\n        INSERT INTO leave_requests (account_id, leave_type, start_date, end_date, reason, status)\n        VALUES ($1, $2, $3, $4, $5, 'Pending')\n    `;\n    await executeQuery(queryString, [employeeId, leaveType, startDate, endDate, reason], 'Failed to create leave request.');\n    return { success: true };\n}\n\nexport async function getPayPeriods(employeeId) {\n    const queryString = \"SELECT id, period_start, period_end, pay_date, earnings, deductions, net_pay FROM payslips WHERE account_id = $1 ORDER BY pay_date DESC\";\n    const rows = await executeQuery(queryString, [employeeId], 'Failed to fetch pay periods.');\n    return rows.map(p => ({\n        id: p.id,\n        period: `${format(new Date(p.period_start), 'yyyy-MM-dd')} - ${format(new Date(p.period_end), 'yyyy-MM-dd')}`,\n        payDate: format(new Date(p.pay_date), 'MMMM d, yyyy'),\n        earnings: p.earnings,\n        deductions: p.deductions,\n        net_pay: p.net_pay\n    }));\n}\n\nexport async function getSchedule(employeeId) {\n    const today = new Date();\n    const weekStartDate = subDays(today, (today.getDay() + 6) % 7);\n    const queryString = \"SELECT day_of_week, time_in, time_out, break_duration_minutes, is_off_day FROM schedules WHERE account_id = $1 AND week_start_date = $2\";\n    \n    const rows = await executeQuery(queryString, [employeeId, format(weekStartDate, 'yyyy-MM-dd')], 'Failed to fetch schedule.');\n\n    return ['Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday', 'Sunday'].map((day, i) => {\n        const date = addDays(weekStartDate, i);\n        const scheduledDay = rows.find(s => s.day_of_week === day);\n\n        if (scheduledDay && !scheduledDay.is_off_day) {\n            const timeIn = new Date(`1970-01-01T${scheduledDay.time_in}`);\n            const timeOut = new Date(`1970-01-01T${scheduledDay.time_out}`);\n            const hours = (timeOut - timeIn) / (1000 * 60 * 60) - (scheduledDay.break_duration_minutes / 60);\n            return {\n                day,\n                date: format(date, 'MMM dd'),\n                timeIn: format(timeIn, 'HH:mm'),\n                timeOut: format(timeOut, 'HH:mm'),\n                break: `${scheduledDay.break_duration_minutes} mins`,\n                hours: Math.round(hours)\n            };\n        }\n        return { day, date: format(date, 'MMM dd'), timeIn: 'OFF', timeOut: 'OFF', break: '-', hours: 0 };\n    });\n}\n\n\nexport async function getPendingEmployeeApprovals() {\n    const queryString = `\n        SELECT id, first_name, last_name, position, date_hired\n        FROM accounts \n        WHERE status = 'Pending Approval'`;\n    const rows = await executeQuery(queryString, [], 'Failed to fetch pending employee approvals.');\n    return rows.map(acc => ({\n        id: acc.id,\n        submittedBy: 'HR Department', // This could be joined from another table if available\n        employeeName: `${acc.first_name} ${acc.last_name}`,\n        position: acc.position,\n        submissionDate: format(new Date(acc.date_hired), 'yyyy-MM-dd')\n    }));\n}\n\nexport async function approveEmployee(employeeId) {\n    const queryString = \"UPDATE accounts SET status = 'Active' WHERE id = $1\";\n    await executeQuery(queryString, [employeeId], `Failed to approve employee ${employeeId}.`);\n}\n\nexport async function rejectEmployee(employeeId) {\n    const queryString = \"DELETE FROM accounts WHERE id = $1\";\n    await executeQuery(queryString, [employeeId], `Failed to reject employee ${employeeId}.`);\n}\n\nexport async function getEmployeeName(employeeId) {\n    const queryString = \"SELECT first_name, last_name FROM accounts WHERE id = $1\";\n    const rows = await executeQuery(queryString, [employeeId], `Failed to fetch name for employee ${employeeId}.`);\n    if (rows.length > 0) {\n        return `${rows[0].first_name} ${rows[0].last_name}`;\n    }\n    return \"Unknown Employee\";\n}\n\nexport async function getReportDetails(reportId) {\n    // This function remains a mock as there is no 'reports' table.\n    // In a real app, you would query your reports table here.\n    return null;\n}\n"],"names":[],"mappings":";;;;;;IA+DsB,uBAAA,WAAA,GAAA,CAAA,GAAA,yNAAA,CAAA,wBAAA,EAAA,8CAAA,yNAAA,CAAA,aAAA,EAAA,KAAA,GAAA,yNAAA,CAAA,mBAAA,EAAA","debugId":null}},
    {"offset": {"line": 434, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/alert-dialog.jsx"],"sourcesContent":["/**\n * @fileoverview This file defines the AlertDialog component and its parts.\n * It is a modal dialog that interrupts the user with important content and\n * requires a response. It is built on top of the Radix UI Alert Dialog primitive.\n * @see https://www.radix-ui.com/primitives/docs/components/alert-dialog\n */\n\"use client\"\n\nimport * as React from \"react\"\nimport * as AlertDialogPrimitive from \"@radix-ui/react-alert-dialog\"\n\nimport { cn } from \"@/lib/utils\"\nimport { buttonVariants } from \"@/components/ui/button\"\n\n/**\n * The root component for an alert dialog.\n */\nconst AlertDialog = AlertDialogPrimitive.Root\n\n/**\n * The trigger that opens the alert dialog.\n */\nconst AlertDialogTrigger = AlertDialogPrimitive.Trigger\n\n/**\n * A portal that renders its children into a new stacking context.\n */\nconst AlertDialogPortal = AlertDialogPrimitive.Portal\n\n/**\n * A semi-transparent overlay that is rendered behind the dialog.\n */\nconst AlertDialogOverlay = React.forwardRef(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Overlay\n    className={cn(\n      \"fixed inset-0 z-50 bg-black/80  data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0\",\n      className\n    )}\n    {...props}\n    ref={ref}\n  />\n))\nAlertDialogOverlay.displayName = AlertDialogPrimitive.Overlay.displayName\n\n/**\n * The main content of the alert dialog.\n */\nconst AlertDialogContent = React.forwardRef(({ className, ...props }, ref) => (\n  <AlertDialogPortal>\n    <AlertDialogOverlay />\n    <AlertDialogPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"fixed left-[50%] top-[50%] z-50 grid w-full max-w-lg translate-x-[-50%] translate-y-[-50%] gap-4 border bg-background p-6 shadow-lg duration-200 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[state=closed]:slide-out-to-left-1/2 data-[state=closed]:slide-out-to-top-[48%] data-[state=open]:slide-in-from-left-1/2 data-[state=open]:slide-in-from-top-[48%] sm:rounded-lg\",\n        className\n      )}\n      {...props}\n    />\n  </AlertDialogPortal>\n))\nAlertDialogContent.displayName = AlertDialogPrimitive.Content.displayName\n\n/**\n * The header of the alert dialog, containing the title and description.\n */\nconst AlertDialogHeader = ({\n  className,\n  ...props\n}) => (\n  <div\n    className={cn(\n      \"flex flex-col space-y-2 text-center sm:text-left\",\n      className\n    )}\n    {...props}\n  />\n)\nAlertDialogHeader.displayName = \"AlertDialogHeader\"\n\n/**\n * The footer of the alert dialog, containing action buttons.\n */\nconst AlertDialogFooter = ({\n  className,\n  ...props\n}) => (\n  <div\n    className={cn(\n      \"flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2\",\n      className\n    )}\n    {...props}\n  />\n)\nAlertDialogFooter.displayName = \"AlertDialogFooter\"\n\n/**\n * The title of the alert dialog.\n */\nconst AlertDialogTitle = React.forwardRef(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Title\n    ref={ref}\n    className={cn(\"text-lg font-semibold\", className)}\n    {...props}\n  />\n))\nAlertDialogTitle.displayName = AlertDialogPrimitive.Title.displayName\n\n/**\n * The description of the alert dialog.\n */\nconst AlertDialogDescription = React.forwardRef(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Description\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nAlertDialogDescription.displayName =\n  AlertDialogPrimitive.Description.displayName\n\n/**\n * The action button that typically performs the primary action of the dialog.\n */\nconst AlertDialogAction = React.forwardRef(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Action\n    ref={ref}\n    className={cn(buttonVariants(), className)}\n    {...props}\n  />\n))\nAlertDialogAction.displayName = AlertDialogPrimitive.Action.displayName\n\n/**\n * The cancel button that closes the dialog.\n */\nconst AlertDialogCancel = React.forwardRef(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Cancel\n    ref={ref}\n    className={cn(\n      buttonVariants({ variant: \"outline\" }),\n      \"mt-2 sm:mt-0\",\n      className\n    )}\n    {...props}\n  />\n))\nAlertDialogCancel.displayName = AlertDialogPrimitive.Cancel.displayName\n\nexport {\n  AlertDialog,\n  AlertDialogPortal,\n  AlertDialogOverlay,\n  AlertDialogTrigger,\n  AlertDialogContent,\n  AlertDialogHeader,\n  AlertDialogFooter,\n  AlertDialogTitle,\n  AlertDialogDescription,\n  AlertDialogAction,\n  AlertDialogCancel,\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 613, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/hr/announcements/page.jsx"],"sourcesContent":["/**\n * @fileoverview This file defines the Announcements page for the HR portal.\n * It provides HR personnel with tools to create, view, and manage company-wide announcements.\n */\n'use client';\nimport * as React from 'react';\nimport {\n  Card,\n  CardContent,\n  CardHeader,\n  CardTitle,\n  CardDescription,\n  CardFooter\n} from \"@/components/ui/card\";\nimport { Button } from \"@/components/ui/button\";\nimport { Textarea } from \"@/components/ui/textarea\";\nimport {\n    Table,\n    TableBody,\n    TableCell,\n    TableHead,\n    TableHeader,\n    TableRow,\n} from \"@/components/ui/table\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { MoreHorizontal } from \"lucide-react\";\nimport {\n    DropdownMenu,\n    DropdownMenuContent,\n    DropdownMenuItem,\n    DropdownMenuTrigger,\n} from \"@/components/ui/dropdown-menu\"\nimport { Input } from \"@/components/ui/input\";\nimport { Label } from \"@/components/ui/label\";\nimport { getPastAnnouncements } from \"@/lib/data\";\nimport {\n    AlertDialog,\n    AlertDialogAction,\n    AlertDialogCancel,\n    AlertDialogContent,\n    AlertDialogDescription,\n    AlertDialogFooter,\n    AlertDialogHeader,\n    AlertDialogTitle,\n    AlertDialogTrigger,\n} from \"@/components/ui/alert-dialog\";\n\n/**\n * Renders the HR announcements management page.\n * Allows creating, viewing, and managing company-wide announcements.\n * @returns {JSX.Element} The announcements page component.\n */\nexport default function AnnouncementsPage() {\n    const [pastAnnouncements, setPastAnnouncements] = React.useState([]);\n\n    React.useEffect(() => {\n        async function fetchAnnouncements() {\n            const data = await getPastAnnouncements();\n            setPastAnnouncements(data);\n        }\n        fetchAnnouncements();\n    }, []);\n\n\n  return (\n    <div className=\"space-y-6\">\n      <h1 className=\"text-3xl font-bold font-headline\">Company Announcements</h1>\n      \n      <div className=\"grid grid-cols-1 lg:grid-cols-3 gap-6\">\n        {/* New Announcement Form */}\n        <div className=\"lg:col-span-1\">\n            <Card>\n                <CardHeader>\n                    <CardTitle>New Announcement</CardTitle>\n                    <CardDescription>Create a new announcement for all employees.</CardDescription>\n                </CardHeader>\n                <CardContent className=\"space-y-4\">\n                    <div className=\"space-y-2\">\n                        <Label htmlFor=\"announcement-title\">Title</Label>\n                        <Input id=\"announcement-title\" placeholder=\"Enter the title\" />\n                    </div>\n                    <div className=\"space-y-2\">\n                        <Label htmlFor=\"announcement-content\">Content</Label>\n                        <Textarea id=\"announcement-content\" placeholder=\"Type your announcement here...\" className=\"min-h-[200px]\" />\n                    </div>\n                </CardContent>\n                <CardFooter className=\"flex justify-between\">\n                    {/* Actions to save as draft or post immediately */}\n                    <AlertDialog>\n                        <AlertDialogTrigger asChild>\n                            <Button variant=\"outline\">Save Draft</Button>\n                        </AlertDialogTrigger>\n                         <AlertDialogContent>\n                            <AlertDialogHeader>\n                                <AlertDialogTitle>Are you sure you want to save as draft?</AlertDialogTitle>\n                            </AlertDialogHeader>\n                            <AlertDialogFooter>\n                                <AlertDialogCancel>Cancel</AlertDialogCancel>\n                                <AlertDialogAction>Save Draft</AlertDialogAction>\n                            </AlertDialogFooter>\n                        </AlertDialogContent>\n                    </AlertDialog>\n                    <AlertDialog>\n                        <AlertDialogTrigger asChild>\n                           <Button>Post Announcement</Button>\n                        </AlertDialogTrigger>\n                         <AlertDialogContent>\n                            <AlertDialogHeader>\n                                <AlertDialogTitle>Are you sure you want to post this announcement?</AlertDialogTitle>\n                                <AlertDialogDescription>\n                                    This will make the announcement visible to all employees.\n                                </AlertDialogDescription>\n                            </AlertDialogHeader>\n                            <AlertDialogFooter>\n                                <AlertDialogCancel>Cancel</AlertDialogCancel>\n                                <AlertDialogAction>Post</AlertDialogAction>\n                            </AlertDialogFooter>\n                        </AlertDialogContent>\n                    </AlertDialog>\n                </CardFooter>\n            </Card>\n        </div>\n\n        {/* Past Announcements Table */}\n        <div className=\"lg:col-span-2\">\n            <Card>\n                <CardHeader>\n                    <CardTitle>Past Announcements</CardTitle>\n                    <CardDescription>Manage and view previous announcements.</CardDescription>\n                </CardHeader>\n                <CardContent>\n                    {pastAnnouncements.length > 0 ? (\n                        <Table>\n                            <TableHeader>\n                                <TableRow>\n                                    <TableHead>Title</TableHead>\n                                    <TableHead>Posted By</TableHead>\n                                    <TableHead>Date</TableHead>\n                                    <TableHead>Status</TableHead>\n                                    <TableHead className=\"text-right\">Actions</TableHead>\n                                </TableRow>\n                            </TableHeader>\n                            <TableBody>\n                                {pastAnnouncements.map(a => (\n                                    <TableRow key={a.id}>\n                                        <TableCell className=\"font-medium\">{a.title}</TableCell>\n                                        <TableCell>{a.postedBy}</TableCell>\n                                        <TableCell>{a.date}</TableCell>\n                                        <TableCell><Badge variant={a.status === 'Published' ? 'default' : 'secondary'} className={a.status === 'Published' ? 'bg-blue-500' : ''}>{a.status}</Badge></TableCell>\n                                        <TableCell className=\"text-right\">\n                                            {/* Dropdown menu for actions like edit, unpublish, delete */}\n                                            <DropdownMenu>\n                                                <DropdownMenuTrigger asChild>\n                                                    <Button variant=\"ghost\" className=\"h-8 w-8 p-0\">\n                                                        <MoreHorizontal />\n                                                    </Button>\n                                                </DropdownMenuTrigger>\n                                                <DropdownMenuContent align=\"end\">\n                                                    <DropdownMenuItem>Edit</DropdownMenuItem>\n                                                    <DropdownMenuItem>Unpublish</DropdownMenuItem>\n                                                    <DropdownMenuItem className=\"text-red-600\">Delete</DropdownMenuItem>\n                                                </DropdownMenuContent>\n                                            </DropdownMenu>\n                                        </TableCell>\n                                    </TableRow>\n                                ))}\n                            </TableBody>\n                        </Table>\n                    ) : (\n                        <p className=\"text-muted-foreground text-center\">No past announcements found.</p>\n                    )}\n                </CardContent>\n            </Card>\n        </div>\n      </div>\n    </div>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}}]
}